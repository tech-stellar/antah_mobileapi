//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.InventoryQtyAdjSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjBrwTableset : EpicWAS.Epicor.InventoryQtyAdjSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTable InventoryQtyAdjBrwField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTable InventoryQtyAdjBrw {
            get {
                return this.InventoryQtyAdjBrwField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryQtyAdjBrwField, value) != true)) {
                    this.InventoryQtyAdjBrwField = value;
                    this.RaisePropertyChanged("InventoryQtyAdjBrw");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicWAS.Epicor.InventoryQtyAdjSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjTableset : EpicWAS.Epicor.InventoryQtyAdjSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTable InventoryQtyAdjField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTable InventoryQtyAdj {
            get {
                return this.InventoryQtyAdjField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryQtyAdjField, value) != true)) {
                    this.InventoryQtyAdjField = value;
                    this.RaisePropertyChanged("InventoryQtyAdj");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InventoryQtyAdjTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InventoryQtyAdjRow")]
    [System.SerializableAttribute()]
    public class InventoryQtyAdjTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorExceptionData))]
    public partial class ExtensionRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.InventoryQtyAdjSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdjustQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdvancedPackageControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowNegQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeSetDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeSetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeSetShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EpicorFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FSABinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAEquipmentInstallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAEquipmentPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderResourceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MYImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnHandUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartAttrClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackInventoryAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReasonCodeReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectionAttributeSetDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectionAttributeSetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectionAttributeSetShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectionPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectionPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectionPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialNoQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TempSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TransDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitOfMeasureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseBinDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AdjustQuantity {
            get {
                return this.AdjustQuantityField;
            }
            set {
                if ((this.AdjustQuantityField.Equals(value) != true)) {
                    this.AdjustQuantityField = value;
                    this.RaisePropertyChanged("AdjustQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdvancedPackageControl {
            get {
                return this.AdvancedPackageControlField;
            }
            set {
                if ((this.AdvancedPackageControlField.Equals(value) != true)) {
                    this.AdvancedPackageControlField = value;
                    this.RaisePropertyChanged("AdvancedPackageControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowNegQty {
            get {
                return this.AllowNegQtyField;
            }
            set {
                if ((this.AllowNegQtyField.Equals(value) != true)) {
                    this.AllowNegQtyField = value;
                    this.RaisePropertyChanged("AllowNegQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeSetDescription {
            get {
                return this.AttributeSetDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeSetDescriptionField, value) != true)) {
                    this.AttributeSetDescriptionField = value;
                    this.RaisePropertyChanged("AttributeSetDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeSetID {
            get {
                return this.AttributeSetIDField;
            }
            set {
                if ((this.AttributeSetIDField.Equals(value) != true)) {
                    this.AttributeSetIDField = value;
                    this.RaisePropertyChanged("AttributeSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeSetShortDescription {
            get {
                return this.AttributeSetShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeSetShortDescriptionField, value) != true)) {
                    this.AttributeSetShortDescriptionField = value;
                    this.RaisePropertyChanged("AttributeSetShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSN {
            get {
                return this.EnableSNField;
            }
            set {
                if ((this.EnableSNField.Equals(value) != true)) {
                    this.EnableSNField = value;
                    this.RaisePropertyChanged("EnableSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EpicorFSA {
            get {
                return this.EpicorFSAField;
            }
            set {
                if ((this.EpicorFSAField.Equals(value) != true)) {
                    this.EpicorFSAField = value;
                    this.RaisePropertyChanged("EpicorFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAAction {
            get {
                return this.FSAActionField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAActionField, value) != true)) {
                    this.FSAActionField = value;
                    this.RaisePropertyChanged("FSAAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FSABin {
            get {
                return this.FSABinField;
            }
            set {
                if ((this.FSABinField.Equals(value) != true)) {
                    this.FSABinField = value;
                    this.RaisePropertyChanged("FSABin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAEquipmentInstallID {
            get {
                return this.FSAEquipmentInstallIDField;
            }
            set {
                if ((this.FSAEquipmentInstallIDField.Equals(value) != true)) {
                    this.FSAEquipmentInstallIDField = value;
                    this.RaisePropertyChanged("FSAEquipmentInstallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAEquipmentPartNum {
            get {
                return this.FSAEquipmentPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAEquipmentPartNumField, value) != true)) {
                    this.FSAEquipmentPartNumField = value;
                    this.RaisePropertyChanged("FSAEquipmentPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderNum {
            get {
                return this.FSAServiceOrderNumField;
            }
            set {
                if ((this.FSAServiceOrderNumField.Equals(value) != true)) {
                    this.FSAServiceOrderNumField = value;
                    this.RaisePropertyChanged("FSAServiceOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderResourceNum {
            get {
                return this.FSAServiceOrderResourceNumField;
            }
            set {
                if ((this.FSAServiceOrderResourceNumField.Equals(value) != true)) {
                    this.FSAServiceOrderResourceNumField = value;
                    this.RaisePropertyChanged("FSAServiceOrderResourceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MYImportNum {
            get {
                return this.MYImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MYImportNumField, value) != true)) {
                    this.MYImportNumField = value;
                    this.RaisePropertyChanged("MYImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnHandUOM {
            get {
                return this.OnHandUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.OnHandUOMField, value) != true)) {
                    this.OnHandUOMField = value;
                    this.RaisePropertyChanged("OnHandUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartAttrClassID {
            get {
                return this.PartAttrClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAttrClassIDField, value) != true)) {
                    this.PartAttrClassIDField = value;
                    this.RaisePropertyChanged("PartAttrClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackInventoryAttributes {
            get {
                return this.PartTrackInventoryAttributesField;
            }
            set {
                if ((this.PartTrackInventoryAttributesField.Equals(value) != true)) {
                    this.PartTrackInventoryAttributesField = value;
                    this.RaisePropertyChanged("PartTrackInventoryAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDescription {
            get {
                return this.ReasonCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescriptionField, value) != true)) {
                    this.ReasonCodeDescriptionField = value;
                    this.RaisePropertyChanged("ReasonCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReasonCodeReq {
            get {
                return this.ReasonCodeReqField;
            }
            set {
                if ((this.ReasonCodeReqField.Equals(value) != true)) {
                    this.ReasonCodeReqField = value;
                    this.RaisePropertyChanged("ReasonCodeReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonTypeField, value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectionAttributeSetDescription {
            get {
                return this.SelectionAttributeSetDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionAttributeSetDescriptionField, value) != true)) {
                    this.SelectionAttributeSetDescriptionField = value;
                    this.RaisePropertyChanged("SelectionAttributeSetDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectionAttributeSetID {
            get {
                return this.SelectionAttributeSetIDField;
            }
            set {
                if ((this.SelectionAttributeSetIDField.Equals(value) != true)) {
                    this.SelectionAttributeSetIDField = value;
                    this.RaisePropertyChanged("SelectionAttributeSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectionAttributeSetShortDescription {
            get {
                return this.SelectionAttributeSetShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionAttributeSetShortDescriptionField, value) != true)) {
                    this.SelectionAttributeSetShortDescriptionField = value;
                    this.RaisePropertyChanged("SelectionAttributeSetShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectionPCID {
            get {
                return this.SelectionPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionPCIDField, value) != true)) {
                    this.SelectionPCIDField = value;
                    this.RaisePropertyChanged("SelectionPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectionPartDescription {
            get {
                return this.SelectionPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionPartDescriptionField, value) != true)) {
                    this.SelectionPartDescriptionField = value;
                    this.RaisePropertyChanged("SelectionPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectionPartNum {
            get {
                return this.SelectionPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectionPartNumField, value) != true)) {
                    this.SelectionPartNumField = value;
                    this.RaisePropertyChanged("SelectionPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialNoQty {
            get {
                return this.SerialNoQtyField;
            }
            set {
                if ((this.SerialNoQtyField.Equals(value) != true)) {
                    this.SerialNoQtyField = value;
                    this.RaisePropertyChanged("SerialNoQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMCode {
            get {
                return this.StkUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMCodeField, value) != true)) {
                    this.StkUOMCodeField = value;
                    this.RaisePropertyChanged("StkUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TempSerialNo {
            get {
                return this.TempSerialNoField;
            }
            set {
                if ((this.TempSerialNoField.Equals(value) != true)) {
                    this.TempSerialNoField = value;
                    this.RaisePropertyChanged("TempSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNo {
            get {
                return this.TrackSerialNoField;
            }
            set {
                if ((this.TrackSerialNoField.Equals(value) != true)) {
                    this.TrackSerialNoField = value;
                    this.RaisePropertyChanged("TrackSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TransDate {
            get {
                return this.TransDateField;
            }
            set {
                if ((this.TransDateField.Equals(value) != true)) {
                    this.TransDateField = value;
                    this.RaisePropertyChanged("TransDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitOfMeasure {
            get {
                return this.UnitOfMeasureField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitOfMeasureField, value) != true)) {
                    this.UnitOfMeasureField = value;
                    this.RaisePropertyChanged("UnitOfMeasure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseCode {
            get {
                return this.WareHseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseCodeField, value) != true)) {
                    this.WareHseCodeField = value;
                    this.RaisePropertyChanged("WareHseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseDescription {
            get {
                return this.WareHseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseDescriptionField, value) != true)) {
                    this.WareHseDescriptionField = value;
                    this.RaisePropertyChanged("WareHseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseBinDescription {
            get {
                return this.WhseBinDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseBinDescriptionField, value) != true)) {
                    this.WhseBinDescriptionField = value;
                    this.RaisePropertyChanged("WhseBinDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationOption {
            get {
                return this.GenerationOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationOptionField, value) != true)) {
                    this.GenerationOptionField = value;
                    this.RaisePropertyChanged("GenerationOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class InventoryQtyAdjBrwRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeSetDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeSetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeSetShortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseOnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseOnHandUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonNettableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StkUOMDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseBinDescField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeSetDescription {
            get {
                return this.AttributeSetDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeSetDescriptionField, value) != true)) {
                    this.AttributeSetDescriptionField = value;
                    this.RaisePropertyChanged("AttributeSetDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeSetID {
            get {
                return this.AttributeSetIDField;
            }
            set {
                if ((this.AttributeSetIDField.Equals(value) != true)) {
                    this.AttributeSetIDField = value;
                    this.RaisePropertyChanged("AttributeSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeSetShortDescription {
            get {
                return this.AttributeSetShortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeSetShortDescriptionField, value) != true)) {
                    this.AttributeSetShortDescriptionField = value;
                    this.RaisePropertyChanged("AttributeSetShortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseOnHandQty {
            get {
                return this.BaseOnHandQtyField;
            }
            set {
                if ((this.BaseOnHandQtyField.Equals(value) != true)) {
                    this.BaseOnHandQtyField = value;
                    this.RaisePropertyChanged("BaseOnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseOnHandUOM {
            get {
                return this.BaseOnHandUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseOnHandUOMField, value) != true)) {
                    this.BaseOnHandUOMField = value;
                    this.RaisePropertyChanged("BaseOnHandUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinType {
            get {
                return this.BinTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BinTypeField, value) != true)) {
                    this.BinTypeField = value;
                    this.RaisePropertyChanged("BinType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinTypeDesc {
            get {
                return this.BinTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.BinTypeDescField, value) != true)) {
                    this.BinTypeDescField = value;
                    this.RaisePropertyChanged("BinTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemPCID {
            get {
                return this.ItemPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPCIDField, value) != true)) {
                    this.ItemPCIDField = value;
                    this.RaisePropertyChanged("ItemPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonNettable {
            get {
                return this.NonNettableField;
            }
            set {
                if ((this.NonNettableField.Equals(value) != true)) {
                    this.NonNettableField = value;
                    this.RaisePropertyChanged("NonNettable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendToFSA {
            get {
                return this.SendToFSAField;
            }
            set {
                if ((this.SendToFSAField.Equals(value) != true)) {
                    this.SendToFSAField = value;
                    this.RaisePropertyChanged("SendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMCode {
            get {
                return this.StkUOMCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMCodeField, value) != true)) {
                    this.StkUOMCodeField = value;
                    this.RaisePropertyChanged("StkUOMCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StkUOMDesc {
            get {
                return this.StkUOMDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StkUOMDescField, value) != true)) {
                    this.StkUOMDescField = value;
                    this.RaisePropertyChanged("StkUOMDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHseCode {
            get {
                return this.WareHseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHseCodeField, value) != true)) {
                    this.WareHseCodeField = value;
                    this.RaisePropertyChanged("WareHseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseBinDesc {
            get {
                return this.WhseBinDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseBinDescField, value) != true)) {
                    this.WhseBinDescField = value;
                    this.RaisePropertyChanged("WhseBinDesc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicWAS.Epicor.InventoryQtyAdjSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InventoryQtyAdjRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdjustQuantity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitOfMeasure = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNoQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TempSerialNo = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeReq = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowNegQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSN = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandUOM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDescription = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYImportNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EpicorFSA = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderResourceNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAAction = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEquipmentPartNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEquipmentInstallID = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNo = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSABin = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionPCID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionPartNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionPartDescription = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancedPackageControl = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetID = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetDescription = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetShortDescription = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionAttributeSetID = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionAttributeSetDescription = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectionAttributeSetShortDescription = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackInventoryAttributes = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartAttrClassID = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseDescription = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseBinDescription = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 60,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationOption = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="InventoryQtyAdjBrwTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="InventoryQtyAdjBrwRow")]
    [System.SerializableAttribute()]
    public class InventoryQtyAdjBrwTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InventoryQtyAdjBrwRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum InventoryQtyAdjBrwRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonNettable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHseCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseBinDesc = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StkUOMDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseOnHandQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseOnHandUOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinTypeDesc = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToFSA = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemPCID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetDescription = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetShortDescription = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 22,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:InventoryQtyAdj", ConfigurationName="Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract")]
    public interface InventoryQtyAdjSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        bool CheckSN(string partNum, string warehouseCode, string ipPCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        System.Threading.Tasks.Task<bool> CheckSNAsync(string partNum, string warehouseCode, string ipPCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNFSA", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNFSAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNFSAEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        bool CheckSNFSA(string partNum, string warehouseCode, string binNum, string ipPCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNFSA", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/CheckSNFSAResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="serialNumbersRequired")]
        System.Threading.Tasks.Task<bool> CheckSNFSAAsync(string partNum, string warehouseCode, string binNum, string ipPCID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPCIDAdjustmentInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPCIDAdjustmentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPCIDAdjustmentInfoEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoResponse GetPCIDAdjustmentInfo(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPCIDAdjustmentInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPCIDAdjustmentInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoResponse> GetPCIDAdjustmentInfoAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjPCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjPCIDEpicorFau" +
            "ltDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset GetInventoryQtyAdjPCID(string partnumber, string uomCode, string pcid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjPCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjPCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset> GetInventoryQtyAdjPCIDAsync(string partnumber, string uomCode, string pcid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset GetInventoryQtyAdj(string partnumber, string uomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset> GetInventoryQtyAdjAsync(string partnumber, string uomCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclManage" +
            "d", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclManage" +
            "dResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclManage" +
            "dEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedResponse GetInventoryQtyAdjBrwInclManaged(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclManage" +
            "d", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclManage" +
            "dResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedResponse> GetInventoryQtyAdjBrwInclManagedAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclPCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclPCIDRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclPCIDEp" +
            "icorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDResponse GetInventoryQtyAdjBrwInclPCID(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclPCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwInclPCIDRe" +
            "sponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDResponse> GetInventoryQtyAdjBrwInclPCIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrw", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwResponse GetInventoryQtyAdjBrw(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrw", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetInventoryQtyAdjBrwResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwResponse> GetInventoryQtyAdjBrwAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoResponse GetPartXRefInfo(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartXRefInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsEpi" +
            "corFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID, string ipPCID, string ipLotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID, string ipPCID, string ipLotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatus", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="kitMessage")]
        string KitPartStatus(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatus", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/KitPartStatusResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="kitMessage")]
        System.Threading.Tasks.Task<string> KitPartStatusAsync(string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjResponse PreSetInventoryQtyAdj(EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/PreSetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjResponse> PreSetInventoryQtyAdjAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjResponse SetInventoryQtyAdj(EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdj", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/SetInventoryQtyAdjResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjResponse> SetInventoryQtyAdjAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNResponse ValidateSN(EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSN", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ValidateSNResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestResponse NegativeInventoryTest(EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/NegativeInventoryTestResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPart", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartResponse FindPart(EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPart", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/FindPartResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartResponse> FindPartAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDResponse GetPartFromRowID(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/GetPartFromRowIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDResponse> GetPartFromRowIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOM", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMResponse ChangeUOM(EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOM", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/ChangeUOMResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMResponse> ChangeUOMAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeUnitOfMeasure", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeUnitOfMeasureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeUnitOfMeasureEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureResponse OnChangeUnitOfMeasure(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeUnitOfMeasure", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeUnitOfMeasureResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureResponse> OnChangeUnitOfMeasureAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeLotNum", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeLotNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeLotNumEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumResponse OnChangeLotNum(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeLotNum", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangeLotNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumResponse> OnChangeLotNumAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangePCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.InventoryQtyAdjSvc.EpicorFaultDetail), Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangePCIDEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDResponse OnChangePCID(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangePCID", ReplyAction="Erp:BO:InventoryQtyAdj/InventoryQtyAdjSvcContract/OnChangePCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDResponse> OnChangePCIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPCIDAdjustmentInfo", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPCIDAdjustmentInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public bool doStatusValidations;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset inventoryQtyAdj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset inventoryQtyAdjBrw;
        
        public GetPCIDAdjustmentInfoRequest() {
        }
        
        public GetPCIDAdjustmentInfoRequest(string pcid, bool doStatusValidations, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset inventoryQtyAdj, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset inventoryQtyAdjBrw) {
            this.pcid = pcid;
            this.doStatusValidations = doStatusValidations;
            this.inventoryQtyAdj = inventoryQtyAdj;
            this.inventoryQtyAdjBrw = inventoryQtyAdjBrw;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPCIDAdjustmentInfoResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPCIDAdjustmentInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset inventoryQtyAdj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset inventoryQtyAdjBrw;
        
        public GetPCIDAdjustmentInfoResponse() {
        }
        
        public GetPCIDAdjustmentInfoResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset inventoryQtyAdj, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset inventoryQtyAdjBrw) {
            this.inventoryQtyAdj = inventoryQtyAdj;
            this.inventoryQtyAdjBrw = inventoryQtyAdjBrw;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwInclManaged", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwInclManagedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string wareHouseCode;
        
        public GetInventoryQtyAdjBrwInclManagedRequest() {
        }
        
        public GetInventoryQtyAdjBrwInclManagedRequest(string partNum, string wareHouseCode) {
            this.partNum = partNum;
            this.wareHouseCode = wareHouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwInclManagedResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwInclManagedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclManagedResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string primaryBin;
        
        public GetInventoryQtyAdjBrwInclManagedResponse() {
        }
        
        public GetInventoryQtyAdjBrwInclManagedResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclManagedResult, string primaryBin) {
            this.GetInventoryQtyAdjBrwInclManagedResult = GetInventoryQtyAdjBrwInclManagedResult;
            this.primaryBin = primaryBin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwInclPCID", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwInclPCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public int attributeSetID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string wareHouseCode;
        
        public GetInventoryQtyAdjBrwInclPCIDRequest() {
        }
        
        public GetInventoryQtyAdjBrwInclPCIDRequest(string partNum, int attributeSetID, string wareHouseCode) {
            this.partNum = partNum;
            this.attributeSetID = attributeSetID;
            this.wareHouseCode = wareHouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwInclPCIDResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwInclPCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclPCIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string primaryBin;
        
        public GetInventoryQtyAdjBrwInclPCIDResponse() {
        }
        
        public GetInventoryQtyAdjBrwInclPCIDResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclPCIDResult, string primaryBin) {
            this.GetInventoryQtyAdjBrwInclPCIDResult = GetInventoryQtyAdjBrwInclPCIDResult;
            this.primaryBin = primaryBin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrw", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public int attributeSetID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string wareHouseCode;
        
        public GetInventoryQtyAdjBrwRequest() {
        }
        
        public GetInventoryQtyAdjBrwRequest(string partNum, int attributeSetID, string wareHouseCode) {
            this.partNum = partNum;
            this.attributeSetID = attributeSetID;
            this.wareHouseCode = wareHouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInventoryQtyAdjBrwResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetInventoryQtyAdjBrwResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string primaryBin;
        
        public GetInventoryQtyAdjBrwResponse() {
        }
        
        public GetInventoryQtyAdjBrwResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwResult, string primaryBin) {
            this.GetInventoryQtyAdjBrwResult = GetInventoryQtyAdjBrwResult;
            this.primaryBin = primaryBin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfo", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartXRefInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string sysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string rowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string uomCode;
        
        public GetPartXRefInfoRequest() {
        }
        
        public GetPartXRefInfoRequest(string partNum, string sysRowID, string rowType, string uomCode) {
            this.partNum = partNum;
            this.sysRowID = sysRowID;
            this.rowType = rowType;
            this.uomCode = uomCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfoResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartXRefInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string uomCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string serialWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=4)]
        public bool multipleMatch;
        
        public GetPartXRefInfoResponse() {
        }
        
        public GetPartXRefInfoResponse(string partNum, string uomCode, string serialWarning, string questionString, bool multipleMatch) {
            this.partNum = partNum;
            this.uomCode = uomCode;
            this.serialWarning = serialWarning;
            this.questionString = questionString;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreSetInventoryQtyAdj", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class PreSetInventoryQtyAdjRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public PreSetInventoryQtyAdjRequest() {
        }
        
        public PreSetInventoryQtyAdjRequest(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreSetInventoryQtyAdjResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class PreSetInventoryQtyAdjResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public bool requiresUserInput;
        
        public PreSetInventoryQtyAdjResponse() {
        }
        
        public PreSetInventoryQtyAdjResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds, bool requiresUserInput) {
            this.ds = ds;
            this.requiresUserInput = requiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInventoryQtyAdj", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class SetInventoryQtyAdjRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public SetInventoryQtyAdjRequest() {
        }
        
        public SetInventoryQtyAdjRequest(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetInventoryQtyAdjResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class SetInventoryQtyAdjResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string partTranPKs;
        
        public SetInventoryQtyAdjResponse() {
        }
        
        public SetInventoryQtyAdjResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds, string partTranPKs) {
            this.ds = ds;
            this.partTranPKs = partTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSN", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ValidateSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string serialNumber;
        
        public ValidateSNRequest() {
        }
        
        public ValidateSNRequest(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds, string serialNumber) {
            this.ds = ds;
            this.serialNumber = serialNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ValidateSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public bool isVoided;
        
        public ValidateSNResponse() {
        }
        
        public ValidateSNResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds, bool isVoided) {
            this.ds = ds;
            this.isVoided = isVoided;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTest", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class NegativeInventoryTestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=3)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=4)]
        public int pcAttributeSetID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=5)]
        public string pcPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=6)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=7)]
        public int pdDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=8)]
        public decimal ipSellingQuantity;
        
        public NegativeInventoryTestRequest() {
        }
        
        public NegativeInventoryTestRequest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, int pcAttributeSetID, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity) {
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcAttributeSetID = pcAttributeSetID;
            this.pcPCID = pcPCID;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
            this.ipSellingQuantity = ipSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTestResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class NegativeInventoryTestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcNeqQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string pcMessage;
        
        public NegativeInventoryTestResponse() {
        }
        
        public NegativeInventoryTestResponse(string pcNeqQtyAction, string pcMessage) {
            this.pcNeqQtyAction = pcNeqQtyAction;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPart", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class FindPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string ipPartNum;
        
        public FindPartRequest() {
        }
        
        public FindPartRequest(string ipPartNum) {
            this.ipPartNum = ipPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPartResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class FindPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string opUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=2)]
        public string opMatchType;
        
        public FindPartResponse() {
        }
        
        public FindPartResponse(string opPartNum, string opUOM, string opMatchType) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
            this.opMatchType = opMatchType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowID", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartFromRowIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string ipRowType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string ipRowID;
        
        public GetPartFromRowIDRequest() {
        }
        
        public GetPartFromRowIDRequest(string ipRowType, string ipRowID) {
            this.ipRowType = ipRowType;
            this.ipRowID = ipRowID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartFromRowIDResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class GetPartFromRowIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string opPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public string opUOM;
        
        public GetPartFromRowIDResponse() {
        }
        
        public GetPartFromRowIDResponse(string opPartNum, string opUOM) {
            this.opPartNum = opPartNum;
            this.opUOM = opUOM;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOM", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ChangeUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string UOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public ChangeUOMRequest() {
        }
        
        public ChangeUOMRequest(string UOM, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.UOM = UOM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeUOMResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class ChangeUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public ChangeUOMResponse() {
        }
        
        public ChangeUOMResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUnitOfMeasure", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangeUnitOfMeasureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string ium;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangeUnitOfMeasureRequest() {
        }
        
        public OnChangeUnitOfMeasureRequest(string ium, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ium = ium;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeUnitOfMeasureResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangeUnitOfMeasureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangeUnitOfMeasureResponse() {
        }
        
        public OnChangeUnitOfMeasureResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLotNum", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangeLotNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string lotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangeLotNumRequest() {
        }
        
        public OnChangeLotNumRequest(string lotNum, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.lotNum = lotNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLotNumResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangeLotNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangeLotNumResponse() {
        }
        
        public OnChangeLotNumResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCID", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangePCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=1)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangePCIDRequest() {
        }
        
        public OnChangePCIDRequest(string pcid, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.pcid = pcid;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDResponse", WrapperNamespace="Erp:BO:InventoryQtyAdj", IsWrapped=true)]
    public partial class OnChangePCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:InventoryQtyAdj", Order=0)]
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds;
        
        public OnChangePCIDResponse() {
        }
        
        public OnChangePCIDResponse(EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InventoryQtyAdjSvcContractChannel : EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryQtyAdjSvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract>, EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract {
        
        public InventoryQtyAdjSvcContractClient() {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryQtyAdjSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryQtyAdjSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckSN(string partNum, string warehouseCode, string ipPCID) {
            return base.Channel.CheckSN(partNum, warehouseCode, ipPCID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSNAsync(string partNum, string warehouseCode, string ipPCID) {
            return base.Channel.CheckSNAsync(partNum, warehouseCode, ipPCID);
        }
        
        public bool CheckSNFSA(string partNum, string warehouseCode, string binNum, string ipPCID) {
            return base.Channel.CheckSNFSA(partNum, warehouseCode, binNum, ipPCID);
        }
        
        public System.Threading.Tasks.Task<bool> CheckSNFSAAsync(string partNum, string warehouseCode, string binNum, string ipPCID) {
            return base.Channel.CheckSNFSAAsync(partNum, warehouseCode, binNum, ipPCID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetPCIDAdjustmentInfo(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest request) {
            return base.Channel.GetPCIDAdjustmentInfo(request);
        }
        
        public void GetPCIDAdjustmentInfo(string pcid, bool doStatusValidations, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset inventoryQtyAdj, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset inventoryQtyAdjBrw) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest();
            inValue.pcid = pcid;
            inValue.doStatusValidations = doStatusValidations;
            inValue.inventoryQtyAdj = inventoryQtyAdj;
            inValue.inventoryQtyAdjBrw = inventoryQtyAdjBrw;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetPCIDAdjustmentInfo(inValue);
            inventoryQtyAdj = retVal.inventoryQtyAdj;
            inventoryQtyAdjBrw = retVal.inventoryQtyAdjBrw;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoResponse> GetPCIDAdjustmentInfoAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPCIDAdjustmentInfoRequest request) {
            return base.Channel.GetPCIDAdjustmentInfoAsync(request);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset GetInventoryQtyAdjPCID(string partnumber, string uomCode, string pcid) {
            return base.Channel.GetInventoryQtyAdjPCID(partnumber, uomCode, pcid);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset> GetInventoryQtyAdjPCIDAsync(string partnumber, string uomCode, string pcid) {
            return base.Channel.GetInventoryQtyAdjPCIDAsync(partnumber, uomCode, pcid);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset GetInventoryQtyAdj(string partnumber, string uomCode) {
            return base.Channel.GetInventoryQtyAdj(partnumber, uomCode);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset> GetInventoryQtyAdjAsync(string partnumber, string uomCode) {
            return base.Channel.GetInventoryQtyAdjAsync(partnumber, uomCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetInventoryQtyAdjBrwInclManaged(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwInclManaged(request);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclManaged(string partNum, string wareHouseCode, out string primaryBin) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest();
            inValue.partNum = partNum;
            inValue.wareHouseCode = wareHouseCode;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetInventoryQtyAdjBrwInclManaged(inValue);
            primaryBin = retVal.primaryBin;
            return retVal.GetInventoryQtyAdjBrwInclManagedResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedResponse> GetInventoryQtyAdjBrwInclManagedAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclManagedRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwInclManagedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetInventoryQtyAdjBrwInclPCID(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwInclPCID(request);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrwInclPCID(string partNum, int attributeSetID, string wareHouseCode, out string primaryBin) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest();
            inValue.partNum = partNum;
            inValue.attributeSetID = attributeSetID;
            inValue.wareHouseCode = wareHouseCode;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetInventoryQtyAdjBrwInclPCID(inValue);
            primaryBin = retVal.primaryBin;
            return retVal.GetInventoryQtyAdjBrwInclPCIDResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDResponse> GetInventoryQtyAdjBrwInclPCIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwInclPCIDRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwInclPCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetInventoryQtyAdjBrw(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest request) {
            return base.Channel.GetInventoryQtyAdjBrw(request);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjBrwTableset GetInventoryQtyAdjBrw(string partNum, int attributeSetID, string wareHouseCode, out string primaryBin) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest();
            inValue.partNum = partNum;
            inValue.attributeSetID = attributeSetID;
            inValue.wareHouseCode = wareHouseCode;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetInventoryQtyAdjBrw(inValue);
            primaryBin = retVal.primaryBin;
            return retVal.GetInventoryQtyAdjBrwResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwResponse> GetInventoryQtyAdjBrwAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetInventoryQtyAdjBrwRequest request) {
            return base.Channel.GetInventoryQtyAdjBrwAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetPartXRefInfo(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfo(request);
        }
        
        public string GetPartXRefInfo(ref string partNum, string sysRowID, string rowType, ref string uomCode, out string questionString, out bool multipleMatch) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest();
            inValue.partNum = partNum;
            inValue.sysRowID = sysRowID;
            inValue.rowType = rowType;
            inValue.uomCode = uomCode;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetPartXRefInfo(inValue);
            partNum = retVal.partNum;
            uomCode = retVal.uomCode;
            questionString = retVal.questionString;
            multipleMatch = retVal.multipleMatch;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfoAsync(request);
        }
        
        public EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID, string ipPCID, string ipLotNum) {
            return base.Channel.GetSelectSerialNumbersParams(ipCompany, ipWareHseCode, ipPartNum, ipAdjustQuantity, ipBinNum, ipUnitOfMeasure, ipSysRowID, ipPCID, ipLotNum);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipCompany, string ipWareHseCode, string ipPartNum, decimal ipAdjustQuantity, string ipBinNum, string ipUnitOfMeasure, System.Guid ipSysRowID, string ipPCID, string ipLotNum) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(ipCompany, ipWareHseCode, ipPartNum, ipAdjustQuantity, ipBinNum, ipUnitOfMeasure, ipSysRowID, ipPCID, ipLotNum);
        }
        
        public string KitPartStatus(string partNum) {
            return base.Channel.KitPartStatus(partNum);
        }
        
        public System.Threading.Tasks.Task<string> KitPartStatusAsync(string partNum) {
            return base.Channel.KitPartStatusAsync(partNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.PreSetInventoryQtyAdj(EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest request) {
            return base.Channel.PreSetInventoryQtyAdj(request);
        }
        
        public bool PreSetInventoryQtyAdj(ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).PreSetInventoryQtyAdj(inValue);
            ds = retVal.ds;
            return retVal.requiresUserInput;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjResponse> PreSetInventoryQtyAdjAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.PreSetInventoryQtyAdjRequest request) {
            return base.Channel.PreSetInventoryQtyAdjAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.SetInventoryQtyAdj(EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest request) {
            return base.Channel.SetInventoryQtyAdj(request);
        }
        
        public string SetInventoryQtyAdj(ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).SetInventoryQtyAdj(inValue);
            ds = retVal.ds;
            return retVal.partTranPKs;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjResponse> SetInventoryQtyAdjAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.SetInventoryQtyAdjRequest request) {
            return base.Channel.SetInventoryQtyAdjAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.ValidateSN(EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest request) {
            return base.Channel.ValidateSN(request);
        }
        
        public bool ValidateSN(ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds, string serialNumber) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest();
            inValue.ds = ds;
            inValue.serialNumber = serialNumber;
            EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).ValidateSN(inValue);
            ds = retVal.ds;
            return retVal.isVoided;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.ValidateSNRequest request) {
            return base.Channel.ValidateSNAsync(request);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.NegativeInventoryTest(EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTest(request);
        }
        
        public string NegativeInventoryTest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, int pcAttributeSetID, string pcPCID, string pcDimCode, int pdDimConvFactor, decimal ipSellingQuantity, out string pcMessage) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest();
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcAttributeSetID = pcAttributeSetID;
            inValue.pcPCID = pcPCID;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            inValue.ipSellingQuantity = ipSellingQuantity;
            EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).NegativeInventoryTest(inValue);
            pcMessage = retVal.pcMessage;
            return retVal.pcNeqQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.FindPart(EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest request) {
            return base.Channel.FindPart(request);
        }
        
        public string FindPart(string ipPartNum, out string opUOM, out string opMatchType) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest();
            inValue.ipPartNum = ipPartNum;
            EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).FindPart(inValue);
            opUOM = retVal.opUOM;
            opMatchType = retVal.opMatchType;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartResponse> FindPartAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.FindPartRequest request) {
            return base.Channel.FindPartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.GetPartFromRowID(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowID(request);
        }
        
        public string GetPartFromRowID(string ipRowType, string ipRowID, out string opUOM) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest();
            inValue.ipRowType = ipRowType;
            inValue.ipRowID = ipRowID;
            EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).GetPartFromRowID(inValue);
            opUOM = retVal.opUOM;
            return retVal.opPartNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDResponse> GetPartFromRowIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.GetPartFromRowIDRequest request) {
            return base.Channel.GetPartFromRowIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.ChangeUOM(EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest request) {
            return base.Channel.ChangeUOM(request);
        }
        
        public void ChangeUOM(string UOM, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest();
            inValue.UOM = UOM;
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).ChangeUOM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMResponse> ChangeUOMAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.ChangeUOMRequest request) {
            return base.Channel.ChangeUOMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.OnChangeUnitOfMeasure(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest request) {
            return base.Channel.OnChangeUnitOfMeasure(request);
        }
        
        public void OnChangeUnitOfMeasure(string ium, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest();
            inValue.ium = ium;
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).OnChangeUnitOfMeasure(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureResponse> OnChangeUnitOfMeasureAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeUnitOfMeasureRequest request) {
            return base.Channel.OnChangeUnitOfMeasureAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.OnChangeLotNum(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest request) {
            return base.Channel.OnChangeLotNum(request);
        }
        
        public void OnChangeLotNum(string lotNum, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest();
            inValue.lotNum = lotNum;
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).OnChangeLotNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumResponse> OnChangeLotNumAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangeLotNumRequest request) {
            return base.Channel.OnChangeLotNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDResponse EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract.OnChangePCID(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest request) {
            return base.Channel.OnChangePCID(request);
        }
        
        public void OnChangePCID(string pcid, ref EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjTableset ds) {
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest inValue = new EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest();
            inValue.pcid = pcid;
            inValue.ds = ds;
            EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDResponse retVal = ((EpicWAS.Epicor.InventoryQtyAdjSvc.InventoryQtyAdjSvcContract)(this)).OnChangePCID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDResponse> OnChangePCIDAsync(EpicWAS.Epicor.InventoryQtyAdjSvc.OnChangePCIDRequest request) {
            return base.Channel.OnChangePCIDAsync(request);
        }
    }
}
