//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.ReceiptSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvHeadListTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadListTable RcvHeadListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadListTable RcvHeadList {
            get {
                return this.RcvHeadListField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadListField, value) != true)) {
                    this.RcvHeadListField = value;
                    this.RaisePropertyChanged("RcvHeadList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtReceiptTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtReceiptTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlTable PendingRcvDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlTable RcvDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchTable RcvDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetTable RcvDtlAttrValueSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxTable RcvDtlTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDutyTable RcvDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadTable RcvHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchTable RcvHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxTable RcvHeadTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscTable RcvMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxTable RcvMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SupplierXRefTable SupplierXRefField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlTable PendingRcvDtl {
            get {
                return this.PendingRcvDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingRcvDtlField, value) != true)) {
                    this.PendingRcvDtlField = value;
                    this.RaisePropertyChanged("PendingRcvDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlTable RcvDtl {
            get {
                return this.RcvDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlField, value) != true)) {
                    this.RcvDtlField = value;
                    this.RaisePropertyChanged("RcvDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchTable RcvDtlAttch {
            get {
                return this.RcvDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlAttchField, value) != true)) {
                    this.RcvDtlAttchField = value;
                    this.RaisePropertyChanged("RcvDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetTable RcvDtlAttrValueSet {
            get {
                return this.RcvDtlAttrValueSetField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlAttrValueSetField, value) != true)) {
                    this.RcvDtlAttrValueSetField = value;
                    this.RaisePropertyChanged("RcvDtlAttrValueSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxTable RcvDtlTax {
            get {
                return this.RcvDtlTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlTaxField, value) != true)) {
                    this.RcvDtlTaxField = value;
                    this.RaisePropertyChanged("RcvDtlTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDutyTable RcvDuty {
            get {
                return this.RcvDutyField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDutyField, value) != true)) {
                    this.RcvDutyField = value;
                    this.RaisePropertyChanged("RcvDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadTable RcvHead {
            get {
                return this.RcvHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadField, value) != true)) {
                    this.RcvHeadField = value;
                    this.RaisePropertyChanged("RcvHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchTable RcvHeadAttch {
            get {
                return this.RcvHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadAttchField, value) != true)) {
                    this.RcvHeadAttchField = value;
                    this.RaisePropertyChanged("RcvHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxTable RcvHeadTax {
            get {
                return this.RcvHeadTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadTaxField, value) != true)) {
                    this.RcvHeadTaxField = value;
                    this.RaisePropertyChanged("RcvHeadTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscTable RcvMisc {
            get {
                return this.RcvMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvMiscField, value) != true)) {
                    this.RcvMiscField = value;
                    this.RaisePropertyChanged("RcvMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxTable RcvMiscTax {
            get {
                return this.RcvMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvMiscTaxField, value) != true)) {
                    this.RcvMiscTaxField = value;
                    this.RaisePropertyChanged("RcvMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SupplierXRefTable SupplierXRef {
            get {
                return this.SupplierXRefField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierXRefField, value) != true)) {
                    this.SupplierXRefField = value;
                    this.RaisePropertyChanged("SupplierXRef");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MassReceiptTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MassReceiptTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.MassReceiptTable MassReceiptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptTable MassReceipt {
            get {
                return this.MassReceiptField;
            }
            set {
                if ((object.ReferenceEquals(this.MassReceiptField, value) != true)) {
                    this.MassReceiptField = value;
                    this.RaisePropertyChanged("MassReceipt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerTrackingTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerTrackingTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailTable ContainerDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchTable ContainerDetailAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxTable ContainerDetailTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDutyTable ContainerDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTable ContainerHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchTable ContainerHeaderAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxTable ContainerHeaderTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerMiscTable ContainerMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxTable ContainerMiscTaxField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailTable ContainerDetail {
            get {
                return this.ContainerDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerDetailField, value) != true)) {
                    this.ContainerDetailField = value;
                    this.RaisePropertyChanged("ContainerDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchTable ContainerDetailAttch {
            get {
                return this.ContainerDetailAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerDetailAttchField, value) != true)) {
                    this.ContainerDetailAttchField = value;
                    this.RaisePropertyChanged("ContainerDetailAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxTable ContainerDetailTax {
            get {
                return this.ContainerDetailTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerDetailTaxField, value) != true)) {
                    this.ContainerDetailTaxField = value;
                    this.RaisePropertyChanged("ContainerDetailTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDutyTable ContainerDuty {
            get {
                return this.ContainerDutyField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerDutyField, value) != true)) {
                    this.ContainerDutyField = value;
                    this.RaisePropertyChanged("ContainerDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTable ContainerHeader {
            get {
                return this.ContainerHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerHeaderField, value) != true)) {
                    this.ContainerHeaderField = value;
                    this.RaisePropertyChanged("ContainerHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchTable ContainerHeaderAttch {
            get {
                return this.ContainerHeaderAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerHeaderAttchField, value) != true)) {
                    this.ContainerHeaderAttchField = value;
                    this.RaisePropertyChanged("ContainerHeaderAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxTable ContainerHeaderTax {
            get {
                return this.ContainerHeaderTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerHeaderTaxField, value) != true)) {
                    this.ContainerHeaderTaxField = value;
                    this.RaisePropertyChanged("ContainerHeaderTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerMiscTable ContainerMisc {
            get {
                return this.ContainerMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerMiscField, value) != true)) {
                    this.ContainerMiscField = value;
                    this.RaisePropertyChanged("ContainerMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxTable ContainerMiscTax {
            get {
                return this.ContainerMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerMiscTaxField, value) != true)) {
                    this.ContainerMiscTaxField = value;
                    this.RaisePropertyChanged("ContainerMiscTax");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiptTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReceiptTableset : EpicWAS.Epicor.ReceiptSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlTable PendingRcvDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlTable RcvDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchTable RcvDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetTable RcvDtlAttrValueSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxTable RcvDtlTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDutyTable RcvDutyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadTable RcvHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchTable RcvHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxTable RcvHeadTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscTable RcvMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxTable RcvMiscTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SupplierXRefTable SupplierXRefField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlTable PendingRcvDtl {
            get {
                return this.PendingRcvDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.PendingRcvDtlField, value) != true)) {
                    this.PendingRcvDtlField = value;
                    this.RaisePropertyChanged("PendingRcvDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlTable RcvDtl {
            get {
                return this.RcvDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlField, value) != true)) {
                    this.RcvDtlField = value;
                    this.RaisePropertyChanged("RcvDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchTable RcvDtlAttch {
            get {
                return this.RcvDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlAttchField, value) != true)) {
                    this.RcvDtlAttchField = value;
                    this.RaisePropertyChanged("RcvDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetTable RcvDtlAttrValueSet {
            get {
                return this.RcvDtlAttrValueSetField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlAttrValueSetField, value) != true)) {
                    this.RcvDtlAttrValueSetField = value;
                    this.RaisePropertyChanged("RcvDtlAttrValueSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxTable RcvDtlTax {
            get {
                return this.RcvDtlTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDtlTaxField, value) != true)) {
                    this.RcvDtlTaxField = value;
                    this.RaisePropertyChanged("RcvDtlTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDutyTable RcvDuty {
            get {
                return this.RcvDutyField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvDutyField, value) != true)) {
                    this.RcvDutyField = value;
                    this.RaisePropertyChanged("RcvDuty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadTable RcvHead {
            get {
                return this.RcvHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadField, value) != true)) {
                    this.RcvHeadField = value;
                    this.RaisePropertyChanged("RcvHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchTable RcvHeadAttch {
            get {
                return this.RcvHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadAttchField, value) != true)) {
                    this.RcvHeadAttchField = value;
                    this.RaisePropertyChanged("RcvHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxTable RcvHeadTax {
            get {
                return this.RcvHeadTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvHeadTaxField, value) != true)) {
                    this.RcvHeadTaxField = value;
                    this.RaisePropertyChanged("RcvHeadTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscTable RcvMisc {
            get {
                return this.RcvMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvMiscField, value) != true)) {
                    this.RcvMiscField = value;
                    this.RaisePropertyChanged("RcvMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxTable RcvMiscTax {
            get {
                return this.RcvMiscTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvMiscTaxField, value) != true)) {
                    this.RcvMiscTaxField = value;
                    this.RaisePropertyChanged("RcvMiscTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SupplierXRefTable SupplierXRef {
            get {
                return this.SupplierXRefField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierXRefField, value) != true)) {
                    this.SupplierXRefField = value;
                    this.RaisePropertyChanged("SupplierXRef");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.ReceiptSvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PendingRcvDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PendingRcvDtlRow")]
    [System.SerializableAttribute()]
    public class PendingRcvDtlTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvDtlRow")]
    [System.SerializableAttribute()]
    public class RcvDtlTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvDtlRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvDtlAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvDtlAttchRow")]
    [System.SerializableAttribute()]
    public class RcvDtlAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvDtlAttrValueSetTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvDtlAttrValueSetRow")]
    [System.SerializableAttribute()]
    public class RcvDtlAttrValueSetTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvDtlTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvDtlTaxRow")]
    [System.SerializableAttribute()]
    public class RcvDtlTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvDutyTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvDutyRow")]
    [System.SerializableAttribute()]
    public class RcvDutyTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvDutyRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvHeadTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvHeadRow")]
    [System.SerializableAttribute()]
    public class RcvHeadTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvHeadRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvHeadAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvHeadAttchRow")]
    [System.SerializableAttribute()]
    public class RcvHeadAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvHeadTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvHeadTaxRow")]
    [System.SerializableAttribute()]
    public class RcvHeadTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvMiscRow")]
    [System.SerializableAttribute()]
    public class RcvMiscTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvMiscRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvMiscTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvMiscTaxRow")]
    [System.SerializableAttribute()]
    public class RcvMiscTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.SNFormatRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SupplierXRefTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SupplierXRefRow")]
    [System.SerializableAttribute()]
    public class SupplierXRefTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.SupplierXRefRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDutyTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDutyRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SupplierXRefTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SupplierXRefRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SupplierXRefRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDutyTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDutyRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorExceptionData))]
    public partial class ExtensionRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SupplierXRefRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SupplierXRefRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.RcvHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.MassReceiptRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerDutyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.ReceiptSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationOption {
            get {
                return this.GenerationOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationOptionField, value) != true)) {
                    this.GenerationOptionField = value;
                    this.RaisePropertyChanged("GenerationOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PendingRcvDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PendingRcvDtlRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.PendingRcvDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQuantity {
            get {
                return this.OurQuantityField;
            }
            set {
                if ((this.OurQuantityField.Equals(value) != true)) {
                    this.OurQuantityField = value;
                    this.RaisePropertyChanged("OurQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORel {
            get {
                return this.PORelField;
            }
            set {
                if ((this.PORelField.Equals(value) != true)) {
                    this.PORelField = value;
                    this.RaisePropertyChanged("PORel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvDtlRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLCUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdSuppPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AsmPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblySeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AttributeBackoutRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConsolidatedPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConvOverrideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostPerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostPerFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveredCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeDimCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayUMFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableBinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableDimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInventoryAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSupplierXRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableUpliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EpicorFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtNonRecoverableCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FailedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbPackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HHReceiveToPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ICPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportedFromDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCSpecLineDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InOurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InPOTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InputOurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InspectedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InspectedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InspectionFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InspectionPendingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InspectionReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectorIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IntQueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IssuedCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobRequiredQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LCFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCSpecLineDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MangCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MangCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MangCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MassReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonConformnceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumLabelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrigCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurUnInvcReceiptQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PCIDOutboundContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PODueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal POFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLinePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineVenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumApprovalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PONumApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PONumConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumShipToConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POPUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelArrivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal POTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PackSlipInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumAttrClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PassedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProjProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurPointPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodePurchDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QtyOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RcvdSMIQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainingSMIQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1VendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2VendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3VendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SMICompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SMITransNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SNStusChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrOurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrVendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SearchPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SetToLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipRcvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipMaterialQueueCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplierUnInvcReceiptQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagMtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagOprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThisTranUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotCostVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDutiesAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLineAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotWHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UsePurchaseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VenRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLCUpdate {
            get {
                return this.AllowLCUpdateField;
            }
            set {
                if ((this.AllowLCUpdateField.Equals(value) != true)) {
                    this.AllowLCUpdateField = value;
                    this.RaisePropertyChanged("AllowLCUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdSuppPrice {
            get {
                return this.AllowUpdSuppPriceField;
            }
            set {
                if ((this.AllowUpdSuppPriceField.Equals(value) != true)) {
                    this.AllowUpdSuppPriceField = value;
                    this.RaisePropertyChanged("AllowUpdSuppPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AsmPartDescription {
            get {
                return this.AsmPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AsmPartDescriptionField, value) != true)) {
                    this.AsmPartDescriptionField = value;
                    this.RaisePropertyChanged("AsmPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblySeqDescription {
            get {
                return this.AssemblySeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblySeqDescriptionField, value) != true)) {
                    this.AssemblySeqDescriptionField = value;
                    this.RaisePropertyChanged("AssemblySeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AttributeBackoutRequired {
            get {
                return this.AttributeBackoutRequiredField;
            }
            set {
                if ((this.AttributeBackoutRequiredField.Equals(value) != true)) {
                    this.AttributeBackoutRequiredField = value;
                    this.RaisePropertyChanged("AttributeBackoutRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoReceipt {
            get {
                return this.AutoReceiptField;
            }
            set {
                if ((this.AutoReceiptField.Equals(value) != true)) {
                    this.AutoReceiptField = value;
                    this.RaisePropertyChanged("AutoReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCode {
            get {
                return this.CommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeField, value) != true)) {
                    this.CommodityCodeField = value;
                    this.RaisePropertyChanged("CommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityDescription {
            get {
                return this.CommodityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityDescriptionField, value) != true)) {
                    this.CommodityDescriptionField = value;
                    this.RaisePropertyChanged("CommodityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplianceMsg {
            get {
                return this.ComplianceMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceMsgField, value) != true)) {
                    this.ComplianceMsgField = value;
                    this.RaisePropertyChanged("ComplianceMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConsolidatedPO {
            get {
                return this.ConsolidatedPOField;
            }
            set {
                if ((this.ConsolidatedPOField.Equals(value) != true)) {
                    this.ConsolidatedPOField = value;
                    this.RaisePropertyChanged("ConsolidatedPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerExtCost {
            get {
                return this.ContainerExtCostField;
            }
            set {
                if ((this.ContainerExtCostField.Equals(value) != true)) {
                    this.ContainerExtCostField = value;
                    this.RaisePropertyChanged("ContainerExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerLCAmt {
            get {
                return this.ContainerLCAmtField;
            }
            set {
                if ((this.ContainerLCAmtField.Equals(value) != true)) {
                    this.ContainerLCAmtField = value;
                    this.RaisePropertyChanged("ContainerLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractOrder {
            get {
                return this.ContractOrderField;
            }
            set {
                if ((this.ContractOrderField.Equals(value) != true)) {
                    this.ContractOrderField = value;
                    this.RaisePropertyChanged("ContractOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConvOverride {
            get {
                return this.ConvOverrideField;
            }
            set {
                if ((this.ConvOverrideField.Equals(value) != true)) {
                    this.ConvOverrideField = value;
                    this.RaisePropertyChanged("ConvOverride");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostPerCode {
            get {
                return this.CostPerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostPerCodeField, value) != true)) {
                    this.CostPerCodeField = value;
                    this.RaisePropertyChanged("CostPerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostPerFactor {
            get {
                return this.CostPerFactorField;
            }
            set {
                if ((this.CostPerFactorField.Equals(value) != true)) {
                    this.CostPerFactorField = value;
                    this.RaisePropertyChanged("CostPerFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryNumDescription {
            get {
                return this.CountryNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNumDescriptionField, value) != true)) {
                    this.CountryNumDescriptionField = value;
                    this.RaisePropertyChanged("CountryNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Delivered {
            get {
                return this.DeliveredField;
            }
            set {
                if ((this.DeliveredField.Equals(value) != true)) {
                    this.DeliveredField = value;
                    this.RaisePropertyChanged("Delivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveredComments {
            get {
                return this.DeliveredCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveredCommentsField, value) != true)) {
                    this.DeliveredCommentsField = value;
                    this.RaisePropertyChanged("DeliveredComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCodeDimCodeDescription {
            get {
                return this.DimCodeDimCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeDimCodeDescriptionField, value) != true)) {
                    this.DimCodeDimCodeDescriptionField = value;
                    this.RaisePropertyChanged("DimCodeDimCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableInspection {
            get {
                return this.DisableInspectionField;
            }
            set {
                if ((this.DisableInspectionField.Equals(value) != true)) {
                    this.DisableInspectionField = value;
                    this.RaisePropertyChanged("DisableInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayUMField {
            get {
                return this.DisplayUMFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayUMFieldField, value) != true)) {
                    this.DisplayUMFieldField = value;
                    this.RaisePropertyChanged("DisplayUMField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitCost {
            get {
                return this.DocInUnitCostField;
            }
            set {
                if ((this.DocInUnitCostField.Equals(value) != true)) {
                    this.DocInUnitCostField = value;
                    this.RaisePropertyChanged("DocInUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInVendorUnitCost {
            get {
                return this.DocInVendorUnitCostField;
            }
            set {
                if ((this.DocInVendorUnitCostField.Equals(value) != true)) {
                    this.DocInVendorUnitCostField = value;
                    this.RaisePropertyChanged("DocInVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrUnitCost {
            get {
                return this.DocScrUnitCostField;
            }
            set {
                if ((this.DocScrUnitCostField.Equals(value) != true)) {
                    this.DocScrUnitCostField = value;
                    this.RaisePropertyChanged("DocScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrVendorUnitCost {
            get {
                return this.DocScrVendorUnitCostField;
            }
            set {
                if ((this.DocScrVendorUnitCostField.Equals(value) != true)) {
                    this.DocScrVendorUnitCostField = value;
                    this.RaisePropertyChanged("DocScrVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitCost {
            get {
                return this.DocUnitCostField;
            }
            set {
                if ((this.DocUnitCostField.Equals(value) != true)) {
                    this.DocUnitCostField = value;
                    this.RaisePropertyChanged("DocUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocVendorUnitCost {
            get {
                return this.DocVendorUnitCostField;
            }
            set {
                if ((this.DocVendorUnitCostField.Equals(value) != true)) {
                    this.DocVendorUnitCostField = value;
                    this.RaisePropertyChanged("DocVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShipment {
            get {
                return this.DropShipmentField;
            }
            set {
                if ((this.DropShipmentField.Equals(value) != true)) {
                    this.DropShipmentField = value;
                    this.RaisePropertyChanged("DropShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableBin {
            get {
                return this.EnableBinField;
            }
            set {
                if ((this.EnableBinField.Equals(value) != true)) {
                    this.EnableBinField = value;
                    this.RaisePropertyChanged("EnableBin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableDim {
            get {
                return this.EnableDimField;
            }
            set {
                if ((this.EnableDimField.Equals(value) != true)) {
                    this.EnableDimField = value;
                    this.RaisePropertyChanged("EnableDim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInventoryAttributes {
            get {
                return this.EnableInventoryAttributesField;
            }
            set {
                if ((this.EnableInventoryAttributesField.Equals(value) != true)) {
                    this.EnableInventoryAttributesField = value;
                    this.RaisePropertyChanged("EnableInventoryAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableLot {
            get {
                return this.EnableLotField;
            }
            set {
                if ((this.EnableLotField.Equals(value) != true)) {
                    this.EnableLotField = value;
                    this.RaisePropertyChanged("EnableLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePCID {
            get {
                return this.EnablePCIDField;
            }
            set {
                if ((this.EnablePCIDField.Equals(value) != true)) {
                    this.EnablePCIDField = value;
                    this.RaisePropertyChanged("EnablePCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSN {
            get {
                return this.EnableSNField;
            }
            set {
                if ((this.EnableSNField.Equals(value) != true)) {
                    this.EnableSNField = value;
                    this.RaisePropertyChanged("EnableSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSupplierXRef {
            get {
                return this.EnableSupplierXRefField;
            }
            set {
                if ((this.EnableSupplierXRefField.Equals(value) != true)) {
                    this.EnableSupplierXRefField = value;
                    this.RaisePropertyChanged("EnableSupplierXRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTransValue {
            get {
                return this.EnableTransValueField;
            }
            set {
                if ((this.EnableTransValueField.Equals(value) != true)) {
                    this.EnableTransValueField = value;
                    this.RaisePropertyChanged("EnableTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableUplift {
            get {
                return this.EnableUpliftField;
            }
            set {
                if ((this.EnableUpliftField.Equals(value) != true)) {
                    this.EnableUpliftField = value;
                    this.RaisePropertyChanged("EnableUplift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableWhse {
            get {
                return this.EnableWhseField;
            }
            set {
                if ((this.EnableWhseField.Equals(value) != true)) {
                    this.EnableWhseField = value;
                    this.RaisePropertyChanged("EnableWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EpicorFSA {
            get {
                return this.EpicorFSAField;
            }
            set {
                if ((this.EpicorFSAField.Equals(value) != true)) {
                    this.EpicorFSAField = value;
                    this.RaisePropertyChanged("EpicorFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtNonRecoverableCost {
            get {
                return this.ExtNonRecoverableCostField;
            }
            set {
                if ((this.ExtNonRecoverableCostField.Equals(value) != true)) {
                    this.ExtNonRecoverableCostField = value;
                    this.RaisePropertyChanged("ExtNonRecoverableCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtTransValue {
            get {
                return this.ExtTransValueField;
            }
            set {
                if ((this.ExtTransValueField.Equals(value) != true)) {
                    this.ExtTransValueField = value;
                    this.RaisePropertyChanged("ExtTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FailedQty {
            get {
                return this.FailedQtyField;
            }
            set {
                if ((this.FailedQtyField.Equals(value) != true)) {
                    this.FailedQtyField = value;
                    this.RaisePropertyChanged("FailedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbPackLine {
            get {
                return this.GlbPackLineField;
            }
            set {
                if ((this.GlbPackLineField.Equals(value) != true)) {
                    this.GlbPackLineField = value;
                    this.RaisePropertyChanged("GlbPackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPackSlip {
            get {
                return this.GlbPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPackSlipField, value) != true)) {
                    this.GlbPackSlipField = value;
                    this.RaisePropertyChanged("GlbPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPurPoint {
            get {
                return this.GlbPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPurPointField, value) != true)) {
                    this.GlbPurPointField = value;
                    this.RaisePropertyChanged("GlbPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbVendorNum {
            get {
                return this.GlbVendorNumField;
            }
            set {
                if ((this.GlbVendorNumField.Equals(value) != true)) {
                    this.GlbVendorNumField = value;
                    this.RaisePropertyChanged("GlbVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HHReceiveToPCID {
            get {
                return this.HHReceiveToPCIDField;
            }
            set {
                if ((this.HHReceiveToPCIDField.Equals(value) != true)) {
                    this.HHReceiveToPCIDField = value;
                    this.RaisePropertyChanged("HHReceiveToPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ICPackNum {
            get {
                return this.ICPackNumField;
            }
            set {
                if ((this.ICPackNumField.Equals(value) != true)) {
                    this.ICPackNumField = value;
                    this.RaisePropertyChanged("ICPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportNum {
            get {
                return this.ImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportNumField, value) != true)) {
                    this.ImportNumField = value;
                    this.RaisePropertyChanged("ImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFrom {
            get {
                return this.ImportedFromField;
            }
            set {
                if ((this.ImportedFromField.Equals(value) != true)) {
                    this.ImportedFromField = value;
                    this.RaisePropertyChanged("ImportedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportedFromDesc {
            get {
                return this.ImportedFromDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportedFromDescField, value) != true)) {
                    this.ImportedFromDescField = value;
                    this.RaisePropertyChanged("ImportedFromDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCVariance {
            get {
                return this.InAppliedLCVarianceField;
            }
            set {
                if ((this.InAppliedLCVarianceField.Equals(value) != true)) {
                    this.InAppliedLCVarianceField = value;
                    this.RaisePropertyChanged("InAppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedRcptLCAmt {
            get {
                return this.InAppliedRcptLCAmtField;
            }
            set {
                if ((this.InAppliedRcptLCAmtField.Equals(value) != true)) {
                    this.InAppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCAmt {
            get {
                return this.InLCAmtField;
            }
            set {
                if ((this.InLCAmtField.Equals(value) != true)) {
                    this.InLCAmtField = value;
                    this.RaisePropertyChanged("InLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCDutyAmt {
            get {
                return this.InLCDutyAmtField;
            }
            set {
                if ((this.InLCDutyAmtField.Equals(value) != true)) {
                    this.InLCDutyAmtField = value;
                    this.RaisePropertyChanged("InLCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCIndCost {
            get {
                return this.InLCIndCostField;
            }
            set {
                if ((this.InLCIndCostField.Equals(value) != true)) {
                    this.InLCIndCostField = value;
                    this.RaisePropertyChanged("InLCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCMtlBurUnitCost {
            get {
                return this.InLCMtlBurUnitCostField;
            }
            set {
                if ((this.InLCMtlBurUnitCostField.Equals(value) != true)) {
                    this.InLCMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("InLCMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCSpecLineDutyAmt {
            get {
                return this.InLCSpecLineDutyAmtField;
            }
            set {
                if ((this.InLCSpecLineDutyAmtField.Equals(value) != true)) {
                    this.InLCSpecLineDutyAmtField = value;
                    this.RaisePropertyChanged("InLCSpecLineDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCUpliftIndCost {
            get {
                return this.InLCUpliftIndCostField;
            }
            set {
                if ((this.InLCUpliftIndCostField.Equals(value) != true)) {
                    this.InLCUpliftIndCostField = value;
                    this.RaisePropertyChanged("InLCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InOurCost {
            get {
                return this.InOurCostField;
            }
            set {
                if ((this.InOurCostField.Equals(value) != true)) {
                    this.InOurCostField = value;
                    this.RaisePropertyChanged("InOurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InPOTransValue {
            get {
                return this.InPOTransValueField;
            }
            set {
                if ((this.InPOTransValueField.Equals(value) != true)) {
                    this.InPOTransValueField = value;
                    this.RaisePropertyChanged("InPOTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InVendorUnitCost {
            get {
                return this.InVendorUnitCostField;
            }
            set {
                if ((this.InVendorUnitCostField.Equals(value) != true)) {
                    this.InVendorUnitCostField = value;
                    this.RaisePropertyChanged("InVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InputOurQty {
            get {
                return this.InputOurQtyField;
            }
            set {
                if ((this.InputOurQtyField.Equals(value) != true)) {
                    this.InputOurQtyField = value;
                    this.RaisePropertyChanged("InputOurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectedBy {
            get {
                return this.InspectedByField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectedByField, value) != true)) {
                    this.InspectedByField = value;
                    this.RaisePropertyChanged("InspectedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InspectedDate {
            get {
                return this.InspectedDateField;
            }
            set {
                if ((this.InspectedDateField.Equals(value) != true)) {
                    this.InspectedDateField = value;
                    this.RaisePropertyChanged("InspectedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InspectedTime {
            get {
                return this.InspectedTimeField;
            }
            set {
                if ((this.InspectedTimeField.Equals(value) != true)) {
                    this.InspectedTimeField = value;
                    this.RaisePropertyChanged("InspectedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InspectionFlag {
            get {
                return this.InspectionFlagField;
            }
            set {
                if ((this.InspectionFlagField.Equals(value) != true)) {
                    this.InspectionFlagField = value;
                    this.RaisePropertyChanged("InspectionFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InspectionPending {
            get {
                return this.InspectionPendingField;
            }
            set {
                if ((this.InspectionPendingField.Equals(value) != true)) {
                    this.InspectionPendingField = value;
                    this.RaisePropertyChanged("InspectionPending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InspectionReq {
            get {
                return this.InspectionReqField;
            }
            set {
                if ((this.InspectionReqField.Equals(value) != true)) {
                    this.InspectionReqField = value;
                    this.RaisePropertyChanged("InspectionReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectorID {
            get {
                return this.InspectorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectorIDField, value) != true)) {
                    this.InspectorIDField = value;
                    this.RaisePropertyChanged("InspectorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectorIDName {
            get {
                return this.InspectorIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectorIDNameField, value) != true)) {
                    this.InspectorIDNameField = value;
                    this.RaisePropertyChanged("InspectorIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IntQueID {
            get {
                return this.IntQueIDField;
            }
            set {
                if ((this.IntQueIDField.Equals(value) != true)) {
                    this.IntQueIDField = value;
                    this.RaisePropertyChanged("IntQueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumDescription {
            get {
                return this.InvoiceNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumDescriptionField, value) != true)) {
                    this.InvoiceNumDescriptionField = value;
                    this.RaisePropertyChanged("InvoiceNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IssuedComplete {
            get {
                return this.IssuedCompleteField;
            }
            set {
                if ((this.IssuedCompleteField.Equals(value) != true)) {
                    this.IssuedCompleteField = value;
                    this.RaisePropertyChanged("IssuedComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobIUM {
            get {
                return this.JobIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.JobIUMField, value) != true)) {
                    this.JobIUMField = value;
                    this.RaisePropertyChanged("JobIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobPartNum {
            get {
                return this.JobPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobPartNumField, value) != true)) {
                    this.JobPartNumField = value;
                    this.RaisePropertyChanged("JobPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobRequiredQty {
            get {
                return this.JobRequiredQtyField;
            }
            set {
                if ((this.JobRequiredQtyField.Equals(value) != true)) {
                    this.JobRequiredQtyField = value;
                    this.RaisePropertyChanged("JobRequiredQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq {
            get {
                return this.JobSeqField;
            }
            set {
                if ((this.JobSeqField.Equals(value) != true)) {
                    this.JobSeqField = value;
                    this.RaisePropertyChanged("JobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCAmt {
            get {
                return this.LCAmtField;
            }
            set {
                if ((this.LCAmtField.Equals(value) != true)) {
                    this.LCAmtField = value;
                    this.RaisePropertyChanged("LCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCDutyAmt {
            get {
                return this.LCDutyAmtField;
            }
            set {
                if ((this.LCDutyAmtField.Equals(value) != true)) {
                    this.LCDutyAmtField = value;
                    this.RaisePropertyChanged("LCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LCFlag {
            get {
                return this.LCFlagField;
            }
            set {
                if ((this.LCFlagField.Equals(value) != true)) {
                    this.LCFlagField = value;
                    this.RaisePropertyChanged("LCFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCIndCost {
            get {
                return this.LCIndCostField;
            }
            set {
                if ((this.LCIndCostField.Equals(value) != true)) {
                    this.LCIndCostField = value;
                    this.RaisePropertyChanged("LCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCMtlBurUnitCost {
            get {
                return this.LCMtlBurUnitCostField;
            }
            set {
                if ((this.LCMtlBurUnitCostField.Equals(value) != true)) {
                    this.LCMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("LCMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCSpecLineDutyAmt {
            get {
                return this.LCSpecLineDutyAmtField;
            }
            set {
                if ((this.LCSpecLineDutyAmtField.Equals(value) != true)) {
                    this.LCSpecLineDutyAmtField = value;
                    this.RaisePropertyChanged("LCSpecLineDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCUpliftIndCost {
            get {
                return this.LCUpliftIndCostField;
            }
            set {
                if ((this.LCUpliftIndCostField.Equals(value) != true)) {
                    this.LCUpliftIndCostField = value;
                    this.RaisePropertyChanged("LCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MangCustID {
            get {
                return this.MangCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustIDField, value) != true)) {
                    this.MangCustIDField = value;
                    this.RaisePropertyChanged("MangCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MangCustName {
            get {
                return this.MangCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MangCustNameField, value) != true)) {
                    this.MangCustNameField = value;
                    this.RaisePropertyChanged("MangCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MangCustNum {
            get {
                return this.MangCustNumField;
            }
            set {
                if ((this.MangCustNumField.Equals(value) != true)) {
                    this.MangCustNumField = value;
                    this.RaisePropertyChanged("MangCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManualLC {
            get {
                return this.ManualLCField;
            }
            set {
                if ((this.ManualLCField.Equals(value) != true)) {
                    this.ManualLCField = value;
                    this.RaisePropertyChanged("ManualLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MassReceipt {
            get {
                return this.MassReceiptField;
            }
            set {
                if ((this.MassReceiptField.Equals(value) != true)) {
                    this.MassReceiptField = value;
                    this.RaisePropertyChanged("MassReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurRate {
            get {
                return this.MtlBurRateField;
            }
            set {
                if ((this.MtlBurRateField.Equals(value) != true)) {
                    this.MtlBurRateField = value;
                    this.RaisePropertyChanged("MtlBurRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonConformnce {
            get {
                return this.NonConformnceField;
            }
            set {
                if ((this.NonConformnceField.Equals(value) != true)) {
                    this.NonConformnceField = value;
                    this.RaisePropertyChanged("NonConformnce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotCompliant {
            get {
                return this.NotCompliantField;
            }
            set {
                if ((this.NotCompliantField.Equals(value) != true)) {
                    this.NotCompliantField = value;
                    this.RaisePropertyChanged("NotCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumLabels {
            get {
                return this.NumLabelsField;
            }
            set {
                if ((this.NumLabelsField.Equals(value) != true)) {
                    this.NumLabelsField = value;
                    this.RaisePropertyChanged("NumLabels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnTime {
            get {
                return this.OnTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.OnTimeField, value) != true)) {
                    this.OnTimeField = value;
                    this.RaisePropertyChanged("OnTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenRelease {
            get {
                return this.OpenReleaseField;
            }
            set {
                if ((this.OpenReleaseField.Equals(value) != true)) {
                    this.OpenReleaseField = value;
                    this.RaisePropertyChanged("OpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrigCountryNum {
            get {
                return this.OrigCountryNumField;
            }
            set {
                if ((this.OrigCountryNumField.Equals(value) != true)) {
                    this.OrigCountryNumField = value;
                    this.RaisePropertyChanged("OrigCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurMtlBurUnitCost {
            get {
                return this.OurMtlBurUnitCostField;
            }
            set {
                if ((this.OurMtlBurUnitCostField.Equals(value) != true)) {
                    this.OurMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("OurMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQty {
            get {
                return this.OurQtyField;
            }
            set {
                if ((this.OurQtyField.Equals(value) != true)) {
                    this.OurQtyField = value;
                    this.RaisePropertyChanged("OurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurRemQty {
            get {
                return this.OurRemQtyField;
            }
            set {
                if ((this.OurRemQtyField.Equals(value) != true)) {
                    this.OurRemQtyField = value;
                    this.RaisePropertyChanged("OurRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurUnInvcReceiptQty {
            get {
                return this.OurUnInvcReceiptQtyField;
            }
            set {
                if ((this.OurUnInvcReceiptQtyField.Equals(value) != true)) {
                    this.OurUnInvcReceiptQtyField = value;
                    this.RaisePropertyChanged("OurUnInvcReceiptQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurUnitCost {
            get {
                return this.OurUnitCostField;
            }
            set {
                if ((this.OurUnitCostField.Equals(value) != true)) {
                    this.OurUnitCostField = value;
                    this.RaisePropertyChanged("OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PCIDOutboundContainer {
            get {
                return this.PCIDOutboundContainerField;
            }
            set {
                if ((this.PCIDOutboundContainerField.Equals(value) != true)) {
                    this.PCIDOutboundContainerField = value;
                    this.RaisePropertyChanged("PCIDOutboundContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POComment {
            get {
                return this.POCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.POCommentField, value) != true)) {
                    this.POCommentField = value;
                    this.RaisePropertyChanged("POComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PODueDate {
            get {
                return this.PODueDateField;
            }
            set {
                if ((this.PODueDateField.Equals(value) != true)) {
                    this.PODueDateField = value;
                    this.RaisePropertyChanged("PODueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal POFactor {
            get {
                return this.POFactorField;
            }
            set {
                if ((this.POFactorField.Equals(value) != true)) {
                    this.POFactorField = value;
                    this.RaisePropertyChanged("POFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POFactorDirection {
            get {
                return this.POFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.POFactorDirectionField, value) != true)) {
                    this.POFactorDirectionField = value;
                    this.RaisePropertyChanged("POFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHold {
            get {
                return this.POHoldField;
            }
            set {
                if ((this.POHoldField.Equals(value) != true)) {
                    this.POHoldField = value;
                    this.RaisePropertyChanged("POHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POIUM {
            get {
                return this.POIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.POIUMField, value) != true)) {
                    this.POIUMField = value;
                    this.RaisePropertyChanged("POIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineLineDesc {
            get {
                return this.POLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineLineDescField, value) != true)) {
                    this.POLineLineDescField = value;
                    this.RaisePropertyChanged("POLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLinePartNum {
            get {
                return this.POLinePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLinePartNumField, value) != true)) {
                    this.POLinePartNumField = value;
                    this.RaisePropertyChanged("POLinePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineVenPartNum {
            get {
                return this.POLineVenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineVenPartNumField, value) != true)) {
                    this.POLineVenPartNumField = value;
                    this.RaisePropertyChanged("POLineVenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumApprovalStatus {
            get {
                return this.PONumApprovalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumApprovalStatusField, value) != true)) {
                    this.PONumApprovalStatusField = value;
                    this.RaisePropertyChanged("PONumApprovalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PONumApprove {
            get {
                return this.PONumApproveField;
            }
            set {
                if ((this.PONumApproveField.Equals(value) != true)) {
                    this.PONumApproveField = value;
                    this.RaisePropertyChanged("PONumApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PONumConfirmed {
            get {
                return this.PONumConfirmedField;
            }
            set {
                if ((this.PONumConfirmedField.Equals(value) != true)) {
                    this.PONumConfirmedField = value;
                    this.RaisePropertyChanged("PONumConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipName {
            get {
                return this.PONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipNameField, value) != true)) {
                    this.PONumShipNameField = value;
                    this.RaisePropertyChanged("PONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONumShipToConName {
            get {
                return this.PONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumShipToConNameField, value) != true)) {
                    this.PONumShipToConNameField = value;
                    this.RaisePropertyChanged("PONumShipToConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POPUM {
            get {
                return this.POPUMField;
            }
            set {
                if ((object.ReferenceEquals(this.POPUMField, value) != true)) {
                    this.POPUMField = value;
                    this.RaisePropertyChanged("POPUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelArrivedQty {
            get {
                return this.PORelArrivedQtyField;
            }
            set {
                if ((this.PORelArrivedQtyField.Equals(value) != true)) {
                    this.PORelArrivedQtyField = value;
                    this.RaisePropertyChanged("PORelArrivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelStatus {
            get {
                return this.PORelStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelStatusField, value) != true)) {
                    this.PORelStatusField = value;
                    this.RaisePropertyChanged("PORelStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal POTransValue {
            get {
                return this.POTransValueField;
            }
            set {
                if ((this.POTransValueField.Equals(value) != true)) {
                    this.POTransValueField = value;
                    this.RaisePropertyChanged("POTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PackSlipInPrice {
            get {
                return this.PackSlipInPriceField;
            }
            set {
                if ((this.PackSlipInPriceField.Equals(value) != true)) {
                    this.PackSlipInPriceField = value;
                    this.RaisePropertyChanged("PackSlipInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumAttrClassID {
            get {
                return this.PartNumAttrClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumAttrClassIDField, value) != true)) {
                    this.PartNumAttrClassIDField = value;
                    this.RaisePropertyChanged("PartNumAttrClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PassedQty {
            get {
                return this.PassedQtyField;
            }
            set {
                if ((this.PassedQtyField.Equals(value) != true)) {
                    this.PassedQtyField = value;
                    this.RaisePropertyChanged("PassedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlStatus {
            get {
                return this.PkgControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlStatusField, value) != true)) {
                    this.PkgControlStatusField = value;
                    this.RaisePropertyChanged("PkgControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjProcessed {
            get {
                return this.ProjProcessedField;
            }
            set {
                if ((this.ProjProcessedField.Equals(value) != true)) {
                    this.ProjProcessedField = value;
                    this.RaisePropertyChanged("ProjProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress1 {
            get {
                return this.PurPointAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress1Field, value) != true)) {
                    this.PurPointAddress1Field = value;
                    this.RaisePropertyChanged("PurPointAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress2 {
            get {
                return this.PurPointAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress2Field, value) != true)) {
                    this.PurPointAddress2Field = value;
                    this.RaisePropertyChanged("PurPointAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress3 {
            get {
                return this.PurPointAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress3Field, value) != true)) {
                    this.PurPointAddress3Field = value;
                    this.RaisePropertyChanged("PurPointAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCity {
            get {
                return this.PurPointCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCityField, value) != true)) {
                    this.PurPointCityField = value;
                    this.RaisePropertyChanged("PurPointCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCountry {
            get {
                return this.PurPointCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCountryField, value) != true)) {
                    this.PurPointCountryField = value;
                    this.RaisePropertyChanged("PurPointCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointName {
            get {
                return this.PurPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointNameField, value) != true)) {
                    this.PurPointNameField = value;
                    this.RaisePropertyChanged("PurPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurPointPrimPCon {
            get {
                return this.PurPointPrimPConField;
            }
            set {
                if ((this.PurPointPrimPConField.Equals(value) != true)) {
                    this.PurPointPrimPConField = value;
                    this.RaisePropertyChanged("PurPointPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointState {
            get {
                return this.PurPointStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointStateField, value) != true)) {
                    this.PurPointStateField = value;
                    this.RaisePropertyChanged("PurPointState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointZip {
            get {
                return this.PurPointZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointZipField, value) != true)) {
                    this.PurPointZipField = value;
                    this.RaisePropertyChanged("PurPointZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCodePurchDesc {
            get {
                return this.PurchCodePurchDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodePurchDescField, value) != true)) {
                    this.PurchCodePurchDescField = value;
                    this.RaisePropertyChanged("PurchCodePurchDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QtyOption {
            get {
                return this.QtyOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.QtyOptionField, value) != true)) {
                    this.QtyOptionField = value;
                    this.RaisePropertyChanged("QtyOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RcvdSMIQty {
            get {
                return this.RcvdSMIQtyField;
            }
            set {
                if ((this.RcvdSMIQtyField.Equals(value) != true)) {
                    this.RcvdSMIQtyField = value;
                    this.RaisePropertyChanged("RcvdSMIQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptType {
            get {
                return this.ReceiptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptTypeField, value) != true)) {
                    this.ReceiptTypeField = value;
                    this.RaisePropertyChanged("ReceiptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceivedComplete {
            get {
                return this.ReceivedCompleteField;
            }
            set {
                if ((this.ReceivedCompleteField.Equals(value) != true)) {
                    this.ReceivedCompleteField = value;
                    this.RaisePropertyChanged("ReceivedComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedTo {
            get {
                return this.ReceivedToField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedToField, value) != true)) {
                    this.ReceivedToField = value;
                    this.RaisePropertyChanged("ReceivedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCode {
            get {
                return this.RefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeField, value) != true)) {
                    this.RefCodeField = value;
                    this.RaisePropertyChanged("RefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefType {
            get {
                return this.RefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefTypeField, value) != true)) {
                    this.RefTypeField = value;
                    this.RaisePropertyChanged("RefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RemainingSMIQty {
            get {
                return this.RemainingSMIQtyField;
            }
            set {
                if ((this.RemainingSMIQtyField.Equals(value) != true)) {
                    this.RemainingSMIQtyField = value;
                    this.RaisePropertyChanged("RemainingSMIQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitCost {
            get {
                return this.Rpt1InUnitCostField;
            }
            set {
                if ((this.Rpt1InUnitCostField.Equals(value) != true)) {
                    this.Rpt1InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InVendorUnitCost {
            get {
                return this.Rpt1InVendorUnitCostField;
            }
            set {
                if ((this.Rpt1InVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt1InVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1InVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrUnitCost {
            get {
                return this.Rpt1ScrUnitCostField;
            }
            set {
                if ((this.Rpt1ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt1ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrVendorUnitCost {
            get {
                return this.Rpt1ScrVendorUnitCostField;
            }
            set {
                if ((this.Rpt1ScrVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt1ScrVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1ScrVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitCost {
            get {
                return this.Rpt1UnitCostField;
            }
            set {
                if ((this.Rpt1UnitCostField.Equals(value) != true)) {
                    this.Rpt1UnitCostField = value;
                    this.RaisePropertyChanged("Rpt1UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1VendorUnitCost {
            get {
                return this.Rpt1VendorUnitCostField;
            }
            set {
                if ((this.Rpt1VendorUnitCostField.Equals(value) != true)) {
                    this.Rpt1VendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1VendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitCost {
            get {
                return this.Rpt2InUnitCostField;
            }
            set {
                if ((this.Rpt2InUnitCostField.Equals(value) != true)) {
                    this.Rpt2InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InVendorUnitCost {
            get {
                return this.Rpt2InVendorUnitCostField;
            }
            set {
                if ((this.Rpt2InVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt2InVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2InVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrUnitCost {
            get {
                return this.Rpt2ScrUnitCostField;
            }
            set {
                if ((this.Rpt2ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt2ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrVendorUnitCost {
            get {
                return this.Rpt2ScrVendorUnitCostField;
            }
            set {
                if ((this.Rpt2ScrVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt2ScrVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2ScrVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitCost {
            get {
                return this.Rpt2UnitCostField;
            }
            set {
                if ((this.Rpt2UnitCostField.Equals(value) != true)) {
                    this.Rpt2UnitCostField = value;
                    this.RaisePropertyChanged("Rpt2UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2VendorUnitCost {
            get {
                return this.Rpt2VendorUnitCostField;
            }
            set {
                if ((this.Rpt2VendorUnitCostField.Equals(value) != true)) {
                    this.Rpt2VendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2VendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitCost {
            get {
                return this.Rpt3InUnitCostField;
            }
            set {
                if ((this.Rpt3InUnitCostField.Equals(value) != true)) {
                    this.Rpt3InUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3InUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InVendorUnitCost {
            get {
                return this.Rpt3InVendorUnitCostField;
            }
            set {
                if ((this.Rpt3InVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt3InVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3InVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrUnitCost {
            get {
                return this.Rpt3ScrUnitCostField;
            }
            set {
                if ((this.Rpt3ScrUnitCostField.Equals(value) != true)) {
                    this.Rpt3ScrUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3ScrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrVendorUnitCost {
            get {
                return this.Rpt3ScrVendorUnitCostField;
            }
            set {
                if ((this.Rpt3ScrVendorUnitCostField.Equals(value) != true)) {
                    this.Rpt3ScrVendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3ScrVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitCost {
            get {
                return this.Rpt3UnitCostField;
            }
            set {
                if ((this.Rpt3UnitCostField.Equals(value) != true)) {
                    this.Rpt3UnitCostField = value;
                    this.RaisePropertyChanged("Rpt3UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3VendorUnitCost {
            get {
                return this.Rpt3VendorUnitCostField;
            }
            set {
                if ((this.Rpt3VendorUnitCostField.Equals(value) != true)) {
                    this.Rpt3VendorUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3VendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SMIComplete {
            get {
                return this.SMICompleteField;
            }
            set {
                if ((this.SMICompleteField.Equals(value) != true)) {
                    this.SMICompleteField = value;
                    this.RaisePropertyChanged("SMIComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SMITransNum {
            get {
                return this.SMITransNumField;
            }
            set {
                if ((this.SMITransNumField.Equals(value) != true)) {
                    this.SMITransNumField = value;
                    this.RaisePropertyChanged("SMITransNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SNStusChanged {
            get {
                return this.SNStusChangedField;
            }
            set {
                if ((this.SNStusChangedField.Equals(value) != true)) {
                    this.SNStusChangedField = value;
                    this.RaisePropertyChanged("SNStusChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrOurUnitCost {
            get {
                return this.ScrOurUnitCostField;
            }
            set {
                if ((this.ScrOurUnitCostField.Equals(value) != true)) {
                    this.ScrOurUnitCostField = value;
                    this.RaisePropertyChanged("ScrOurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrVendorUnitCost {
            get {
                return this.ScrVendorUnitCostField;
            }
            set {
                if ((this.ScrVendorUnitCostField.Equals(value) != true)) {
                    this.ScrVendorUnitCostField = value;
                    this.RaisePropertyChanged("ScrVendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SearchPONum {
            get {
                return this.SearchPONumField;
            }
            set {
                if ((this.SearchPONumField.Equals(value) != true)) {
                    this.SearchPONumField = value;
                    this.RaisePropertyChanged("SearchPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SetToLocation {
            get {
                return this.SetToLocationField;
            }
            set {
                if ((this.SetToLocationField.Equals(value) != true)) {
                    this.SetToLocationField = value;
                    this.RaisePropertyChanged("SetToLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipRcv {
            get {
                return this.ShipRcvField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipRcvField, value) != true)) {
                    this.ShipRcvField = value;
                    this.RaisePropertyChanged("ShipRcv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SkipMaterialQueueCreation {
            get {
                return this.SkipMaterialQueueCreationField;
            }
            set {
                if ((this.SkipMaterialQueueCreationField.Equals(value) != true)) {
                    this.SkipMaterialQueueCreationField = value;
                    this.RaisePropertyChanged("SkipMaterialQueueCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplierUnInvcReceiptQty {
            get {
                return this.SupplierUnInvcReceiptQtyField;
            }
            set {
                if ((this.SupplierUnInvcReceiptQtyField.Equals(value) != true)) {
                    this.SupplierUnInvcReceiptQtyField = value;
                    this.RaisePropertyChanged("SupplierUnInvcReceiptQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagMtlSeq {
            get {
                return this.TagMtlSeqField;
            }
            set {
                if ((this.TagMtlSeqField.Equals(value) != true)) {
                    this.TagMtlSeqField = value;
                    this.RaisePropertyChanged("TagMtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagOprSeq {
            get {
                return this.TagOprSeqField;
            }
            set {
                if ((this.TagOprSeqField.Equals(value) != true)) {
                    this.TagOprSeqField = value;
                    this.RaisePropertyChanged("TagOprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisTranQty {
            get {
                return this.ThisTranQtyField;
            }
            set {
                if ((this.ThisTranQtyField.Equals(value) != true)) {
                    this.ThisTranQtyField = value;
                    this.RaisePropertyChanged("ThisTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThisTranUOM {
            get {
                return this.ThisTranUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ThisTranUOMField, value) != true)) {
                    this.ThisTranUOMField = value;
                    this.RaisePropertyChanged("ThisTranUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotCostVariance {
            get {
                return this.TotCostVarianceField;
            }
            set {
                if ((this.TotCostVarianceField.Equals(value) != true)) {
                    this.TotCostVarianceField = value;
                    this.RaisePropertyChanged("TotCostVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDutiesAmt {
            get {
                return this.TotDutiesAmtField;
            }
            set {
                if ((this.TotDutiesAmtField.Equals(value) != true)) {
                    this.TotDutiesAmtField = value;
                    this.RaisePropertyChanged("TotDutiesAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLineAmt {
            get {
                return this.TotLineAmtField;
            }
            set {
                if ((this.TotLineAmtField.Equals(value) != true)) {
                    this.TotLineAmtField = value;
                    this.RaisePropertyChanged("TotLineAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotWHTaxAmt {
            get {
                return this.TotWHTaxAmtField;
            }
            set {
                if ((this.TotWHTaxAmtField.Equals(value) != true)) {
                    this.TotWHTaxAmtField = value;
                    this.RaisePropertyChanged("TotWHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmt {
            get {
                return this.TotalAmtField;
            }
            set {
                if ((this.TotalAmtField.Equals(value) != true)) {
                    this.TotalAmtField = value;
                    this.RaisePropertyChanged("TotalAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranReference {
            get {
                return this.TranReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranReferenceField, value) != true)) {
                    this.TranReferenceField = value;
                    this.RaisePropertyChanged("TranReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftPercent {
            get {
                return this.UpliftPercentField;
            }
            set {
                if ((this.UpliftPercentField.Equals(value) != true)) {
                    this.UpliftPercentField = value;
                    this.RaisePropertyChanged("UpliftPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePurchaseCode {
            get {
                return this.UsePurchaseCodeField;
            }
            set {
                if ((this.UsePurchaseCodeField.Equals(value) != true)) {
                    this.UsePurchaseCodeField = value;
                    this.RaisePropertyChanged("UsePurchaseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenPartNum {
            get {
                return this.VenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VenPartNumField, value) != true)) {
                    this.VenPartNumField = value;
                    this.RaisePropertyChanged("VenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VenRemQty {
            get {
                return this.VenRemQtyField;
            }
            set {
                if ((this.VenRemQtyField.Equals(value) != true)) {
                    this.VenRemQtyField = value;
                    this.RaisePropertyChanged("VenRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCurrSymbol {
            get {
                return this.VendorCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCurrSymbolField, value) != true)) {
                    this.VendorCurrSymbolField = value;
                    this.RaisePropertyChanged("VendorCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorQty {
            get {
                return this.VendorQtyField;
            }
            set {
                if ((this.VendorQtyField.Equals(value) != true)) {
                    this.VendorQtyField = value;
                    this.RaisePropertyChanged("VendorQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorUnitCost {
            get {
                return this.VendorUnitCostField;
            }
            set {
                if ((this.VendorUnitCostField.Equals(value) != true)) {
                    this.VendorUnitCostField = value;
                    this.RaisePropertyChanged("VendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VolumeUOM {
            get {
                return this.VolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeUOMField, value) != true)) {
                    this.VolumeUOMField = value;
                    this.RaisePropertyChanged("VolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouseCode {
            get {
                return this.WareHouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouseCodeField, value) != true)) {
                    this.WareHouseCodeField = value;
                    this.RaisePropertyChanged("WareHouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouseCodeDescription {
            get {
                return this.WareHouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouseCodeDescriptionField, value) != true)) {
                    this.WareHouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WareHouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvDtlAttchRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlAttrValueSetRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvDtlAttrValueSetRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeSetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AttributeValueSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoGeneratedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPiecesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorQtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeSetID {
            get {
                return this.AttributeSetIDField;
            }
            set {
                if ((this.AttributeSetIDField.Equals(value) != true)) {
                    this.AttributeSetIDField = value;
                    this.RaisePropertyChanged("AttributeSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AttributeValueSeq {
            get {
                return this.AttributeValueSeqField;
            }
            set {
                if ((this.AttributeValueSeqField.Equals(value) != true)) {
                    this.AttributeValueSeqField = value;
                    this.RaisePropertyChanged("AttributeValueSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoGenerated {
            get {
                return this.AutoGeneratedField;
            }
            set {
                if ((this.AutoGeneratedField.Equals(value) != true)) {
                    this.AutoGeneratedField = value;
                    this.RaisePropertyChanged("AutoGenerated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlAttrValueSetRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPieces {
            get {
                return this.NumberOfPiecesField;
            }
            set {
                if ((this.NumberOfPiecesField.Equals(value) != true)) {
                    this.NumberOfPiecesField = value;
                    this.RaisePropertyChanged("NumberOfPieces");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQty {
            get {
                return this.OurQtyField;
            }
            set {
                if ((this.OurQtyField.Equals(value) != true)) {
                    this.OurQtyField = value;
                    this.RaisePropertyChanged("OurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorQty {
            get {
                return this.VendorQtyField;
            }
            set {
                if ((this.VendorQtyField.Equals(value) != true)) {
                    this.VendorQtyField = value;
                    this.RaisePropertyChanged("VendorQty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvDtlTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RcvDtlPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDtlTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrFixedAmount {
            get {
                return this.DocScrFixedAmountField;
            }
            set {
                if ((this.DocScrFixedAmountField.Equals(value) != true)) {
                    this.DocScrFixedAmountField = value;
                    this.RaisePropertyChanged("DocScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RcvDtlPONum {
            get {
                return this.RcvDtlPONumField;
            }
            set {
                if ((this.RcvDtlPONumField.Equals(value) != true)) {
                    this.RcvDtlPONumField = value;
                    this.RaisePropertyChanged("RcvDtlPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCurrencyCode {
            get {
                return this.VendorCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCurrencyCodeField, value) != true)) {
                    this.VendorCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDutyRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvDutyRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLCUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvDutyRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DutySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLCUpdate {
            get {
                return this.AllowLCUpdateField;
            }
            set {
                if ((this.AllowLCUpdateField.Equals(value) != true)) {
                    this.AllowLCUpdateField = value;
                    this.RaisePropertyChanged("AllowLCUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvDutyRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DutyAmt {
            get {
                return this.DutyAmtField;
            }
            set {
                if ((this.DutyAmtField.Equals(value) != true)) {
                    this.DutyAmtField = value;
                    this.RaisePropertyChanged("DutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DutySeq {
            get {
                return this.DutySeqField;
            }
            set {
                if ((this.DutySeqField.Equals(value) != true)) {
                    this.DutySeqField = value;
                    this.RaisePropertyChanged("DutySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDutyAmt {
            get {
                return this.InDutyAmtField;
            }
            set {
                if ((this.InDutyAmtField.Equals(value) != true)) {
                    this.InDutyAmtField = value;
                    this.RaisePropertyChanged("InDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDutyAmt {
            get {
                return this.ScrDutyAmtField;
            }
            set {
                if ((this.ScrDutyAmtField.Equals(value) != true)) {
                    this.ScrDutyAmtField = value;
                    this.RaisePropertyChanged("ScrDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffCode {
            get {
                return this.TariffCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffCodeField, value) != true)) {
                    this.TariffCodeField = value;
                    this.RaisePropertyChanged("TariffCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffDescription {
            get {
                return this.TariffDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffDescriptionField, value) != true)) {
                    this.TariffDescriptionField = value;
                    this.RaisePropertyChanged("TariffDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvHeadRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLCUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyToLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CNBondedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CNDeclarationBillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HdrTaxNoUpdtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportedFromDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InSpecDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntQueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrigLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartialReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurPointPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SaveForInvoicingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SpecDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxesCalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDutiesAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotGrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotGrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotIndirectCostsAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLinesAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotWHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlArvdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlRcptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlRecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool eshReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vrPONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vrPONumShipToConNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLCUpdate {
            get {
                return this.AllowLCUpdateField;
            }
            set {
                if ((this.AllowLCUpdateField.Equals(value) != true)) {
                    this.AllowLCUpdateField = value;
                    this.RaisePropertyChanged("AllowLCUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUplift {
            get {
                return this.AllowUpliftField;
            }
            set {
                if ((this.AllowUpliftField.Equals(value) != true)) {
                    this.AllowUpliftField = value;
                    this.RaisePropertyChanged("AllowUplift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCAmt {
            get {
                return this.AppliedLCAmtField;
            }
            set {
                if ((this.AppliedLCAmtField.Equals(value) != true)) {
                    this.AppliedLCAmtField = value;
                    this.RaisePropertyChanged("AppliedLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyToLC {
            get {
                return this.ApplyToLCField;
            }
            set {
                if ((this.ApplyToLCField.Equals(value) != true)) {
                    this.ApplyToLCField = value;
                    this.RaisePropertyChanged("ApplyToLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoReceipt {
            get {
                return this.AutoReceiptField;
            }
            set {
                if ((this.AutoReceiptField.Equals(value) != true)) {
                    this.AutoReceiptField = value;
                    this.RaisePropertyChanged("AutoReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoTranID {
            get {
                return this.AutoTranIDField;
            }
            set {
                if ((this.AutoTranIDField.Equals(value) != true)) {
                    this.AutoTranIDField = value;
                    this.RaisePropertyChanged("AutoTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoTranType {
            get {
                return this.AutoTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoTranTypeField, value) != true)) {
                    this.AutoTranTypeField = value;
                    this.RaisePropertyChanged("AutoTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CNBonded {
            get {
                return this.CNBondedField;
            }
            set {
                if ((this.CNBondedField.Equals(value) != true)) {
                    this.CNBondedField = value;
                    this.RaisePropertyChanged("CNBonded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CNDeclarationBill {
            get {
                return this.CNDeclarationBillField;
            }
            set {
                if ((object.ReferenceEquals(this.CNDeclarationBillField, value) != true)) {
                    this.CNDeclarationBillField = value;
                    this.RaisePropertyChanged("CNDeclarationBill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispLandedCost {
            get {
                return this.DispLandedCostField;
            }
            set {
                if ((this.DispLandedCostField.Equals(value) != true)) {
                    this.DispLandedCostField = value;
                    this.RaisePropertyChanged("DispLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPackSlip {
            get {
                return this.GlbPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPackSlipField, value) != true)) {
                    this.GlbPackSlipField = value;
                    this.RaisePropertyChanged("GlbPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPurPoint {
            get {
                return this.GlbPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPurPointField, value) != true)) {
                    this.GlbPurPointField = value;
                    this.RaisePropertyChanged("GlbPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbVendorNum {
            get {
                return this.GlbVendorNumField;
            }
            set {
                if ((this.GlbVendorNumField.Equals(value) != true)) {
                    this.GlbVendorNumField = value;
                    this.RaisePropertyChanged("GlbVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HdrTaxNoUpdt {
            get {
                return this.HdrTaxNoUpdtField;
            }
            set {
                if ((this.HdrTaxNoUpdtField.Equals(value) != true)) {
                    this.HdrTaxNoUpdtField = value;
                    this.RaisePropertyChanged("HdrTaxNoUpdt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICLinked {
            get {
                return this.ICLinkedField;
            }
            set {
                if ((this.ICLinkedField.Equals(value) != true)) {
                    this.ICLinkedField = value;
                    this.RaisePropertyChanged("ICLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportNum {
            get {
                return this.ImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportNumField, value) != true)) {
                    this.ImportNumField = value;
                    this.RaisePropertyChanged("ImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFrom {
            get {
                return this.ImportedFromField;
            }
            set {
                if ((this.ImportedFromField.Equals(value) != true)) {
                    this.ImportedFromField = value;
                    this.RaisePropertyChanged("ImportedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportedFromDesc {
            get {
                return this.ImportedFromDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportedFromDescField, value) != true)) {
                    this.ImportedFromDescField = value;
                    this.RaisePropertyChanged("ImportedFromDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCAmt {
            get {
                return this.InAppliedLCAmtField;
            }
            set {
                if ((this.InAppliedLCAmtField.Equals(value) != true)) {
                    this.InAppliedLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCVariance {
            get {
                return this.InAppliedLCVarianceField;
            }
            set {
                if ((this.InAppliedLCVarianceField.Equals(value) != true)) {
                    this.InAppliedLCVarianceField = value;
                    this.RaisePropertyChanged("InAppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedRcptLCAmt {
            get {
                return this.InAppliedRcptLCAmtField;
            }
            set {
                if ((this.InAppliedRcptLCAmtField.Equals(value) != true)) {
                    this.InAppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCDutyAmt {
            get {
                return this.InLCDutyAmtField;
            }
            set {
                if ((this.InLCDutyAmtField.Equals(value) != true)) {
                    this.InLCDutyAmtField = value;
                    this.RaisePropertyChanged("InLCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCIndCost {
            get {
                return this.InLCIndCostField;
            }
            set {
                if ((this.InLCIndCostField.Equals(value) != true)) {
                    this.InLCIndCostField = value;
                    this.RaisePropertyChanged("InLCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCUpliftIndCost {
            get {
                return this.InLCUpliftIndCostField;
            }
            set {
                if ((this.InLCUpliftIndCostField.Equals(value) != true)) {
                    this.InLCUpliftIndCostField = value;
                    this.RaisePropertyChanged("InLCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCVariance {
            get {
                return this.InLCVarianceField;
            }
            set {
                if ((this.InLCVarianceField.Equals(value) != true)) {
                    this.InLCVarianceField = value;
                    this.RaisePropertyChanged("InLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLandedCost {
            get {
                return this.InLandedCostField;
            }
            set {
                if ((this.InLandedCostField.Equals(value) != true)) {
                    this.InLandedCostField = value;
                    this.RaisePropertyChanged("InLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InSpecDutyAmt {
            get {
                return this.InSpecDutyAmtField;
            }
            set {
                if ((this.InSpecDutyAmtField.Equals(value) != true)) {
                    this.InSpecDutyAmtField = value;
                    this.RaisePropertyChanged("InSpecDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntQueID {
            get {
                return this.IntQueIDField;
            }
            set {
                if ((this.IntQueIDField.Equals(value) != true)) {
                    this.IntQueIDField = value;
                    this.RaisePropertyChanged("IntQueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCComment {
            get {
                return this.LCCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LCCommentField, value) != true)) {
                    this.LCCommentField = value;
                    this.RaisePropertyChanged("LCComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCDisburseMethod {
            get {
                return this.LCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.LCDisburseMethodField, value) != true)) {
                    this.LCDisburseMethodField = value;
                    this.RaisePropertyChanged("LCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCDutyAmt {
            get {
                return this.LCDutyAmtField;
            }
            set {
                if ((this.LCDutyAmtField.Equals(value) != true)) {
                    this.LCDutyAmtField = value;
                    this.RaisePropertyChanged("LCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCIndCost {
            get {
                return this.LCIndCostField;
            }
            set {
                if ((this.LCIndCostField.Equals(value) != true)) {
                    this.LCIndCostField = value;
                    this.RaisePropertyChanged("LCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCMessage {
            get {
                return this.LCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LCMessageField, value) != true)) {
                    this.LCMessageField = value;
                    this.RaisePropertyChanged("LCMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCReference {
            get {
                return this.LCReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LCReferenceField, value) != true)) {
                    this.LCReferenceField = value;
                    this.RaisePropertyChanged("LCReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCUpliftIndCost {
            get {
                return this.LCUpliftIndCostField;
            }
            set {
                if ((this.LCUpliftIndCostField.Equals(value) != true)) {
                    this.LCUpliftIndCostField = value;
                    this.RaisePropertyChanged("LCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCVariance {
            get {
                return this.LCVarianceField;
            }
            set {
                if ((this.LCVarianceField.Equals(value) != true)) {
                    this.LCVarianceField = value;
                    this.RaisePropertyChanged("LCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LandedCost {
            get {
                return this.LandedCostField;
            }
            set {
                if ((this.LandedCostField.Equals(value) != true)) {
                    this.LandedCostField = value;
                    this.RaisePropertyChanged("LandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrigLandedCost {
            get {
                return this.OrigLandedCostField;
            }
            set {
                if ((this.OrigLandedCostField.Equals(value) != true)) {
                    this.OrigLandedCostField = value;
                    this.RaisePropertyChanged("OrigLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORel {
            get {
                return this.PORelField;
            }
            set {
                if ((this.PORelField.Equals(value) != true)) {
                    this.PORelField = value;
                    this.RaisePropertyChanged("PORel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POTypeDesc {
            get {
                return this.POTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeDescField, value) != true)) {
                    this.POTypeDescField = value;
                    this.RaisePropertyChanged("POTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartialReceipt {
            get {
                return this.PartialReceiptField;
            }
            set {
                if ((this.PartialReceiptField.Equals(value) != true)) {
                    this.PartialReceiptField = value;
                    this.RaisePropertyChanged("PartialReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress1 {
            get {
                return this.PurPointAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress1Field, value) != true)) {
                    this.PurPointAddress1Field = value;
                    this.RaisePropertyChanged("PurPointAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress2 {
            get {
                return this.PurPointAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress2Field, value) != true)) {
                    this.PurPointAddress2Field = value;
                    this.RaisePropertyChanged("PurPointAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress3 {
            get {
                return this.PurPointAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress3Field, value) != true)) {
                    this.PurPointAddress3Field = value;
                    this.RaisePropertyChanged("PurPointAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCity {
            get {
                return this.PurPointCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCityField, value) != true)) {
                    this.PurPointCityField = value;
                    this.RaisePropertyChanged("PurPointCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCountry {
            get {
                return this.PurPointCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCountryField, value) != true)) {
                    this.PurPointCountryField = value;
                    this.RaisePropertyChanged("PurPointCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointName {
            get {
                return this.PurPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointNameField, value) != true)) {
                    this.PurPointNameField = value;
                    this.RaisePropertyChanged("PurPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurPointPrimPCon {
            get {
                return this.PurPointPrimPConField;
            }
            set {
                if ((this.PurPointPrimPConField.Equals(value) != true)) {
                    this.PurPointPrimPConField = value;
                    this.RaisePropertyChanged("PurPointPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointState {
            get {
                return this.PurPointStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointStateField, value) != true)) {
                    this.PurPointStateField = value;
                    this.RaisePropertyChanged("PurPointState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointZip {
            get {
                return this.PurPointZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointZipField, value) != true)) {
                    this.PurPointZipField = value;
                    this.RaisePropertyChanged("PurPointZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptComment {
            get {
                return this.ReceiptCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptCommentField, value) != true)) {
                    this.ReceiptCommentField = value;
                    this.RaisePropertyChanged("ReceiptComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivePerson {
            get {
                return this.ReceivePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivePersonField, value) != true)) {
                    this.ReceivePersonField = value;
                    this.RaisePropertyChanged("ReceivePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SaveForInvoicing {
            get {
                return this.SaveForInvoicingField;
            }
            set {
                if ((this.SaveForInvoicingField.Equals(value) != true)) {
                    this.SaveForInvoicingField = value;
                    this.RaisePropertyChanged("SaveForInvoicing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaDesc {
            get {
                return this.ShipViaDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaDescField, value) != true)) {
                    this.ShipViaDescField = value;
                    this.RaisePropertyChanged("ShipViaDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SpecDutyAmt {
            get {
                return this.SpecDutyAmtField;
            }
            set {
                if ((this.SpecDutyAmtField.Equals(value) != true)) {
                    this.SpecDutyAmtField = value;
                    this.RaisePropertyChanged("SpecDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRateGrpCode {
            get {
                return this.TaxRateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRateGrpCodeField, value) != true)) {
                    this.TaxRateGrpCodeField = value;
                    this.RaisePropertyChanged("TaxRateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCodeDescription {
            get {
                return this.TaxRegionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeDescriptionField, value) != true)) {
                    this.TaxRegionCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxesCalculated {
            get {
                return this.TaxesCalculatedField;
            }
            set {
                if ((this.TaxesCalculatedField.Equals(value) != true)) {
                    this.TaxesCalculatedField = value;
                    this.RaisePropertyChanged("TaxesCalculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDutiesAmt {
            get {
                return this.TotDutiesAmtField;
            }
            set {
                if ((this.TotDutiesAmtField.Equals(value) != true)) {
                    this.TotDutiesAmtField = value;
                    this.RaisePropertyChanged("TotDutiesAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotGrossWeight {
            get {
                return this.TotGrossWeightField;
            }
            set {
                if ((this.TotGrossWeightField.Equals(value) != true)) {
                    this.TotGrossWeightField = value;
                    this.RaisePropertyChanged("TotGrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotGrossWeightUOM {
            get {
                return this.TotGrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.TotGrossWeightUOMField, value) != true)) {
                    this.TotGrossWeightUOMField = value;
                    this.RaisePropertyChanged("TotGrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotIndirectCostsAmt {
            get {
                return this.TotIndirectCostsAmtField;
            }
            set {
                if ((this.TotIndirectCostsAmtField.Equals(value) != true)) {
                    this.TotIndirectCostsAmtField = value;
                    this.RaisePropertyChanged("TotIndirectCostsAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLinesAmt {
            get {
                return this.TotLinesAmtField;
            }
            set {
                if ((this.TotLinesAmtField.Equals(value) != true)) {
                    this.TotLinesAmtField = value;
                    this.RaisePropertyChanged("TotLinesAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotWHTaxAmt {
            get {
                return this.TotWHTaxAmtField;
            }
            set {
                if ((this.TotWHTaxAmtField.Equals(value) != true)) {
                    this.TotWHTaxAmtField = value;
                    this.RaisePropertyChanged("TotWHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotWeight {
            get {
                return this.TotWeightField;
            }
            set {
                if ((this.TotWeightField.Equals(value) != true)) {
                    this.TotWeightField = value;
                    this.RaisePropertyChanged("TotWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotWeightUOM {
            get {
                return this.TotWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.TotWeightUOMField, value) != true)) {
                    this.TotWeightUOMField = value;
                    this.RaisePropertyChanged("TotWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmt {
            get {
                return this.TotalAmtField;
            }
            set {
                if ((this.TotalAmtField.Equals(value) != true)) {
                    this.TotalAmtField = value;
                    this.RaisePropertyChanged("TotalAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlArvdDate {
            get {
                return this.UpdateDtlArvdDateField;
            }
            set {
                if ((this.UpdateDtlArvdDateField.Equals(value) != true)) {
                    this.UpdateDtlArvdDateField = value;
                    this.RaisePropertyChanged("UpdateDtlArvdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlRcptDate {
            get {
                return this.UpdateDtlRcptDateField;
            }
            set {
                if ((this.UpdateDtlRcptDateField.Equals(value) != true)) {
                    this.UpdateDtlRcptDateField = value;
                    this.RaisePropertyChanged("UpdateDtlRcptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlRecs {
            get {
                return this.UpdateDtlRecsField;
            }
            set {
                if ((this.UpdateDtlRecsField.Equals(value) != true)) {
                    this.UpdateDtlRecsField = value;
                    this.RaisePropertyChanged("UpdateDtlRecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftPercent {
            get {
                return this.UpliftPercentField;
            }
            set {
                if ((this.UpliftPercentField.Equals(value) != true)) {
                    this.UpliftPercentField = value;
                    this.RaisePropertyChanged("UpliftPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool eshReceived {
            get {
                return this.eshReceivedField;
            }
            set {
                if ((this.eshReceivedField.Equals(value) != true)) {
                    this.eshReceivedField = value;
                    this.RaisePropertyChanged("eshReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vrPONumShipName {
            get {
                return this.vrPONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vrPONumShipNameField, value) != true)) {
                    this.vrPONumShipNameField = value;
                    this.RaisePropertyChanged("vrPONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vrPONumShipToConName {
            get {
                return this.vrPONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vrPONumShipToConNameField, value) != true)) {
                    this.vrPONumShipToConNameField = value;
                    this.RaisePropertyChanged("vrPONumShipToConName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvHeadAttchRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvHeadTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuperGRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SummaryOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuperGRate {
            get {
                return this.EnableSuperGRateField;
            }
            set {
                if ((this.EnableSuperGRateField.Equals(value) != true)) {
                    this.EnableSuperGRateField = value;
                    this.RaisePropertyChanged("EnableSuperGRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocDedTaxAmt {
            get {
                return this.ScrDocDedTaxAmtField;
            }
            set {
                if ((this.ScrDocDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDocDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocFixedAmount {
            get {
                return this.ScrDocFixedAmountField;
            }
            set {
                if ((this.ScrDocFixedAmountField.Equals(value) != true)) {
                    this.ScrDocFixedAmountField = value;
                    this.RaisePropertyChanged("ScrDocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocReportableAmt {
            get {
                return this.ScrDocReportableAmtField;
            }
            set {
                if ((this.ScrDocReportableAmtField.Equals(value) != true)) {
                    this.ScrDocReportableAmtField = value;
                    this.RaisePropertyChanged("ScrDocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmt {
            get {
                return this.ScrDocTaxAmtField;
            }
            set {
                if ((this.ScrDocTaxAmtField.Equals(value) != true)) {
                    this.ScrDocTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmtVar {
            get {
                return this.ScrDocTaxAmtVarField;
            }
            set {
                if ((this.ScrDocTaxAmtVarField.Equals(value) != true)) {
                    this.ScrDocTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxableAmt {
            get {
                return this.ScrDocTaxableAmtField;
            }
            set {
                if ((this.ScrDocTaxableAmtField.Equals(value) != true)) {
                    this.ScrDocTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SummaryOnly {
            get {
                return this.SummaryOnlyField;
            }
            set {
                if ((this.SummaryOnlyField.Equals(value) != true)) {
                    this.SummaryOnlyField = value;
                    this.RaisePropertyChanged("SummaryOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvMiscRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APInvVendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int APInvVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string APInvVendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLCUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeFromLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MscNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurMiscLCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscLCCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscLCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RcvHeadInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RcvHeadReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorVendorIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APInvVendorName {
            get {
                return this.APInvVendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.APInvVendorNameField, value) != true)) {
                    this.APInvVendorNameField = value;
                    this.RaisePropertyChanged("APInvVendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int APInvVendorNum {
            get {
                return this.APInvVendorNumField;
            }
            set {
                if ((this.APInvVendorNumField.Equals(value) != true)) {
                    this.APInvVendorNumField = value;
                    this.RaisePropertyChanged("APInvVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string APInvVendorVendorID {
            get {
                return this.APInvVendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.APInvVendorVendorIDField, value) != true)) {
                    this.APInvVendorVendorIDField = value;
                    this.RaisePropertyChanged("APInvVendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ActualAmt {
            get {
                return this.ActualAmtField;
            }
            set {
                if ((this.ActualAmtField.Equals(value) != true)) {
                    this.ActualAmtField = value;
                    this.RaisePropertyChanged("ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLCUpdate {
            get {
                return this.AllowLCUpdateField;
            }
            set {
                if ((this.AllowLCUpdateField.Equals(value) != true)) {
                    this.AllowLCUpdateField = value;
                    this.RaisePropertyChanged("AllowLCUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrDesc {
            get {
                return this.CurrencyCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrDescField, value) != true)) {
                    this.CurrencyCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrName {
            get {
                return this.CurrencyCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrNameField, value) != true)) {
                    this.CurrencyCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrSymbol {
            get {
                return this.CurrencyCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrSymbolField, value) != true)) {
                    this.CurrencyCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrencyID {
            get {
                return this.CurrencyCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrencyIDField, value) != true)) {
                    this.CurrencyCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDocumentDesc {
            get {
                return this.CurrencyDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDocumentDescField, value) != true)) {
                    this.CurrencyDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocActualAmt {
            get {
                return this.DocActualAmtField;
            }
            set {
                if ((this.DocActualAmtField.Equals(value) != true)) {
                    this.DocActualAmtField = value;
                    this.RaisePropertyChanged("DocActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInActualAmt {
            get {
                return this.DocInActualAmtField;
            }
            set {
                if ((this.DocInActualAmtField.Equals(value) != true)) {
                    this.DocInActualAmtField = value;
                    this.RaisePropertyChanged("DocInActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrActualAmt {
            get {
                return this.DocScrActualAmtField;
            }
            set {
                if ((this.DocScrActualAmtField.Equals(value) != true)) {
                    this.DocScrActualAmtField = value;
                    this.RaisePropertyChanged("DocScrActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeFromLC {
            get {
                return this.ExcludeFromLCField;
            }
            set {
                if ((this.ExcludeFromLCField.Equals(value) != true)) {
                    this.ExcludeFromLCField = value;
                    this.RaisePropertyChanged("ExcludeFromLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InActualAmt {
            get {
                return this.InActualAmtField;
            }
            set {
                if ((this.InActualAmtField.Equals(value) != true)) {
                    this.InActualAmtField = value;
                    this.RaisePropertyChanged("InActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncTransValue {
            get {
                return this.IncTransValueField;
            }
            set {
                if ((this.IncTransValueField.Equals(value) != true)) {
                    this.IncTransValueField = value;
                    this.RaisePropertyChanged("IncTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCDisburseMethod {
            get {
                return this.LCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.LCDisburseMethodField, value) != true)) {
                    this.LCDisburseMethodField = value;
                    this.RaisePropertyChanged("LCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscSeq {
            get {
                return this.MiscSeqField;
            }
            set {
                if ((this.MiscSeqField.Equals(value) != true)) {
                    this.MiscSeqField = value;
                    this.RaisePropertyChanged("MiscSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MscNum {
            get {
                return this.MscNumField;
            }
            set {
                if ((this.MscNumField.Equals(value) != true)) {
                    this.MscNumField = value;
                    this.RaisePropertyChanged("MscNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscDescription {
            get {
                return this.PurMiscDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscDescriptionField, value) != true)) {
                    this.PurMiscDescriptionField = value;
                    this.RaisePropertyChanged("PurMiscDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurMiscLCAmount {
            get {
                return this.PurMiscLCAmountField;
            }
            set {
                if ((this.PurMiscLCAmountField.Equals(value) != true)) {
                    this.PurMiscLCAmountField = value;
                    this.RaisePropertyChanged("PurMiscLCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscLCCurrencyCode {
            get {
                return this.PurMiscLCCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscLCCurrencyCodeField, value) != true)) {
                    this.PurMiscLCCurrencyCodeField = value;
                    this.RaisePropertyChanged("PurMiscLCCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscLCDisburseMethod {
            get {
                return this.PurMiscLCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscLCDisburseMethodField, value) != true)) {
                    this.PurMiscLCDisburseMethodField = value;
                    this.RaisePropertyChanged("PurMiscLCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpDescription {
            get {
                return this.RateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpDescriptionField, value) != true)) {
                    this.RateGrpDescriptionField = value;
                    this.RaisePropertyChanged("RateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateLabel {
            get {
                return this.RateLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.RateLabelField, value) != true)) {
                    this.RateLabelField = value;
                    this.RaisePropertyChanged("RateLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RcvHeadInPrice {
            get {
                return this.RcvHeadInPriceField;
            }
            set {
                if ((this.RcvHeadInPriceField.Equals(value) != true)) {
                    this.RcvHeadInPriceField = value;
                    this.RaisePropertyChanged("RcvHeadInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RcvHeadReceiptDate {
            get {
                return this.RcvHeadReceiptDateField;
            }
            set {
                if ((this.RcvHeadReceiptDateField.Equals(value) != true)) {
                    this.RcvHeadReceiptDateField = value;
                    this.RaisePropertyChanged("RcvHeadReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ActualAmt {
            get {
                return this.Rpt1ActualAmtField;
            }
            set {
                if ((this.Rpt1ActualAmtField.Equals(value) != true)) {
                    this.Rpt1ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt1ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InActualAmt {
            get {
                return this.Rpt1InActualAmtField;
            }
            set {
                if ((this.Rpt1InActualAmtField.Equals(value) != true)) {
                    this.Rpt1InActualAmtField = value;
                    this.RaisePropertyChanged("Rpt1InActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrActualAmt {
            get {
                return this.Rpt1ScrActualAmtField;
            }
            set {
                if ((this.Rpt1ScrActualAmtField.Equals(value) != true)) {
                    this.Rpt1ScrActualAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ActualAmt {
            get {
                return this.Rpt2ActualAmtField;
            }
            set {
                if ((this.Rpt2ActualAmtField.Equals(value) != true)) {
                    this.Rpt2ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt2ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InActualAmt {
            get {
                return this.Rpt2InActualAmtField;
            }
            set {
                if ((this.Rpt2InActualAmtField.Equals(value) != true)) {
                    this.Rpt2InActualAmtField = value;
                    this.RaisePropertyChanged("Rpt2InActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrActualAmt {
            get {
                return this.Rpt2ScrActualAmtField;
            }
            set {
                if ((this.Rpt2ScrActualAmtField.Equals(value) != true)) {
                    this.Rpt2ScrActualAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ActualAmt {
            get {
                return this.Rpt3ActualAmtField;
            }
            set {
                if ((this.Rpt3ActualAmtField.Equals(value) != true)) {
                    this.Rpt3ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt3ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InActualAmt {
            get {
                return this.Rpt3InActualAmtField;
            }
            set {
                if ((this.Rpt3InActualAmtField.Equals(value) != true)) {
                    this.Rpt3InActualAmtField = value;
                    this.RaisePropertyChanged("Rpt3InActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrActualAmt {
            get {
                return this.Rpt3ScrActualAmtField;
            }
            set {
                if ((this.Rpt3ScrActualAmtField.Equals(value) != true)) {
                    this.Rpt3ScrActualAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrActualAmt {
            get {
                return this.ScrActualAmtField;
            }
            set {
                if ((this.ScrActualAmtField.Equals(value) != true)) {
                    this.ScrActualAmtField = value;
                    this.RaisePropertyChanged("ScrActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorVendorID {
            get {
                return this.VendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorVendorIDField, value) != true)) {
                    this.VendorVendorIDField = value;
                    this.RaisePropertyChanged("VendorVendorID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvMiscTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvMiscTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RcvMiscCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvMiscTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrFixedAmount {
            get {
                return this.DocScrFixedAmountField;
            }
            set {
                if ((this.DocScrFixedAmountField.Equals(value) != true)) {
                    this.DocScrFixedAmountField = value;
                    this.RaisePropertyChanged("DocScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscSeq {
            get {
                return this.MiscSeqField;
            }
            set {
                if ((this.MiscSeqField.Equals(value) != true)) {
                    this.MiscSeqField = value;
                    this.RaisePropertyChanged("MiscSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RcvMiscCurrencyCode {
            get {
                return this.RcvMiscCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RcvMiscCurrencyCodeField, value) != true)) {
                    this.RcvMiscCurrencyCodeField = value;
                    this.RaisePropertyChanged("RcvMiscCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierXRefRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SupplierXRefRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SupplierXRefRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InspectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MfgNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MfgPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RcvXRefNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendPartNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SupplierXRefRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inspected {
            get {
                return this.InspectedField;
            }
            set {
                if ((this.InspectedField.Equals(value) != true)) {
                    this.InspectedField = value;
                    this.RaisePropertyChanged("Inspected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoice {
            get {
                return this.InvoiceField;
            }
            set {
                if ((this.InvoiceField.Equals(value) != true)) {
                    this.InvoiceField = value;
                    this.RaisePropertyChanged("Invoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgID {
            get {
                return this.MfgIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgIDField, value) != true)) {
                    this.MfgIDField = value;
                    this.RaisePropertyChanged("MfgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgName {
            get {
                return this.MfgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgNameField, value) != true)) {
                    this.MfgNameField = value;
                    this.RaisePropertyChanged("MfgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MfgNum {
            get {
                return this.MfgNumField;
            }
            set {
                if ((this.MfgNumField.Equals(value) != true)) {
                    this.MfgNumField = value;
                    this.RaisePropertyChanged("MfgNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MfgPartNum {
            get {
                return this.MfgPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MfgPartNumField, value) != true)) {
                    this.MfgPartNumField = value;
                    this.RaisePropertyChanged("MfgPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POReference {
            get {
                return this.POReferenceField;
            }
            set {
                if ((this.POReferenceField.Equals(value) != true)) {
                    this.POReferenceField = value;
                    this.RaisePropertyChanged("POReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RcvXRefNum {
            get {
                return this.RcvXRefNumField;
            }
            set {
                if ((this.RcvXRefNumField.Equals(value) != true)) {
                    this.RcvXRefNumField = value;
                    this.RaisePropertyChanged("RcvXRefNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Receipt {
            get {
                return this.ReceiptField;
            }
            set {
                if ((this.ReceiptField.Equals(value) != true)) {
                    this.ReceiptField = value;
                    this.RaisePropertyChanged("Receipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendNum {
            get {
                return this.VendNumField;
            }
            set {
                if ((this.VendNumField.Equals(value) != true)) {
                    this.VendNumField = value;
                    this.RaisePropertyChanged("VendNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendPartNum {
            get {
                return this.VendPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendPartNumField, value) != true)) {
                    this.VendPartNumField = value;
                    this.RaisePropertyChanged("VendPartNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class RcvHeadListRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowLCUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyToLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoTranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.RcvHeadListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DispLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EntryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GlbPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlbVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICLinkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportedFromDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrigLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartialReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PurPointPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivePersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SaveForInvoicingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SpecDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlArvdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlRcptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlRecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool eshReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vrPONumShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vrPONumShipToConNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowLCUpdate {
            get {
                return this.AllowLCUpdateField;
            }
            set {
                if ((this.AllowLCUpdateField.Equals(value) != true)) {
                    this.AllowLCUpdateField = value;
                    this.RaisePropertyChanged("AllowLCUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUplift {
            get {
                return this.AllowUpliftField;
            }
            set {
                if ((this.AllowUpliftField.Equals(value) != true)) {
                    this.AllowUpliftField = value;
                    this.RaisePropertyChanged("AllowUplift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCAmt {
            get {
                return this.AppliedLCAmtField;
            }
            set {
                if ((this.AppliedLCAmtField.Equals(value) != true)) {
                    this.AppliedLCAmtField = value;
                    this.RaisePropertyChanged("AppliedLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyToLC {
            get {
                return this.ApplyToLCField;
            }
            set {
                if ((this.ApplyToLCField.Equals(value) != true)) {
                    this.ApplyToLCField = value;
                    this.RaisePropertyChanged("ApplyToLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoReceipt {
            get {
                return this.AutoReceiptField;
            }
            set {
                if ((this.AutoReceiptField.Equals(value) != true)) {
                    this.AutoReceiptField = value;
                    this.RaisePropertyChanged("AutoReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoTranID {
            get {
                return this.AutoTranIDField;
            }
            set {
                if ((this.AutoTranIDField.Equals(value) != true)) {
                    this.AutoTranIDField = value;
                    this.RaisePropertyChanged("AutoTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoTranType {
            get {
                return this.AutoTranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoTranTypeField, value) != true)) {
                    this.AutoTranTypeField = value;
                    this.RaisePropertyChanged("AutoTranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DispLandedCost {
            get {
                return this.DispLandedCostField;
            }
            set {
                if ((this.DispLandedCostField.Equals(value) != true)) {
                    this.DispLandedCostField = value;
                    this.RaisePropertyChanged("DispLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EntryDate {
            get {
                return this.EntryDateField;
            }
            set {
                if ((this.EntryDateField.Equals(value) != true)) {
                    this.EntryDateField = value;
                    this.RaisePropertyChanged("EntryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbCompany {
            get {
                return this.GlbCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbCompanyField, value) != true)) {
                    this.GlbCompanyField = value;
                    this.RaisePropertyChanged("GlbCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPackSlip {
            get {
                return this.GlbPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPackSlipField, value) != true)) {
                    this.GlbPackSlipField = value;
                    this.RaisePropertyChanged("GlbPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GlbPurPoint {
            get {
                return this.GlbPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.GlbPurPointField, value) != true)) {
                    this.GlbPurPointField = value;
                    this.RaisePropertyChanged("GlbPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlbVendorNum {
            get {
                return this.GlbVendorNumField;
            }
            set {
                if ((this.GlbVendorNumField.Equals(value) != true)) {
                    this.GlbVendorNumField = value;
                    this.RaisePropertyChanged("GlbVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICLinked {
            get {
                return this.ICLinkedField;
            }
            set {
                if ((this.ICLinkedField.Equals(value) != true)) {
                    this.ICLinkedField = value;
                    this.RaisePropertyChanged("ICLinked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportNum {
            get {
                return this.ImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportNumField, value) != true)) {
                    this.ImportNumField = value;
                    this.RaisePropertyChanged("ImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFrom {
            get {
                return this.ImportedFromField;
            }
            set {
                if ((this.ImportedFromField.Equals(value) != true)) {
                    this.ImportedFromField = value;
                    this.RaisePropertyChanged("ImportedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportedFromDesc {
            get {
                return this.ImportedFromDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportedFromDescField, value) != true)) {
                    this.ImportedFromDescField = value;
                    this.RaisePropertyChanged("ImportedFromDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCComment {
            get {
                return this.LCCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LCCommentField, value) != true)) {
                    this.LCCommentField = value;
                    this.RaisePropertyChanged("LCComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCDisburseMethod {
            get {
                return this.LCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.LCDisburseMethodField, value) != true)) {
                    this.LCDisburseMethodField = value;
                    this.RaisePropertyChanged("LCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCDutyAmt {
            get {
                return this.LCDutyAmtField;
            }
            set {
                if ((this.LCDutyAmtField.Equals(value) != true)) {
                    this.LCDutyAmtField = value;
                    this.RaisePropertyChanged("LCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCIndCost {
            get {
                return this.LCIndCostField;
            }
            set {
                if ((this.LCIndCostField.Equals(value) != true)) {
                    this.LCIndCostField = value;
                    this.RaisePropertyChanged("LCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCMessage {
            get {
                return this.LCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LCMessageField, value) != true)) {
                    this.LCMessageField = value;
                    this.RaisePropertyChanged("LCMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCReference {
            get {
                return this.LCReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LCReferenceField, value) != true)) {
                    this.LCReferenceField = value;
                    this.RaisePropertyChanged("LCReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCUpliftIndCost {
            get {
                return this.LCUpliftIndCostField;
            }
            set {
                if ((this.LCUpliftIndCostField.Equals(value) != true)) {
                    this.LCUpliftIndCostField = value;
                    this.RaisePropertyChanged("LCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCVariance {
            get {
                return this.LCVarianceField;
            }
            set {
                if ((this.LCVarianceField.Equals(value) != true)) {
                    this.LCVarianceField = value;
                    this.RaisePropertyChanged("LCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LandedCost {
            get {
                return this.LandedCostField;
            }
            set {
                if ((this.LandedCostField.Equals(value) != true)) {
                    this.LandedCostField = value;
                    this.RaisePropertyChanged("LandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrigLandedCost {
            get {
                return this.OrigLandedCostField;
            }
            set {
                if ((this.OrigLandedCostField.Equals(value) != true)) {
                    this.OrigLandedCostField = value;
                    this.RaisePropertyChanged("OrigLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POType {
            get {
                return this.POTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeField, value) != true)) {
                    this.POTypeField = value;
                    this.RaisePropertyChanged("POType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POTypeDesc {
            get {
                return this.POTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POTypeDescField, value) != true)) {
                    this.POTypeDescField = value;
                    this.RaisePropertyChanged("POTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartialReceipt {
            get {
                return this.PartialReceiptField;
            }
            set {
                if ((this.PartialReceiptField.Equals(value) != true)) {
                    this.PartialReceiptField = value;
                    this.RaisePropertyChanged("PartialReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress1 {
            get {
                return this.PurPointAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress1Field, value) != true)) {
                    this.PurPointAddress1Field = value;
                    this.RaisePropertyChanged("PurPointAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress2 {
            get {
                return this.PurPointAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress2Field, value) != true)) {
                    this.PurPointAddress2Field = value;
                    this.RaisePropertyChanged("PurPointAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointAddress3 {
            get {
                return this.PurPointAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointAddress3Field, value) != true)) {
                    this.PurPointAddress3Field = value;
                    this.RaisePropertyChanged("PurPointAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCity {
            get {
                return this.PurPointCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCityField, value) != true)) {
                    this.PurPointCityField = value;
                    this.RaisePropertyChanged("PurPointCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointCountry {
            get {
                return this.PurPointCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointCountryField, value) != true)) {
                    this.PurPointCountryField = value;
                    this.RaisePropertyChanged("PurPointCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointName {
            get {
                return this.PurPointNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointNameField, value) != true)) {
                    this.PurPointNameField = value;
                    this.RaisePropertyChanged("PurPointName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PurPointPrimPCon {
            get {
                return this.PurPointPrimPConField;
            }
            set {
                if ((this.PurPointPrimPConField.Equals(value) != true)) {
                    this.PurPointPrimPConField = value;
                    this.RaisePropertyChanged("PurPointPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointState {
            get {
                return this.PurPointStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointStateField, value) != true)) {
                    this.PurPointStateField = value;
                    this.RaisePropertyChanged("PurPointState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPointZip {
            get {
                return this.PurPointZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointZipField, value) != true)) {
                    this.PurPointZipField = value;
                    this.RaisePropertyChanged("PurPointZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptComment {
            get {
                return this.ReceiptCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptCommentField, value) != true)) {
                    this.ReceiptCommentField = value;
                    this.RaisePropertyChanged("ReceiptComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivePerson {
            get {
                return this.ReceivePersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivePersonField, value) != true)) {
                    this.ReceivePersonField = value;
                    this.RaisePropertyChanged("ReceivePerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Received {
            get {
                return this.ReceivedField;
            }
            set {
                if ((this.ReceivedField.Equals(value) != true)) {
                    this.ReceivedField = value;
                    this.RaisePropertyChanged("Received");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SaveForInvoicing {
            get {
                return this.SaveForInvoicingField;
            }
            set {
                if ((this.SaveForInvoicingField.Equals(value) != true)) {
                    this.SaveForInvoicingField = value;
                    this.RaisePropertyChanged("SaveForInvoicing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SpecDutyAmt {
            get {
                return this.SpecDutyAmtField;
            }
            set {
                if ((this.SpecDutyAmtField.Equals(value) != true)) {
                    this.SpecDutyAmtField = value;
                    this.RaisePropertyChanged("SpecDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlArvdDate {
            get {
                return this.UpdateDtlArvdDateField;
            }
            set {
                if ((this.UpdateDtlArvdDateField.Equals(value) != true)) {
                    this.UpdateDtlArvdDateField = value;
                    this.RaisePropertyChanged("UpdateDtlArvdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlRcptDate {
            get {
                return this.UpdateDtlRcptDateField;
            }
            set {
                if ((this.UpdateDtlRcptDateField.Equals(value) != true)) {
                    this.UpdateDtlRcptDateField = value;
                    this.RaisePropertyChanged("UpdateDtlRcptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlRecs {
            get {
                return this.UpdateDtlRecsField;
            }
            set {
                if ((this.UpdateDtlRecsField.Equals(value) != true)) {
                    this.UpdateDtlRecsField = value;
                    this.RaisePropertyChanged("UpdateDtlRecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftPercent {
            get {
                return this.UpliftPercentField;
            }
            set {
                if ((this.UpliftPercentField.Equals(value) != true)) {
                    this.UpliftPercentField = value;
                    this.RaisePropertyChanged("UpliftPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool eshReceived {
            get {
                return this.eshReceivedField;
            }
            set {
                if ((this.eshReceivedField.Equals(value) != true)) {
                    this.eshReceivedField = value;
                    this.RaisePropertyChanged("eshReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vrPONumShipName {
            get {
                return this.vrPONumShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vrPONumShipNameField, value) != true)) {
                    this.vrPONumShipNameField = value;
                    this.RaisePropertyChanged("vrPONumShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vrPONumShipToConName {
            get {
                return this.vrPONumShipToConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vrPONumShipToConNameField, value) != true)) {
                    this.vrPONumShipToConNameField = value;
                    this.RaisePropertyChanged("vrPONumShipToConName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MassReceiptRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MassReceiptRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.MassReceiptRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostPerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CostPerFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DisburseNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IssuedCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurIQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrevRcvDtlRecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceivedCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefDisplayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackDimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseWeight {
            get {
                return this.BaseWeightField;
            }
            set {
                if ((this.BaseWeightField.Equals(value) != true)) {
                    this.BaseWeightField = value;
                    this.RaisePropertyChanged("BaseWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseWeightUOM {
            get {
                return this.BaseWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseWeightUOMField, value) != true)) {
                    this.BaseWeightUOMField = value;
                    this.RaisePropertyChanged("BaseWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostPerCode {
            get {
                return this.CostPerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CostPerCodeField, value) != true)) {
                    this.CostPerCodeField = value;
                    this.RaisePropertyChanged("CostPerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CostPerFactor {
            get {
                return this.CostPerFactorField;
            }
            set {
                if ((this.CostPerFactorField.Equals(value) != true)) {
                    this.CostPerFactorField = value;
                    this.RaisePropertyChanged("CostPerFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DisburseNum {
            get {
                return this.DisburseNumField;
            }
            set {
                if ((this.DisburseNumField.Equals(value) != true)) {
                    this.DisburseNumField = value;
                    this.RaisePropertyChanged("DisburseNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlBurCost {
            get {
                return this.ExtMtlBurCostField;
            }
            set {
                if ((this.ExtMtlBurCostField.Equals(value) != true)) {
                    this.ExtMtlBurCostField = value;
                    this.RaisePropertyChanged("ExtMtlBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IssuedComplete {
            get {
                return this.IssuedCompleteField;
            }
            set {
                if ((this.IssuedCompleteField.Equals(value) != true)) {
                    this.IssuedCompleteField = value;
                    this.RaisePropertyChanged("IssuedComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq {
            get {
                return this.JobSeqField;
            }
            set {
                if ((this.JobSeqField.Equals(value) != true)) {
                    this.JobSeqField = value;
                    this.RaisePropertyChanged("JobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCAmt {
            get {
                return this.LCAmtField;
            }
            set {
                if ((this.LCAmtField.Equals(value) != true)) {
                    this.LCAmtField = value;
                    this.RaisePropertyChanged("LCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCVariance {
            get {
                return this.LCVarianceField;
            }
            set {
                if ((this.LCVarianceField.Equals(value) != true)) {
                    this.LCVarianceField = value;
                    this.RaisePropertyChanged("LCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderQty {
            get {
                return this.OrderQtyField;
            }
            set {
                if ((this.OrderQtyField.Equals(value) != true)) {
                    this.OrderQtyField = value;
                    this.RaisePropertyChanged("OrderQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurIQty {
            get {
                return this.OurIQtyField;
            }
            set {
                if ((this.OurIQtyField.Equals(value) != true)) {
                    this.OurIQtyField = value;
                    this.RaisePropertyChanged("OurIQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurMtlBurUnitCost {
            get {
                return this.OurMtlBurUnitCostField;
            }
            set {
                if ((this.OurMtlBurUnitCostField.Equals(value) != true)) {
                    this.OurMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("OurMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQty {
            get {
                return this.OurQtyField;
            }
            set {
                if ((this.OurQtyField.Equals(value) != true)) {
                    this.OurQtyField = value;
                    this.RaisePropertyChanged("OurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurUnitCost {
            get {
                return this.OurUnitCostField;
            }
            set {
                if ((this.OurUnitCostField.Equals(value) != true)) {
                    this.OurUnitCostField = value;
                    this.RaisePropertyChanged("OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PConvFactor {
            get {
                return this.PConvFactorField;
            }
            set {
                if ((this.PConvFactorField.Equals(value) != true)) {
                    this.PConvFactorField = value;
                    this.RaisePropertyChanged("PConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrevRcvDtlRec {
            get {
                return this.PrevRcvDtlRecField;
            }
            set {
                if ((this.PrevRcvDtlRecField.Equals(value) != true)) {
                    this.PrevRcvDtlRecField = value;
                    this.RaisePropertyChanged("PrevRcvDtlRec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptType {
            get {
                return this.ReceiptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptTypeField, value) != true)) {
                    this.ReceiptTypeField = value;
                    this.RaisePropertyChanged("ReceiptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceivedComplete {
            get {
                return this.ReceivedCompleteField;
            }
            set {
                if ((this.ReceivedCompleteField.Equals(value) != true)) {
                    this.ReceivedCompleteField = value;
                    this.RaisePropertyChanged("ReceivedComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedTo {
            get {
                return this.ReceivedToField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedToField, value) != true)) {
                    this.ReceivedToField = value;
                    this.RaisePropertyChanged("ReceivedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCode {
            get {
                return this.RefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeField, value) != true)) {
                    this.RefCodeField = value;
                    this.RaisePropertyChanged("RefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefDisplayAccount {
            get {
                return this.RefDisplayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.RefDisplayAccountField, value) != true)) {
                    this.RefDisplayAccountField = value;
                    this.RaisePropertyChanged("RefDisplayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefType {
            get {
                return this.RefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefTypeField, value) != true)) {
                    this.RefTypeField = value;
                    this.RaisePropertyChanged("RefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackDims {
            get {
                return this.TrackDimsField;
            }
            set {
                if ((this.TrackDimsField.Equals(value) != true)) {
                    this.TrackDimsField = value;
                    this.RaisePropertyChanged("TrackDims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackLots {
            get {
                return this.TrackLotsField;
            }
            set {
                if ((this.TrackLotsField.Equals(value) != true)) {
                    this.TrackLotsField = value;
                    this.RaisePropertyChanged("TrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VenPartNum {
            get {
                return this.VenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VenPartNumField, value) != true)) {
                    this.VenPartNumField = value;
                    this.RaisePropertyChanged("VenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorQty {
            get {
                return this.VendorQtyField;
            }
            set {
                if ((this.VendorQtyField.Equals(value) != true)) {
                    this.VendorQtyField = value;
                    this.RaisePropertyChanged("VendorQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorUnitCost {
            get {
                return this.VendorUnitCostField;
            }
            set {
                if ((this.VendorUnitCostField.Equals(value) != true)) {
                    this.VendorUnitCostField = value;
                    this.RaisePropertyChanged("VendorUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouseCode {
            get {
                return this.WareHouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouseCodeField, value) != true)) {
                    this.WareHouseCodeField = value;
                    this.RaisePropertyChanged("WareHouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerDetailRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ArrivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArrivedQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseVolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BaseWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommodityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerHeaderContainerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContainerHeaderShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerLineRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableUpliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GrossWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GrossWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InExtTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCSpecLineDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InPOTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCSpecLineDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetWeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OpenPoReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrigCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelArrivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelBTOOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelBTOOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelBTOOrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PORelDueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PORelNeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PORelOpenReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PORelPromiseDtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelPurchasingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelPurchasingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelRcvdQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelRefCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelRelQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelRemQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PORelXRelQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal POTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceivedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivedQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipQtyUOmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxExemptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThisTranUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdatedKeyRowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidPOInfoEnteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdate {
            get {
                return this.AllowUpdateField;
            }
            set {
                if ((this.AllowUpdateField.Equals(value) != true)) {
                    this.AllowUpdateField = value;
                    this.RaisePropertyChanged("AllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ArrivedQty {
            get {
                return this.ArrivedQtyField;
            }
            set {
                if ((this.ArrivedQtyField.Equals(value) != true)) {
                    this.ArrivedQtyField = value;
                    this.RaisePropertyChanged("ArrivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArrivedQtyUOM {
            get {
                return this.ArrivedQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ArrivedQtyUOMField, value) != true)) {
                    this.ArrivedQtyUOMField = value;
                    this.RaisePropertyChanged("ArrivedQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseVolume {
            get {
                return this.BaseVolumeField;
            }
            set {
                if ((this.BaseVolumeField.Equals(value) != true)) {
                    this.BaseVolumeField = value;
                    this.RaisePropertyChanged("BaseVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseVolumeUOM {
            get {
                return this.BaseVolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseVolumeUOMField, value) != true)) {
                    this.BaseVolumeUOMField = value;
                    this.RaisePropertyChanged("BaseVolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseWeight {
            get {
                return this.BaseWeightField;
            }
            set {
                if ((this.BaseWeightField.Equals(value) != true)) {
                    this.BaseWeightField = value;
                    this.RaisePropertyChanged("BaseWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseWeightUOM {
            get {
                return this.BaseWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseWeightUOMField, value) != true)) {
                    this.BaseWeightUOMField = value;
                    this.RaisePropertyChanged("BaseWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityCode {
            get {
                return this.CommodityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityCodeField, value) != true)) {
                    this.CommodityCodeField = value;
                    this.RaisePropertyChanged("CommodityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommodityDescription {
            get {
                return this.CommodityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommodityDescriptionField, value) != true)) {
                    this.CommodityDescriptionField = value;
                    this.RaisePropertyChanged("CommodityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerHeaderContainerDescription {
            get {
                return this.ContainerHeaderContainerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerHeaderContainerDescriptionField, value) != true)) {
                    this.ContainerHeaderContainerDescriptionField = value;
                    this.RaisePropertyChanged("ContainerHeaderContainerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContainerHeaderShipDate {
            get {
                return this.ContainerHeaderShipDateField;
            }
            set {
                if ((this.ContainerHeaderShipDateField.Equals(value) != true)) {
                    this.ContainerHeaderShipDateField = value;
                    this.RaisePropertyChanged("ContainerHeaderShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerLineRef {
            get {
                return this.ContainerLineRefField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerLineRefField, value) != true)) {
                    this.ContainerLineRefField = value;
                    this.RaisePropertyChanged("ContainerLineRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerShipQty {
            get {
                return this.ContainerShipQtyField;
            }
            set {
                if ((this.ContainerShipQtyField.Equals(value) != true)) {
                    this.ContainerShipQtyField = value;
                    this.RaisePropertyChanged("ContainerShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerShipped {
            get {
                return this.ContainerShippedField;
            }
            set {
                if ((this.ContainerShippedField.Equals(value) != true)) {
                    this.ContainerShippedField = value;
                    this.RaisePropertyChanged("ContainerShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryNumDescription {
            get {
                return this.CountryNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNumDescriptionField, value) != true)) {
                    this.CountryNumDescriptionField = value;
                    this.RaisePropertyChanged("CountryNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOurUnitCost {
            get {
                return this.DocOurUnitCostField;
            }
            set {
                if ((this.DocOurUnitCostField.Equals(value) != true)) {
                    this.DocOurUnitCostField = value;
                    this.RaisePropertyChanged("DocOurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTransValue {
            get {
                return this.EnableTransValueField;
            }
            set {
                if ((this.EnableTransValueField.Equals(value) != true)) {
                    this.EnableTransValueField = value;
                    this.RaisePropertyChanged("EnableTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableUplift {
            get {
                return this.EnableUpliftField;
            }
            set {
                if ((this.EnableUpliftField.Equals(value) != true)) {
                    this.EnableUpliftField = value;
                    this.RaisePropertyChanged("EnableUplift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtTransValue {
            get {
                return this.ExtTransValueField;
            }
            set {
                if ((this.ExtTransValueField.Equals(value) != true)) {
                    this.ExtTransValueField = value;
                    this.RaisePropertyChanged("ExtTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GrossWeight {
            get {
                return this.GrossWeightField;
            }
            set {
                if ((this.GrossWeightField.Equals(value) != true)) {
                    this.GrossWeightField = value;
                    this.RaisePropertyChanged("GrossWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GrossWeightUOM {
            get {
                return this.GrossWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.GrossWeightUOMField, value) != true)) {
                    this.GrossWeightUOMField = value;
                    this.RaisePropertyChanged("GrossWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCVariance {
            get {
                return this.InAppliedLCVarianceField;
            }
            set {
                if ((this.InAppliedLCVarianceField.Equals(value) != true)) {
                    this.InAppliedLCVarianceField = value;
                    this.RaisePropertyChanged("InAppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedRcptLCAmt {
            get {
                return this.InAppliedRcptLCAmtField;
            }
            set {
                if ((this.InAppliedRcptLCAmtField.Equals(value) != true)) {
                    this.InAppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InExtTransValue {
            get {
                return this.InExtTransValueField;
            }
            set {
                if ((this.InExtTransValueField.Equals(value) != true)) {
                    this.InExtTransValueField = value;
                    this.RaisePropertyChanged("InExtTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCAmt {
            get {
                return this.InLCAmtField;
            }
            set {
                if ((this.InLCAmtField.Equals(value) != true)) {
                    this.InLCAmtField = value;
                    this.RaisePropertyChanged("InLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCDutyAmt {
            get {
                return this.InLCDutyAmtField;
            }
            set {
                if ((this.InLCDutyAmtField.Equals(value) != true)) {
                    this.InLCDutyAmtField = value;
                    this.RaisePropertyChanged("InLCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCIndCost {
            get {
                return this.InLCIndCostField;
            }
            set {
                if ((this.InLCIndCostField.Equals(value) != true)) {
                    this.InLCIndCostField = value;
                    this.RaisePropertyChanged("InLCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCSpecLineDutyAmt {
            get {
                return this.InLCSpecLineDutyAmtField;
            }
            set {
                if ((this.InLCSpecLineDutyAmtField.Equals(value) != true)) {
                    this.InLCSpecLineDutyAmtField = value;
                    this.RaisePropertyChanged("InLCSpecLineDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCUpliftIndCost {
            get {
                return this.InLCUpliftIndCostField;
            }
            set {
                if ((this.InLCUpliftIndCostField.Equals(value) != true)) {
                    this.InLCUpliftIndCostField = value;
                    this.RaisePropertyChanged("InLCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InPOTransValue {
            get {
                return this.InPOTransValueField;
            }
            set {
                if ((this.InPOTransValueField.Equals(value) != true)) {
                    this.InPOTransValueField = value;
                    this.RaisePropertyChanged("InPOTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCAmt {
            get {
                return this.LCAmtField;
            }
            set {
                if ((this.LCAmtField.Equals(value) != true)) {
                    this.LCAmtField = value;
                    this.RaisePropertyChanged("LCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCDutyAmt {
            get {
                return this.LCDutyAmtField;
            }
            set {
                if ((this.LCDutyAmtField.Equals(value) != true)) {
                    this.LCDutyAmtField = value;
                    this.RaisePropertyChanged("LCDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCIndCost {
            get {
                return this.LCIndCostField;
            }
            set {
                if ((this.LCIndCostField.Equals(value) != true)) {
                    this.LCIndCostField = value;
                    this.RaisePropertyChanged("LCIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCSpecLineDutyAmt {
            get {
                return this.LCSpecLineDutyAmtField;
            }
            set {
                if ((this.LCSpecLineDutyAmtField.Equals(value) != true)) {
                    this.LCSpecLineDutyAmtField = value;
                    this.RaisePropertyChanged("LCSpecLineDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCUpliftIndCost {
            get {
                return this.LCUpliftIndCostField;
            }
            set {
                if ((this.LCUpliftIndCostField.Equals(value) != true)) {
                    this.LCUpliftIndCostField = value;
                    this.RaisePropertyChanged("LCUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManualLC {
            get {
                return this.ManualLCField;
            }
            set {
                if ((this.ManualLCField.Equals(value) != true)) {
                    this.ManualLCField = value;
                    this.RaisePropertyChanged("ManualLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetWeightUOM {
            get {
                return this.NetWeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.NetWeightUOMField, value) != true)) {
                    this.NetWeightUOMField = value;
                    this.RaisePropertyChanged("NetWeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OpenPoRelease {
            get {
                return this.OpenPoReleaseField;
            }
            set {
                if ((this.OpenPoReleaseField.Equals(value) != true)) {
                    this.OpenPoReleaseField = value;
                    this.RaisePropertyChanged("OpenPoRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrigCountryNum {
            get {
                return this.OrigCountryNumField;
            }
            set {
                if ((this.OrigCountryNumField.Equals(value) != true)) {
                    this.OrigCountryNumField = value;
                    this.RaisePropertyChanged("OrigCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurUnitCost {
            get {
                return this.OurUnitCostField;
            }
            set {
                if ((this.OurUnitCostField.Equals(value) != true)) {
                    this.OurUnitCostField = value;
                    this.RaisePropertyChanged("OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderInPrice {
            get {
                return this.POHeaderInPriceField;
            }
            set {
                if ((this.POHeaderInPriceField.Equals(value) != true)) {
                    this.POHeaderInPriceField = value;
                    this.RaisePropertyChanged("POHeaderInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelArrivedQty {
            get {
                return this.PORelArrivedQtyField;
            }
            set {
                if ((this.PORelArrivedQtyField.Equals(value) != true)) {
                    this.PORelArrivedQtyField = value;
                    this.RaisePropertyChanged("PORelArrivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelBTOOrderLine {
            get {
                return this.PORelBTOOrderLineField;
            }
            set {
                if ((this.PORelBTOOrderLineField.Equals(value) != true)) {
                    this.PORelBTOOrderLineField = value;
                    this.RaisePropertyChanged("PORelBTOOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelBTOOrderNum {
            get {
                return this.PORelBTOOrderNumField;
            }
            set {
                if ((this.PORelBTOOrderNumField.Equals(value) != true)) {
                    this.PORelBTOOrderNumField = value;
                    this.RaisePropertyChanged("PORelBTOOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelBTOOrderRelNum {
            get {
                return this.PORelBTOOrderRelNumField;
            }
            set {
                if ((this.PORelBTOOrderRelNumField.Equals(value) != true)) {
                    this.PORelBTOOrderRelNumField = value;
                    this.RaisePropertyChanged("PORelBTOOrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PORelDueDate {
            get {
                return this.PORelDueDateField;
            }
            set {
                if ((this.PORelDueDateField.Equals(value) != true)) {
                    this.PORelDueDateField = value;
                    this.RaisePropertyChanged("PORelDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PORelNeedByDate {
            get {
                return this.PORelNeedByDateField;
            }
            set {
                if ((this.PORelNeedByDateField.Equals(value) != true)) {
                    this.PORelNeedByDateField = value;
                    this.RaisePropertyChanged("PORelNeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PORelOpenRelease {
            get {
                return this.PORelOpenReleaseField;
            }
            set {
                if ((this.PORelOpenReleaseField.Equals(value) != true)) {
                    this.PORelOpenReleaseField = value;
                    this.RaisePropertyChanged("PORelOpenRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelPlant {
            get {
                return this.PORelPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelPlantField, value) != true)) {
                    this.PORelPlantField = value;
                    this.RaisePropertyChanged("PORelPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PORelPromiseDt {
            get {
                return this.PORelPromiseDtField;
            }
            set {
                if ((this.PORelPromiseDtField.Equals(value) != true)) {
                    this.PORelPromiseDtField = value;
                    this.RaisePropertyChanged("PORelPromiseDt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelPurchasingFactor {
            get {
                return this.PORelPurchasingFactorField;
            }
            set {
                if ((this.PORelPurchasingFactorField.Equals(value) != true)) {
                    this.PORelPurchasingFactorField = value;
                    this.RaisePropertyChanged("PORelPurchasingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelPurchasingFactorDirection {
            get {
                return this.PORelPurchasingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelPurchasingFactorDirectionField, value) != true)) {
                    this.PORelPurchasingFactorDirectionField = value;
                    this.RaisePropertyChanged("PORelPurchasingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelRcvdQty {
            get {
                return this.PORelRcvdQtyField;
            }
            set {
                if ((this.PORelRcvdQtyField.Equals(value) != true)) {
                    this.PORelRcvdQtyField = value;
                    this.RaisePropertyChanged("PORelRcvdQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelRefCodeDesc {
            get {
                return this.PORelRefCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelRefCodeDescField, value) != true)) {
                    this.PORelRefCodeDescField = value;
                    this.RaisePropertyChanged("PORelRefCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelRelQty {
            get {
                return this.PORelRelQtyField;
            }
            set {
                if ((this.PORelRelQtyField.Equals(value) != true)) {
                    this.PORelRelQtyField = value;
                    this.RaisePropertyChanged("PORelRelQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelRemQty {
            get {
                return this.PORelRemQtyField;
            }
            set {
                if ((this.PORelRemQtyField.Equals(value) != true)) {
                    this.PORelRemQtyField = value;
                    this.RaisePropertyChanged("PORelRemQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PORelXRelQty {
            get {
                return this.PORelXRelQtyField;
            }
            set {
                if ((this.PORelXRelQtyField.Equals(value) != true)) {
                    this.PORelXRelQtyField = value;
                    this.RaisePropertyChanged("PORelXRelQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal POTransValue {
            get {
                return this.POTransValueField;
            }
            set {
                if ((this.POTransValueField.Equals(value) != true)) {
                    this.POTransValueField = value;
                    this.RaisePropertyChanged("POTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PUM {
            get {
                return this.PUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PUMField, value) != true)) {
                    this.PUMField = value;
                    this.RaisePropertyChanged("PUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoLineDesc {
            get {
                return this.PoLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PoLineDescField, value) != true)) {
                    this.PoLineDescField = value;
                    this.RaisePropertyChanged("PoLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceivedQty {
            get {
                return this.ReceivedQtyField;
            }
            set {
                if ((this.ReceivedQtyField.Equals(value) != true)) {
                    this.ReceivedQtyField = value;
                    this.RaisePropertyChanged("ReceivedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivedQtyUOM {
            get {
                return this.ReceivedQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedQtyUOMField, value) != true)) {
                    this.ReceivedQtyUOMField = value;
                    this.RaisePropertyChanged("ReceivedQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OurUnitCost {
            get {
                return this.Rpt1OurUnitCostField;
            }
            set {
                if ((this.Rpt1OurUnitCostField.Equals(value) != true)) {
                    this.Rpt1OurUnitCostField = value;
                    this.RaisePropertyChanged("Rpt1OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OurUnitCost {
            get {
                return this.Rpt2OurUnitCostField;
            }
            set {
                if ((this.Rpt2OurUnitCostField.Equals(value) != true)) {
                    this.Rpt2OurUnitCostField = value;
                    this.RaisePropertyChanged("Rpt2OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OurUnitCost {
            get {
                return this.Rpt3OurUnitCostField;
            }
            set {
                if ((this.Rpt3OurUnitCostField.Equals(value) != true)) {
                    this.Rpt3OurUnitCostField = value;
                    this.RaisePropertyChanged("Rpt3OurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipQtyUOm {
            get {
                return this.ShipQtyUOmField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipQtyUOmField, value) != true)) {
                    this.ShipQtyUOmField = value;
                    this.RaisePropertyChanged("ShipQtyUOm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierPartNum {
            get {
                return this.SupplierPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierPartNumField, value) != true)) {
                    this.SupplierPartNumField = value;
                    this.RaisePropertyChanged("SupplierPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxExempt {
            get {
                return this.TaxExemptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxExemptField, value) != true)) {
                    this.TaxExemptField = value;
                    this.RaisePropertyChanged("TaxExempt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisTranQty {
            get {
                return this.ThisTranQtyField;
            }
            set {
                if ((this.ThisTranQtyField.Equals(value) != true)) {
                    this.ThisTranQtyField = value;
                    this.RaisePropertyChanged("ThisTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThisTranUOM {
            get {
                return this.ThisTranUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ThisTranUOMField, value) != true)) {
                    this.ThisTranUOMField = value;
                    this.RaisePropertyChanged("ThisTranUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedKeyRow {
            get {
                return this.UpdatedKeyRowField;
            }
            set {
                if ((this.UpdatedKeyRowField.Equals(value) != true)) {
                    this.UpdatedKeyRowField = value;
                    this.RaisePropertyChanged("UpdatedKeyRow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftPercent {
            get {
                return this.UpliftPercentField;
            }
            set {
                if ((this.UpliftPercentField.Equals(value) != true)) {
                    this.UpliftPercentField = value;
                    this.RaisePropertyChanged("UpliftPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidPOInfoEntered {
            get {
                return this.ValidPOInfoEnteredField;
            }
            set {
                if ((this.ValidPOInfoEnteredField.Equals(value) != true)) {
                    this.ValidPOInfoEnteredField = value;
                    this.RaisePropertyChanged("ValidPOInfoEntered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VolumeUOM {
            get {
                return this.VolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeUOMField, value) != true)) {
                    this.VolumeUOMField = value;
                    this.RaisePropertyChanged("VolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerDetailAttchRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerDetailTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnableSuperGRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrFixedAmount {
            get {
                return this.DocScrFixedAmountField;
            }
            set {
                if ((this.DocScrFixedAmountField.Equals(value) != true)) {
                    this.DocScrFixedAmountField = value;
                    this.RaisePropertyChanged("DocScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnableSuperGRate {
            get {
                return this.EnableSuperGRateField;
            }
            set {
                if ((object.ReferenceEquals(this.EnableSuperGRateField, value) != true)) {
                    this.EnableSuperGRateField = value;
                    this.RaisePropertyChanged("EnableSuperGRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDutyRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerDutyRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerDutyRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DutySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool POHeaderInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POHeaderTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TariffDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdate {
            get {
                return this.AllowUpdateField;
            }
            set {
                if ((this.AllowUpdateField.Equals(value) != true)) {
                    this.AllowUpdateField = value;
                    this.RaisePropertyChanged("AllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerDutyRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DutyAmt {
            get {
                return this.DutyAmtField;
            }
            set {
                if ((this.DutyAmtField.Equals(value) != true)) {
                    this.DutyAmtField = value;
                    this.RaisePropertyChanged("DutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DutySeq {
            get {
                return this.DutySeqField;
            }
            set {
                if ((this.DutySeqField.Equals(value) != true)) {
                    this.DutySeqField = value;
                    this.RaisePropertyChanged("DutySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDutyAmt {
            get {
                return this.InDutyAmtField;
            }
            set {
                if ((this.InDutyAmtField.Equals(value) != true)) {
                    this.InDutyAmtField = value;
                    this.RaisePropertyChanged("InDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool POHeaderInPrice {
            get {
                return this.POHeaderInPriceField;
            }
            set {
                if ((this.POHeaderInPriceField.Equals(value) != true)) {
                    this.POHeaderInPriceField = value;
                    this.RaisePropertyChanged("POHeaderInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POHeaderTaxRegionCode {
            get {
                return this.POHeaderTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.POHeaderTaxRegionCodeField, value) != true)) {
                    this.POHeaderTaxRegionCodeField = value;
                    this.RaisePropertyChanged("POHeaderTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDutyAmt {
            get {
                return this.ScrDutyAmtField;
            }
            set {
                if ((this.ScrDutyAmtField.Equals(value) != true)) {
                    this.ScrDutyAmtField = value;
                    this.RaisePropertyChanged("ScrDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffCode {
            get {
                return this.TariffCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffCodeField, value) != true)) {
                    this.TariffCodeField = value;
                    this.RaisePropertyChanged("TariffCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TariffDescription {
            get {
                return this.TariffDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TariffDescriptionField, value) != true)) {
                    this.TariffDescriptionField = value;
                    this.RaisePropertyChanged("TariffDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerHeaderRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionalShippingDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyToLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ArrivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BOExchangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BOLadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerClassDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ContainerIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostPerVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrencyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DechargePortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DechargePortIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DechargePortPortIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispRcptStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCalcTaxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableLCAfterRcptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSplitContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTaxAtLineLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTransferCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableUpliftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedArrivalDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FOBDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImportedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImportedFromDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InAppliedRcptLCAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InContainerDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InContainerIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDocContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCAppliedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InLCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InSpecDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCAccountDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCAppliedAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LCVarianceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadPortDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadPortIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoadPortPortIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NewPoRelAtReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelRcptOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PORelShipOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackageCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartialReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PromiseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceiveAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResetPORelDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ContainerCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShippingDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipLandedCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SpecDutyAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxesCalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TestImportFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDutiesAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotIndirectCostsAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotLinesAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotWHTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdIndCostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdateDtlRecsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftIndCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UpliftPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendCntPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VesselField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool eshReceivedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionalShippingDays {
            get {
                return this.AdditionalShippingDaysField;
            }
            set {
                if ((this.AdditionalShippingDaysField.Equals(value) != true)) {
                    this.AdditionalShippingDaysField = value;
                    this.RaisePropertyChanged("AdditionalShippingDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdate {
            get {
                return this.AllowUpdateField;
            }
            set {
                if ((this.AllowUpdateField.Equals(value) != true)) {
                    this.AllowUpdateField = value;
                    this.RaisePropertyChanged("AllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCAmt {
            get {
                return this.AppliedLCAmtField;
            }
            set {
                if ((this.AppliedLCAmtField.Equals(value) != true)) {
                    this.AppliedLCAmtField = value;
                    this.RaisePropertyChanged("AppliedLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedLCVariance {
            get {
                return this.AppliedLCVarianceField;
            }
            set {
                if ((this.AppliedLCVarianceField.Equals(value) != true)) {
                    this.AppliedLCVarianceField = value;
                    this.RaisePropertyChanged("AppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AppliedRcptLCAmt {
            get {
                return this.AppliedRcptLCAmtField;
            }
            set {
                if ((this.AppliedRcptLCAmtField.Equals(value) != true)) {
                    this.AppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("AppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyToLC {
            get {
                return this.ApplyToLCField;
            }
            set {
                if ((this.ApplyToLCField.Equals(value) != true)) {
                    this.ApplyToLCField = value;
                    this.RaisePropertyChanged("ApplyToLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ArrivedDate {
            get {
                return this.ArrivedDateField;
            }
            set {
                if ((this.ArrivedDateField.Equals(value) != true)) {
                    this.ArrivedDateField = value;
                    this.RaisePropertyChanged("ArrivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BOExchange {
            get {
                return this.BOExchangeField;
            }
            set {
                if ((object.ReferenceEquals(this.BOExchangeField, value) != true)) {
                    this.BOExchangeField = value;
                    this.RaisePropertyChanged("BOExchange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BOLading {
            get {
                return this.BOLadingField;
            }
            set {
                if ((object.ReferenceEquals(this.BOLadingField, value) != true)) {
                    this.BOLadingField = value;
                    this.RaisePropertyChanged("BOLading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConNum {
            get {
                return this.ConNumField;
            }
            set {
                if ((this.ConNumField.Equals(value) != true)) {
                    this.ConNumField = value;
                    this.RaisePropertyChanged("ConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerClass {
            get {
                return this.ContainerClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerClassField, value) != true)) {
                    this.ContainerClassField = value;
                    this.RaisePropertyChanged("ContainerClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerClassDescription {
            get {
                return this.ContainerClassDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerClassDescriptionField, value) != true)) {
                    this.ContainerClassDescriptionField = value;
                    this.RaisePropertyChanged("ContainerClassDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerComments {
            get {
                return this.ContainerCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerCommentsField, value) != true)) {
                    this.ContainerCommentsField = value;
                    this.RaisePropertyChanged("ContainerComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerCost {
            get {
                return this.ContainerCostField;
            }
            set {
                if ((this.ContainerCostField.Equals(value) != true)) {
                    this.ContainerCostField = value;
                    this.RaisePropertyChanged("ContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerCount {
            get {
                return this.ContainerCountField;
            }
            set {
                if ((this.ContainerCountField.Equals(value) != true)) {
                    this.ContainerCountField = value;
                    this.RaisePropertyChanged("ContainerCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerDescription {
            get {
                return this.ContainerDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerDescriptionField, value) != true)) {
                    this.ContainerDescriptionField = value;
                    this.RaisePropertyChanged("ContainerDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerDutyAmt {
            get {
                return this.ContainerDutyAmtField;
            }
            set {
                if ((this.ContainerDutyAmtField.Equals(value) != true)) {
                    this.ContainerDutyAmtField = value;
                    this.RaisePropertyChanged("ContainerDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ContainerIndCost {
            get {
                return this.ContainerIndCostField;
            }
            set {
                if ((this.ContainerIndCostField.Equals(value) != true)) {
                    this.ContainerIndCostField = value;
                    this.RaisePropertyChanged("ContainerIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerReference {
            get {
                return this.ContainerReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerReferenceField, value) != true)) {
                    this.ContainerReferenceField = value;
                    this.RaisePropertyChanged("ContainerReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPerVolume {
            get {
                return this.CostPerVolumeField;
            }
            set {
                if ((this.CostPerVolumeField.Equals(value) != true)) {
                    this.CostPerVolumeField = value;
                    this.RaisePropertyChanged("CostPerVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrencyDate {
            get {
                return this.CurrencyDateField;
            }
            set {
                if ((this.CurrencyDateField.Equals(value) != true)) {
                    this.CurrencyDateField = value;
                    this.RaisePropertyChanged("CurrencyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DechargePortDescription {
            get {
                return this.DechargePortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DechargePortDescriptionField, value) != true)) {
                    this.DechargePortDescriptionField = value;
                    this.RaisePropertyChanged("DechargePortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DechargePortID {
            get {
                return this.DechargePortIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DechargePortIDField, value) != true)) {
                    this.DechargePortIDField = value;
                    this.RaisePropertyChanged("DechargePortID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DechargePortPortID {
            get {
                return this.DechargePortPortIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DechargePortPortIDField, value) != true)) {
                    this.DechargePortPortIDField = value;
                    this.RaisePropertyChanged("DechargePortPortID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispRcptStatus {
            get {
                return this.DispRcptStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DispRcptStatusField, value) != true)) {
                    this.DispRcptStatusField = value;
                    this.RaisePropertyChanged("DispRcptStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispShipStatus {
            get {
                return this.DispShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DispShipStatusField, value) != true)) {
                    this.DispShipStatusField = value;
                    this.RaisePropertyChanged("DispShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayContainerID {
            get {
                return this.DisplayContainerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayContainerIDField, value) != true)) {
                    this.DisplayContainerIDField = value;
                    this.RaisePropertyChanged("DisplayContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocContainerCost {
            get {
                return this.DocContainerCostField;
            }
            set {
                if ((this.DocContainerCostField.Equals(value) != true)) {
                    this.DocContainerCostField = value;
                    this.RaisePropertyChanged("DocContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCalcTaxes {
            get {
                return this.EnableCalcTaxesField;
            }
            set {
                if ((this.EnableCalcTaxesField.Equals(value) != true)) {
                    this.EnableCalcTaxesField = value;
                    this.RaisePropertyChanged("EnableCalcTaxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableLCAfterRcpt {
            get {
                return this.EnableLCAfterRcptField;
            }
            set {
                if ((this.EnableLCAfterRcptField.Equals(value) != true)) {
                    this.EnableLCAfterRcptField = value;
                    this.RaisePropertyChanged("EnableLCAfterRcpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSplitContainer {
            get {
                return this.EnableSplitContainerField;
            }
            set {
                if ((this.EnableSplitContainerField.Equals(value) != true)) {
                    this.EnableSplitContainerField = value;
                    this.RaisePropertyChanged("EnableSplitContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTaxAtLineLevel {
            get {
                return this.EnableTaxAtLineLevelField;
            }
            set {
                if ((this.EnableTaxAtLineLevelField.Equals(value) != true)) {
                    this.EnableTaxAtLineLevelField = value;
                    this.RaisePropertyChanged("EnableTaxAtLineLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTransferCost {
            get {
                return this.EnableTransferCostField;
            }
            set {
                if ((this.EnableTransferCostField.Equals(value) != true)) {
                    this.EnableTransferCostField = value;
                    this.RaisePropertyChanged("EnableTransferCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableUplift {
            get {
                return this.EnableUpliftField;
            }
            set {
                if ((this.EnableUpliftField.Equals(value) != true)) {
                    this.EnableUpliftField = value;
                    this.RaisePropertyChanged("EnableUplift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedArrivalDate {
            get {
                return this.EstimatedArrivalDateField;
            }
            set {
                if ((this.EstimatedArrivalDateField.Equals(value) != true)) {
                    this.EstimatedArrivalDateField = value;
                    this.RaisePropertyChanged("EstimatedArrivalDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOB {
            get {
                return this.FOBField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBField, value) != true)) {
                    this.FOBField = value;
                    this.RaisePropertyChanged("FOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FOBDescription {
            get {
                return this.FOBDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FOBDescriptionField, value) != true)) {
                    this.FOBDescriptionField = value;
                    this.RaisePropertyChanged("FOBDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportNum {
            get {
                return this.ImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportNumField, value) != true)) {
                    this.ImportNumField = value;
                    this.RaisePropertyChanged("ImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ImportedFrom {
            get {
                return this.ImportedFromField;
            }
            set {
                if ((this.ImportedFromField.Equals(value) != true)) {
                    this.ImportedFromField = value;
                    this.RaisePropertyChanged("ImportedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImportedFromDesc {
            get {
                return this.ImportedFromDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ImportedFromDescField, value) != true)) {
                    this.ImportedFromDescField = value;
                    this.RaisePropertyChanged("ImportedFromDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCAmt {
            get {
                return this.InAppliedLCAmtField;
            }
            set {
                if ((this.InAppliedLCAmtField.Equals(value) != true)) {
                    this.InAppliedLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedLCVariance {
            get {
                return this.InAppliedLCVarianceField;
            }
            set {
                if ((this.InAppliedLCVarianceField.Equals(value) != true)) {
                    this.InAppliedLCVarianceField = value;
                    this.RaisePropertyChanged("InAppliedLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InAppliedRcptLCAmt {
            get {
                return this.InAppliedRcptLCAmtField;
            }
            set {
                if ((this.InAppliedRcptLCAmtField.Equals(value) != true)) {
                    this.InAppliedRcptLCAmtField = value;
                    this.RaisePropertyChanged("InAppliedRcptLCAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InContainerCost {
            get {
                return this.InContainerCostField;
            }
            set {
                if ((this.InContainerCostField.Equals(value) != true)) {
                    this.InContainerCostField = value;
                    this.RaisePropertyChanged("InContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InContainerDutyAmt {
            get {
                return this.InContainerDutyAmtField;
            }
            set {
                if ((this.InContainerDutyAmtField.Equals(value) != true)) {
                    this.InContainerDutyAmtField = value;
                    this.RaisePropertyChanged("InContainerDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InContainerIndCost {
            get {
                return this.InContainerIndCostField;
            }
            set {
                if ((this.InContainerIndCostField.Equals(value) != true)) {
                    this.InContainerIndCostField = value;
                    this.RaisePropertyChanged("InContainerIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDocContainerCost {
            get {
                return this.InDocContainerCostField;
            }
            set {
                if ((this.InDocContainerCostField.Equals(value) != true)) {
                    this.InDocContainerCostField = value;
                    this.RaisePropertyChanged("InDocContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCAppliedAmt {
            get {
                return this.InLCAppliedAmtField;
            }
            set {
                if ((this.InLCAppliedAmtField.Equals(value) != true)) {
                    this.InLCAppliedAmtField = value;
                    this.RaisePropertyChanged("InLCAppliedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InLCVariance {
            get {
                return this.InLCVarianceField;
            }
            set {
                if ((this.InLCVarianceField.Equals(value) != true)) {
                    this.InLCVarianceField = value;
                    this.RaisePropertyChanged("InLCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InSpecDutyAmt {
            get {
                return this.InSpecDutyAmtField;
            }
            set {
                if ((this.InSpecDutyAmtField.Equals(value) != true)) {
                    this.InSpecDutyAmtField = value;
                    this.RaisePropertyChanged("InSpecDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUpliftIndCost {
            get {
                return this.InUpliftIndCostField;
            }
            set {
                if ((this.InUpliftIndCostField.Equals(value) != true)) {
                    this.InUpliftIndCostField = value;
                    this.RaisePropertyChanged("InUpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCAccount {
            get {
                return this.LCAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.LCAccountField, value) != true)) {
                    this.LCAccountField = value;
                    this.RaisePropertyChanged("LCAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCAccountDesc {
            get {
                return this.LCAccountDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LCAccountDescField, value) != true)) {
                    this.LCAccountDescField = value;
                    this.RaisePropertyChanged("LCAccountDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCAppliedAmt {
            get {
                return this.LCAppliedAmtField;
            }
            set {
                if ((this.LCAppliedAmtField.Equals(value) != true)) {
                    this.LCAppliedAmtField = value;
                    this.RaisePropertyChanged("LCAppliedAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCComment {
            get {
                return this.LCCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LCCommentField, value) != true)) {
                    this.LCCommentField = value;
                    this.RaisePropertyChanged("LCComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCDisburseMethod {
            get {
                return this.LCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.LCDisburseMethodField, value) != true)) {
                    this.LCDisburseMethodField = value;
                    this.RaisePropertyChanged("LCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCMessage {
            get {
                return this.LCMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LCMessageField, value) != true)) {
                    this.LCMessageField = value;
                    this.RaisePropertyChanged("LCMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCReference {
            get {
                return this.LCReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.LCReferenceField, value) != true)) {
                    this.LCReferenceField = value;
                    this.RaisePropertyChanged("LCReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LCVariance {
            get {
                return this.LCVarianceField;
            }
            set {
                if ((this.LCVarianceField.Equals(value) != true)) {
                    this.LCVarianceField = value;
                    this.RaisePropertyChanged("LCVariance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadPortDescription {
            get {
                return this.LoadPortDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadPortDescriptionField, value) != true)) {
                    this.LoadPortDescriptionField = value;
                    this.RaisePropertyChanged("LoadPortDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadPortID {
            get {
                return this.LoadPortIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadPortIDField, value) != true)) {
                    this.LoadPortIDField = value;
                    this.RaisePropertyChanged("LoadPortID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoadPortPortID {
            get {
                return this.LoadPortPortIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoadPortPortIDField, value) != true)) {
                    this.LoadPortPortIDField = value;
                    this.RaisePropertyChanged("LoadPortPortID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NewPoRelAtReceipt {
            get {
                return this.NewPoRelAtReceiptField;
            }
            set {
                if ((this.NewPoRelAtReceiptField.Equals(value) != true)) {
                    this.NewPoRelAtReceiptField = value;
                    this.RaisePropertyChanged("NewPoRelAtReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelRcptOption {
            get {
                return this.PORelRcptOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelRcptOptionField, value) != true)) {
                    this.PORelRcptOptionField = value;
                    this.RaisePropertyChanged("PORelRcptOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PORelShipOption {
            get {
                return this.PORelShipOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PORelShipOptionField, value) != true)) {
                    this.PORelShipOptionField = value;
                    this.RaisePropertyChanged("PORelShipOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackageCount {
            get {
                return this.PackageCountField;
            }
            set {
                if ((this.PackageCountField.Equals(value) != true)) {
                    this.PackageCountField = value;
                    this.RaisePropertyChanged("PackageCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartialReceipt {
            get {
                return this.PartialReceiptField;
            }
            set {
                if ((this.PartialReceiptField.Equals(value) != true)) {
                    this.PartialReceiptField = value;
                    this.RaisePropertyChanged("PartialReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PromiseDate {
            get {
                return this.PromiseDateField;
            }
            set {
                if ((this.PromiseDateField.Equals(value) != true)) {
                    this.PromiseDateField = value;
                    this.RaisePropertyChanged("PromiseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceiveAll {
            get {
                return this.ReceiveAllField;
            }
            set {
                if ((this.ReceiveAllField.Equals(value) != true)) {
                    this.ReceiveAllField = value;
                    this.RaisePropertyChanged("ReceiveAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResetPORelDates {
            get {
                return this.ResetPORelDatesField;
            }
            set {
                if ((this.ResetPORelDatesField.Equals(value) != true)) {
                    this.ResetPORelDatesField = value;
                    this.RaisePropertyChanged("ResetPORelDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ContainerCost {
            get {
                return this.Rpt1ContainerCostField;
            }
            set {
                if ((this.Rpt1ContainerCostField.Equals(value) != true)) {
                    this.Rpt1ContainerCostField = value;
                    this.RaisePropertyChanged("Rpt1ContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ContainerCost {
            get {
                return this.Rpt2ContainerCostField;
            }
            set {
                if ((this.Rpt2ContainerCostField.Equals(value) != true)) {
                    this.Rpt2ContainerCostField = value;
                    this.RaisePropertyChanged("Rpt2ContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ContainerCost {
            get {
                return this.Rpt3ContainerCostField;
            }
            set {
                if ((this.Rpt3ContainerCostField.Equals(value) != true)) {
                    this.Rpt3ContainerCostField = value;
                    this.RaisePropertyChanged("Rpt3ContainerCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Shipped {
            get {
                return this.ShippedField;
            }
            set {
                if ((this.ShippedField.Equals(value) != true)) {
                    this.ShippedField = value;
                    this.RaisePropertyChanged("Shipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShippingDays {
            get {
                return this.ShippingDaysField;
            }
            set {
                if ((this.ShippingDaysField.Equals(value) != true)) {
                    this.ShippingDaysField = value;
                    this.RaisePropertyChanged("ShippingDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SkipLandedCost {
            get {
                return this.SkipLandedCostField;
            }
            set {
                if ((this.SkipLandedCostField.Equals(value) != true)) {
                    this.SkipLandedCostField = value;
                    this.RaisePropertyChanged("SkipLandedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SpecDutyAmt {
            get {
                return this.SpecDutyAmtField;
            }
            set {
                if ((this.SpecDutyAmtField.Equals(value) != true)) {
                    this.SpecDutyAmtField = value;
                    this.RaisePropertyChanged("SpecDutyAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxPoint {
            get {
                return this.TaxPointField;
            }
            set {
                if ((this.TaxPointField.Equals(value) != true)) {
                    this.TaxPointField = value;
                    this.RaisePropertyChanged("TaxPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxesCalculated {
            get {
                return this.TaxesCalculatedField;
            }
            set {
                if ((this.TaxesCalculatedField.Equals(value) != true)) {
                    this.TaxesCalculatedField = value;
                    this.RaisePropertyChanged("TaxesCalculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TestImportFields {
            get {
                return this.TestImportFieldsField;
            }
            set {
                if ((this.TestImportFieldsField.Equals(value) != true)) {
                    this.TestImportFieldsField = value;
                    this.RaisePropertyChanged("TestImportFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDutiesAmt {
            get {
                return this.TotDutiesAmtField;
            }
            set {
                if ((this.TotDutiesAmtField.Equals(value) != true)) {
                    this.TotDutiesAmtField = value;
                    this.RaisePropertyChanged("TotDutiesAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotIndirectCostsAmt {
            get {
                return this.TotIndirectCostsAmtField;
            }
            set {
                if ((this.TotIndirectCostsAmtField.Equals(value) != true)) {
                    this.TotIndirectCostsAmtField = value;
                    this.RaisePropertyChanged("TotIndirectCostsAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotLinesAmt {
            get {
                return this.TotLinesAmtField;
            }
            set {
                if ((this.TotLinesAmtField.Equals(value) != true)) {
                    this.TotLinesAmtField = value;
                    this.RaisePropertyChanged("TotLinesAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotWHTaxAmt {
            get {
                return this.TotWHTaxAmtField;
            }
            set {
                if ((this.TotWHTaxAmtField.Equals(value) != true)) {
                    this.TotWHTaxAmtField = value;
                    this.RaisePropertyChanged("TotWHTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmt {
            get {
                return this.TotalAmtField;
            }
            set {
                if ((this.TotalAmtField.Equals(value) != true)) {
                    this.TotalAmtField = value;
                    this.RaisePropertyChanged("TotalAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalExtCost {
            get {
                return this.TotalExtCostField;
            }
            set {
                if ((this.TotalExtCostField.Equals(value) != true)) {
                    this.TotalExtCostField = value;
                    this.RaisePropertyChanged("TotalExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWeight {
            get {
                return this.TotalWeightField;
            }
            set {
                if ((this.TotalWeightField.Equals(value) != true)) {
                    this.TotalWeightField = value;
                    this.RaisePropertyChanged("TotalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdIndCosts {
            get {
                return this.UpdIndCostsField;
            }
            set {
                if ((this.UpdIndCostsField.Equals(value) != true)) {
                    this.UpdIndCostsField = value;
                    this.RaisePropertyChanged("UpdIndCosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateDtlRecs {
            get {
                return this.UpdateDtlRecsField;
            }
            set {
                if ((this.UpdateDtlRecsField.Equals(value) != true)) {
                    this.UpdateDtlRecsField = value;
                    this.RaisePropertyChanged("UpdateDtlRecs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftIndCost {
            get {
                return this.UpliftIndCostField;
            }
            set {
                if ((this.UpliftIndCostField.Equals(value) != true)) {
                    this.UpliftIndCostField = value;
                    this.RaisePropertyChanged("UpliftIndCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpliftPercent {
            get {
                return this.UpliftPercentField;
            }
            set {
                if ((this.UpliftPercentField.Equals(value) != true)) {
                    this.UpliftPercentField = value;
                    this.RaisePropertyChanged("UpliftPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntEmailAddress {
            get {
                return this.VendCntEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntEmailAddressField, value) != true)) {
                    this.VendCntEmailAddressField = value;
                    this.RaisePropertyChanged("VendCntEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntFaxNum {
            get {
                return this.VendCntFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntFaxNumField, value) != true)) {
                    this.VendCntFaxNumField = value;
                    this.RaisePropertyChanged("VendCntFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntName {
            get {
                return this.VendCntNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntNameField, value) != true)) {
                    this.VendCntNameField = value;
                    this.RaisePropertyChanged("VendCntName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendCntPhoneNum {
            get {
                return this.VendCntPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendCntPhoneNumField, value) != true)) {
                    this.VendCntPhoneNumField = value;
                    this.RaisePropertyChanged("VendCntPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress3 {
            get {
                return this.VendorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress3Field, value) != true)) {
                    this.VendorAddress3Field = value;
                    this.RaisePropertyChanged("VendorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCountry {
            get {
                return this.VendorCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCountryField, value) != true)) {
                    this.VendorCountryField = value;
                    this.RaisePropertyChanged("VendorCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCurrencyCode {
            get {
                return this.VendorCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCurrencyCodeField, value) != true)) {
                    this.VendorCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDefaultFOB {
            get {
                return this.VendorDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDefaultFOBField, value) != true)) {
                    this.VendorDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorTermsCode {
            get {
                return this.VendorTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorTermsCodeField, value) != true)) {
                    this.VendorTermsCodeField = value;
                    this.RaisePropertyChanged("VendorTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorVendorID {
            get {
                return this.VendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorVendorIDField, value) != true)) {
                    this.VendorVendorIDField = value;
                    this.RaisePropertyChanged("VendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZIP {
            get {
                return this.VendorZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZIPField, value) != true)) {
                    this.VendorZIPField = value;
                    this.RaisePropertyChanged("VendorZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vessel {
            get {
                return this.VesselField;
            }
            set {
                if ((object.ReferenceEquals(this.VesselField, value) != true)) {
                    this.VesselField = value;
                    this.RaisePropertyChanged("Vessel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VolumeUOM {
            get {
                return this.VolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeUOMField, value) != true)) {
                    this.VolumeUOMField = value;
                    this.RaisePropertyChanged("VolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool eshReceived {
            get {
                return this.eshReceivedField;
            }
            set {
                if ((this.eshReceivedField.Equals(value) != true)) {
                    this.eshReceivedField = value;
                    this.RaisePropertyChanged("eshReceived");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerHeaderAttchRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerHeaderTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuperGRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SummaryOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrSymbol {
            get {
                return this.CurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrSymbolField, value) != true)) {
                    this.CurrSymbolField = value;
                    this.RaisePropertyChanged("CurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuperGRate {
            get {
                return this.EnableSuperGRateField;
            }
            set {
                if ((this.EnableSuperGRateField.Equals(value) != true)) {
                    this.EnableSuperGRateField = value;
                    this.RaisePropertyChanged("EnableSuperGRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocDedTaxAmt {
            get {
                return this.ScrDocDedTaxAmtField;
            }
            set {
                if ((this.ScrDocDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDocDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocFixedAmount {
            get {
                return this.ScrDocFixedAmountField;
            }
            set {
                if ((this.ScrDocFixedAmountField.Equals(value) != true)) {
                    this.ScrDocFixedAmountField = value;
                    this.RaisePropertyChanged("ScrDocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocReportableAmt {
            get {
                return this.ScrDocReportableAmtField;
            }
            set {
                if ((this.ScrDocReportableAmtField.Equals(value) != true)) {
                    this.ScrDocReportableAmtField = value;
                    this.RaisePropertyChanged("ScrDocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmt {
            get {
                return this.ScrDocTaxAmtField;
            }
            set {
                if ((this.ScrDocTaxAmtField.Equals(value) != true)) {
                    this.ScrDocTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxAmtVar {
            get {
                return this.ScrDocTaxAmtVarField;
            }
            set {
                if ((this.ScrDocTaxAmtVarField.Equals(value) != true)) {
                    this.ScrDocTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrDocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDocTaxableAmt {
            get {
                return this.ScrDocTaxableAmtField;
            }
            set {
                if ((this.ScrDocTaxableAmtField.Equals(value) != true)) {
                    this.ScrDocTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrDocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SummaryOnly {
            get {
                return this.SummaryOnlyField;
            }
            set {
                if ((this.SummaryOnlyField.Equals(value) != true)) {
                    this.SummaryOnlyField = value;
                    this.RaisePropertyChanged("SummaryOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerMiscRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExchangeRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludeFromLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncTransValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MscNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoTaxRecalcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PurMiscLCAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscLCCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurMiscLCDisburseMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1EstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1HstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2EstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2HstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ActualAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3EstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3HstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrHstEstimateAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCatIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotSATaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ActualAmt {
            get {
                return this.ActualAmtField;
            }
            set {
                if ((this.ActualAmtField.Equals(value) != true)) {
                    this.ActualAmtField = value;
                    this.RaisePropertyChanged("ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdate {
            get {
                return this.AllowUpdateField;
            }
            set {
                if ((this.AllowUpdateField.Equals(value) != true)) {
                    this.AllowUpdateField = value;
                    this.RaisePropertyChanged("AllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCurrSymbol {
            get {
                return this.BaseCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCurrSymbolField, value) != true)) {
                    this.BaseCurrSymbolField = value;
                    this.RaisePropertyChanged("BaseCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentText {
            get {
                return this.CommentTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentTextField, value) != true)) {
                    this.CommentTextField = value;
                    this.RaisePropertyChanged("CommentText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrDesc {
            get {
                return this.CurrencyCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrDescField, value) != true)) {
                    this.CurrencyCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrName {
            get {
                return this.CurrencyCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrNameField, value) != true)) {
                    this.CurrencyCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrSymbol {
            get {
                return this.CurrencyCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrSymbolField, value) != true)) {
                    this.CurrencyCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrencyID {
            get {
                return this.CurrencyCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrencyIDField, value) != true)) {
                    this.CurrencyCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDocumentDesc {
            get {
                return this.CurrencyDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDocumentDescField, value) != true)) {
                    this.CurrencyDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocActualAmt {
            get {
                return this.DocActualAmtField;
            }
            set {
                if ((this.DocActualAmtField.Equals(value) != true)) {
                    this.DocActualAmtField = value;
                    this.RaisePropertyChanged("DocActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocEstimateAmt {
            get {
                return this.DocEstimateAmtField;
            }
            set {
                if ((this.DocEstimateAmtField.Equals(value) != true)) {
                    this.DocEstimateAmtField = value;
                    this.RaisePropertyChanged("DocEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocHstEstimateAmt {
            get {
                return this.DocHstEstimateAmtField;
            }
            set {
                if ((this.DocHstEstimateAmtField.Equals(value) != true)) {
                    this.DocHstEstimateAmtField = value;
                    this.RaisePropertyChanged("DocHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInEstimateAmt {
            get {
                return this.DocInEstimateAmtField;
            }
            set {
                if ((this.DocInEstimateAmtField.Equals(value) != true)) {
                    this.DocInEstimateAmtField = value;
                    this.RaisePropertyChanged("DocInEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInHstEstimateAmt {
            get {
                return this.DocInHstEstimateAmtField;
            }
            set {
                if ((this.DocInHstEstimateAmtField.Equals(value) != true)) {
                    this.DocInHstEstimateAmtField = value;
                    this.RaisePropertyChanged("DocInHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrEstimateAmt {
            get {
                return this.DocScrEstimateAmtField;
            }
            set {
                if ((this.DocScrEstimateAmtField.Equals(value) != true)) {
                    this.DocScrEstimateAmtField = value;
                    this.RaisePropertyChanged("DocScrEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrHstEstimateAmt {
            get {
                return this.DocScrHstEstimateAmtField;
            }
            set {
                if ((this.DocScrHstEstimateAmtField.Equals(value) != true)) {
                    this.DocScrHstEstimateAmtField = value;
                    this.RaisePropertyChanged("DocScrHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EstimateAmt {
            get {
                return this.EstimateAmtField;
            }
            set {
                if ((this.EstimateAmtField.Equals(value) != true)) {
                    this.EstimateAmtField = value;
                    this.RaisePropertyChanged("EstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExchangeRate {
            get {
                return this.ExchangeRateField;
            }
            set {
                if ((this.ExchangeRateField.Equals(value) != true)) {
                    this.ExchangeRateField = value;
                    this.RaisePropertyChanged("ExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeFromLC {
            get {
                return this.ExcludeFromLCField;
            }
            set {
                if ((this.ExcludeFromLCField.Equals(value) != true)) {
                    this.ExcludeFromLCField = value;
                    this.RaisePropertyChanged("ExcludeFromLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HstEstimateAmt {
            get {
                return this.HstEstimateAmtField;
            }
            set {
                if ((this.HstEstimateAmtField.Equals(value) != true)) {
                    this.HstEstimateAmtField = value;
                    this.RaisePropertyChanged("HstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InEstimateAmt {
            get {
                return this.InEstimateAmtField;
            }
            set {
                if ((this.InEstimateAmtField.Equals(value) != true)) {
                    this.InEstimateAmtField = value;
                    this.RaisePropertyChanged("InEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InHstEstimateAmt {
            get {
                return this.InHstEstimateAmtField;
            }
            set {
                if ((this.InHstEstimateAmtField.Equals(value) != true)) {
                    this.InHstEstimateAmtField = value;
                    this.RaisePropertyChanged("InHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncTransValue {
            get {
                return this.IncTransValueField;
            }
            set {
                if ((this.IncTransValueField.Equals(value) != true)) {
                    this.IncTransValueField = value;
                    this.RaisePropertyChanged("IncTransValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LCDisburseMethod {
            get {
                return this.LCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.LCDisburseMethodField, value) != true)) {
                    this.LCDisburseMethodField = value;
                    this.RaisePropertyChanged("LCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockRate {
            get {
                return this.LockRateField;
            }
            set {
                if ((this.LockRateField.Equals(value) != true)) {
                    this.LockRateField = value;
                    this.RaisePropertyChanged("LockRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscSeq {
            get {
                return this.MiscSeqField;
            }
            set {
                if ((this.MiscSeqField.Equals(value) != true)) {
                    this.MiscSeqField = value;
                    this.RaisePropertyChanged("MiscSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MscNum {
            get {
                return this.MscNumField;
            }
            set {
                if ((this.MscNumField.Equals(value) != true)) {
                    this.MscNumField = value;
                    this.RaisePropertyChanged("MscNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoTaxRecalc {
            get {
                return this.NoTaxRecalcField;
            }
            set {
                if ((this.NoTaxRecalcField.Equals(value) != true)) {
                    this.NoTaxRecalcField = value;
                    this.RaisePropertyChanged("NoTaxRecalc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscDescription {
            get {
                return this.PurMiscDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscDescriptionField, value) != true)) {
                    this.PurMiscDescriptionField = value;
                    this.RaisePropertyChanged("PurMiscDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PurMiscLCAmount {
            get {
                return this.PurMiscLCAmountField;
            }
            set {
                if ((this.PurMiscLCAmountField.Equals(value) != true)) {
                    this.PurMiscLCAmountField = value;
                    this.RaisePropertyChanged("PurMiscLCAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscLCCurrencyCode {
            get {
                return this.PurMiscLCCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscLCCurrencyCodeField, value) != true)) {
                    this.PurMiscLCCurrencyCodeField = value;
                    this.RaisePropertyChanged("PurMiscLCCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurMiscLCDisburseMethod {
            get {
                return this.PurMiscLCDisburseMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PurMiscLCDisburseMethodField, value) != true)) {
                    this.PurMiscLCDisburseMethodField = value;
                    this.RaisePropertyChanged("PurMiscLCDisburseMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpDescription {
            get {
                return this.RateGrpDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpDescriptionField, value) != true)) {
                    this.RateGrpDescriptionField = value;
                    this.RaisePropertyChanged("RateGrpDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateLabel {
            get {
                return this.RateLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.RateLabelField, value) != true)) {
                    this.RateLabelField = value;
                    this.RaisePropertyChanged("RateLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ActualAmt {
            get {
                return this.Rpt1ActualAmtField;
            }
            set {
                if ((this.Rpt1ActualAmtField.Equals(value) != true)) {
                    this.Rpt1ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt1ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1EstimateAmt {
            get {
                return this.Rpt1EstimateAmtField;
            }
            set {
                if ((this.Rpt1EstimateAmtField.Equals(value) != true)) {
                    this.Rpt1EstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1EstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1HstEstimateAmt {
            get {
                return this.Rpt1HstEstimateAmtField;
            }
            set {
                if ((this.Rpt1HstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt1HstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1HstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InEstimateAmt {
            get {
                return this.Rpt1InEstimateAmtField;
            }
            set {
                if ((this.Rpt1InEstimateAmtField.Equals(value) != true)) {
                    this.Rpt1InEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1InEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InHstEstimateAmt {
            get {
                return this.Rpt1InHstEstimateAmtField;
            }
            set {
                if ((this.Rpt1InHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt1InHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1InHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrEstimateAmt {
            get {
                return this.Rpt1ScrEstimateAmtField;
            }
            set {
                if ((this.Rpt1ScrEstimateAmtField.Equals(value) != true)) {
                    this.Rpt1ScrEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrHstEstimateAmt {
            get {
                return this.Rpt1ScrHstEstimateAmtField;
            }
            set {
                if ((this.Rpt1ScrHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt1ScrHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ActualAmt {
            get {
                return this.Rpt2ActualAmtField;
            }
            set {
                if ((this.Rpt2ActualAmtField.Equals(value) != true)) {
                    this.Rpt2ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt2ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2EstimateAmt {
            get {
                return this.Rpt2EstimateAmtField;
            }
            set {
                if ((this.Rpt2EstimateAmtField.Equals(value) != true)) {
                    this.Rpt2EstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2EstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2HstEstimateAmt {
            get {
                return this.Rpt2HstEstimateAmtField;
            }
            set {
                if ((this.Rpt2HstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt2HstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2HstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InEstimateAmt {
            get {
                return this.Rpt2InEstimateAmtField;
            }
            set {
                if ((this.Rpt2InEstimateAmtField.Equals(value) != true)) {
                    this.Rpt2InEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2InEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InHstEstimateAmt {
            get {
                return this.Rpt2InHstEstimateAmtField;
            }
            set {
                if ((this.Rpt2InHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt2InHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2InHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrEstimateAmt {
            get {
                return this.Rpt2ScrEstimateAmtField;
            }
            set {
                if ((this.Rpt2ScrEstimateAmtField.Equals(value) != true)) {
                    this.Rpt2ScrEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrHstEstimateAmt {
            get {
                return this.Rpt2ScrHstEstimateAmtField;
            }
            set {
                if ((this.Rpt2ScrHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt2ScrHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ActualAmt {
            get {
                return this.Rpt3ActualAmtField;
            }
            set {
                if ((this.Rpt3ActualAmtField.Equals(value) != true)) {
                    this.Rpt3ActualAmtField = value;
                    this.RaisePropertyChanged("Rpt3ActualAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3EstimateAmt {
            get {
                return this.Rpt3EstimateAmtField;
            }
            set {
                if ((this.Rpt3EstimateAmtField.Equals(value) != true)) {
                    this.Rpt3EstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3EstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3HstEstimateAmt {
            get {
                return this.Rpt3HstEstimateAmtField;
            }
            set {
                if ((this.Rpt3HstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt3HstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3HstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InEstimateAmt {
            get {
                return this.Rpt3InEstimateAmtField;
            }
            set {
                if ((this.Rpt3InEstimateAmtField.Equals(value) != true)) {
                    this.Rpt3InEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3InEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InHstEstimateAmt {
            get {
                return this.Rpt3InHstEstimateAmtField;
            }
            set {
                if ((this.Rpt3InHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt3InHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3InHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrEstimateAmt {
            get {
                return this.Rpt3ScrEstimateAmtField;
            }
            set {
                if ((this.Rpt3ScrEstimateAmtField.Equals(value) != true)) {
                    this.Rpt3ScrEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrHstEstimateAmt {
            get {
                return this.Rpt3ScrHstEstimateAmtField;
            }
            set {
                if ((this.Rpt3ScrHstEstimateAmtField.Equals(value) != true)) {
                    this.Rpt3ScrHstEstimateAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrEstimateAmt {
            get {
                return this.ScrEstimateAmtField;
            }
            set {
                if ((this.ScrEstimateAmtField.Equals(value) != true)) {
                    this.ScrEstimateAmtField = value;
                    this.RaisePropertyChanged("ScrEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrHstEstimateAmt {
            get {
                return this.ScrHstEstimateAmtField;
            }
            set {
                if ((this.ScrHstEstimateAmtField.Equals(value) != true)) {
                    this.ScrHstEstimateAmtField = value;
                    this.RaisePropertyChanged("ScrHstEstimateAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatID {
            get {
                return this.TaxCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDField, value) != true)) {
                    this.TaxCatIDField = value;
                    this.RaisePropertyChanged("TaxCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCatIDDescription {
            get {
                return this.TaxCatIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCatIDDescriptionField, value) != true)) {
                    this.TaxCatIDDescriptionField = value;
                    this.RaisePropertyChanged("TaxCatIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCodeDescription {
            get {
                return this.TaxRegionCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeDescriptionField, value) != true)) {
                    this.TaxRegionCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Taxable {
            get {
                return this.TaxableField;
            }
            set {
                if ((this.TaxableField.Equals(value) != true)) {
                    this.TaxableField = value;
                    this.RaisePropertyChanged("Taxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotDedTaxAmt {
            get {
                return this.TotDedTaxAmtField;
            }
            set {
                if ((this.TotDedTaxAmtField.Equals(value) != true)) {
                    this.TotDedTaxAmtField = value;
                    this.RaisePropertyChanged("TotDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotSATaxAmt {
            get {
                return this.TotSATaxAmtField;
            }
            set {
                if ((this.TotSATaxAmtField.Equals(value) != true)) {
                    this.TotSATaxAmtField = value;
                    this.RaisePropertyChanged("TotSATaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotTaxAmt {
            get {
                return this.TotTaxAmtField;
            }
            set {
                if ((this.TotTaxAmtField.Equals(value) != true)) {
                    this.TotTaxAmtField = value;
                    this.RaisePropertyChanged("TotTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress3 {
            get {
                return this.VendorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress3Field, value) != true)) {
                    this.VendorAddress3Field = value;
                    this.RaisePropertyChanged("VendorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCountry {
            get {
                return this.VendorCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCountryField, value) != true)) {
                    this.VendorCountryField = value;
                    this.RaisePropertyChanged("VendorCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCurrencyCode {
            get {
                return this.VendorCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCurrencyCodeField, value) != true)) {
                    this.VendorCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDefaultFOB {
            get {
                return this.VendorDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDefaultFOBField, value) != true)) {
                    this.VendorDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorTermsCode {
            get {
                return this.VendorTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorTermsCodeField, value) != true)) {
                    this.VendorTermsCodeField = value;
                    this.RaisePropertyChanged("VendorTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorVendorID {
            get {
                return this.VendorVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorVendorIDField, value) != true)) {
                    this.VendorVendorIDField = value;
                    this.RaisePropertyChanged("VendorVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZIP {
            get {
                return this.VendorZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZIPField, value) != true)) {
                    this.VendorZIPField = value;
                    this.RaisePropertyChanged("VendorZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerMiscTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ContainerMiscTaxRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContainerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ContainerMiscApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerMiscCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerMiscInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ScrTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtVarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangedOn {
            get {
                return this.ChangedOnField;
            }
            set {
                if ((this.ChangedOnField.Equals(value) != true)) {
                    this.ChangedOnField = value;
                    this.RaisePropertyChanged("ChangedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContainerID {
            get {
                return this.ContainerIDField;
            }
            set {
                if ((this.ContainerIDField.Equals(value) != true)) {
                    this.ContainerIDField = value;
                    this.RaisePropertyChanged("ContainerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ContainerMiscApplyDate {
            get {
                return this.ContainerMiscApplyDateField;
            }
            set {
                if ((this.ContainerMiscApplyDateField.Equals(value) != true)) {
                    this.ContainerMiscApplyDateField = value;
                    this.RaisePropertyChanged("ContainerMiscApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerMiscCurrencyCode {
            get {
                return this.ContainerMiscCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerMiscCurrencyCodeField, value) != true)) {
                    this.ContainerMiscCurrencyCodeField = value;
                    this.RaisePropertyChanged("ContainerMiscCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerMiscInPrice {
            get {
                return this.ContainerMiscInPriceField;
            }
            set {
                if ((this.ContainerMiscInPriceField.Equals(value) != true)) {
                    this.ContainerMiscInPriceField = value;
                    this.RaisePropertyChanged("ContainerMiscInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrDedTaxAmt {
            get {
                return this.DocScrDedTaxAmtField;
            }
            set {
                if ((this.DocScrDedTaxAmtField.Equals(value) != true)) {
                    this.DocScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrFixedAmount {
            get {
                return this.DocScrFixedAmountField;
            }
            set {
                if ((this.DocScrFixedAmountField.Equals(value) != true)) {
                    this.DocScrFixedAmountField = value;
                    this.RaisePropertyChanged("DocScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrReportableAmt {
            get {
                return this.DocScrReportableAmtField;
            }
            set {
                if ((this.DocScrReportableAmtField.Equals(value) != true)) {
                    this.DocScrReportableAmtField = value;
                    this.RaisePropertyChanged("DocScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmt {
            get {
                return this.DocScrTaxAmtField;
            }
            set {
                if ((this.DocScrTaxAmtField.Equals(value) != true)) {
                    this.DocScrTaxAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxAmtVar {
            get {
                return this.DocScrTaxAmtVarField;
            }
            set {
                if ((this.DocScrTaxAmtVarField.Equals(value) != true)) {
                    this.DocScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocScrTaxableAmt {
            get {
                return this.DocScrTaxableAmtField;
            }
            set {
                if ((this.DocScrTaxableAmtField.Equals(value) != true)) {
                    this.DocScrTaxableAmtField = value;
                    this.RaisePropertyChanged("DocScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmtVar {
            get {
                return this.DocTaxAmtVarField;
            }
            set {
                if ((this.DocTaxAmtVarField.Equals(value) != true)) {
                    this.DocTaxAmtVarField = value;
                    this.RaisePropertyChanged("DocTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscSeq {
            get {
                return this.MiscSeqField;
            }
            set {
                if ((this.MiscSeqField.Equals(value) != true)) {
                    this.MiscSeqField = value;
                    this.RaisePropertyChanged("MiscSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrDedTaxAmt {
            get {
                return this.Rpt1ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrFixedAmount {
            get {
                return this.Rpt1ScrFixedAmountField;
            }
            set {
                if ((this.Rpt1ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt1ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrReportableAmt {
            get {
                return this.Rpt1ScrReportableAmtField;
            }
            set {
                if ((this.Rpt1ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmt {
            get {
                return this.Rpt1ScrTaxAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxAmtVar {
            get {
                return this.Rpt1ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt1ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ScrTaxableAmt {
            get {
                return this.Rpt1ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt1ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmtVar {
            get {
                return this.Rpt1TaxAmtVarField;
            }
            set {
                if ((this.Rpt1TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt1TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrDedTaxAmt {
            get {
                return this.Rpt2ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrFixedAmount {
            get {
                return this.Rpt2ScrFixedAmountField;
            }
            set {
                if ((this.Rpt2ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt2ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrReportableAmt {
            get {
                return this.Rpt2ScrReportableAmtField;
            }
            set {
                if ((this.Rpt2ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmt {
            get {
                return this.Rpt2ScrTaxAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxAmtVar {
            get {
                return this.Rpt2ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt2ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ScrTaxableAmt {
            get {
                return this.Rpt2ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt2ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmtVar {
            get {
                return this.Rpt2TaxAmtVarField;
            }
            set {
                if ((this.Rpt2TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt2TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrDedTaxAmt {
            get {
                return this.Rpt3ScrDedTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrDedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrFixedAmount {
            get {
                return this.Rpt3ScrFixedAmountField;
            }
            set {
                if ((this.Rpt3ScrFixedAmountField.Equals(value) != true)) {
                    this.Rpt3ScrFixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrReportableAmt {
            get {
                return this.Rpt3ScrReportableAmtField;
            }
            set {
                if ((this.Rpt3ScrReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmt {
            get {
                return this.Rpt3ScrTaxAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxAmtVar {
            get {
                return this.Rpt3ScrTaxAmtVarField;
            }
            set {
                if ((this.Rpt3ScrTaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ScrTaxableAmt {
            get {
                return this.Rpt3ScrTaxableAmtField;
            }
            set {
                if ((this.Rpt3ScrTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmtVar {
            get {
                return this.Rpt3TaxAmtVarField;
            }
            set {
                if ((this.Rpt3TaxAmtVarField.Equals(value) != true)) {
                    this.Rpt3TaxAmtVarField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrDedTaxAmt {
            get {
                return this.ScrDedTaxAmtField;
            }
            set {
                if ((this.ScrDedTaxAmtField.Equals(value) != true)) {
                    this.ScrDedTaxAmtField = value;
                    this.RaisePropertyChanged("ScrDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrFixedAmount {
            get {
                return this.ScrFixedAmountField;
            }
            set {
                if ((this.ScrFixedAmountField.Equals(value) != true)) {
                    this.ScrFixedAmountField = value;
                    this.RaisePropertyChanged("ScrFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrReportableAmt {
            get {
                return this.ScrReportableAmtField;
            }
            set {
                if ((this.ScrReportableAmtField.Equals(value) != true)) {
                    this.ScrReportableAmtField = value;
                    this.RaisePropertyChanged("ScrReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmt {
            get {
                return this.ScrTaxAmtField;
            }
            set {
                if ((this.ScrTaxAmtField.Equals(value) != true)) {
                    this.ScrTaxAmtField = value;
                    this.RaisePropertyChanged("ScrTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxAmtVar {
            get {
                return this.ScrTaxAmtVarField;
            }
            set {
                if ((this.ScrTaxAmtVarField.Equals(value) != true)) {
                    this.ScrTaxAmtVarField = value;
                    this.RaisePropertyChanged("ScrTaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ScrTaxableAmt {
            get {
                return this.ScrTaxableAmtField;
            }
            set {
                if ((this.ScrTaxableAmtField.Equals(value) != true)) {
                    this.ScrTaxableAmtField = value;
                    this.RaisePropertyChanged("ScrTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmtVar {
            get {
                return this.TaxAmtVarField;
            }
            set {
                if ((this.TaxAmtVarField.Equals(value) != true)) {
                    this.TaxAmtVarField = value;
                    this.RaisePropertyChanged("TaxAmtVar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCodeDescription {
            get {
                return this.TaxCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeDescriptionField, value) != true)) {
                    this.TaxCodeDescriptionField = value;
                    this.RaisePropertyChanged("TaxCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicWAS.Epicor.ReceiptSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationOption = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PendingRcvDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PendingRcvDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORel = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQuantity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouseCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQty = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurUnitCost = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeqType = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranReference = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorQty = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorUnitCost = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptType = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedTo = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedComplete = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IssuedComplete = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenPartNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerCode = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumLabels = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectionReq = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectionPending = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectorID = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectedBy = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectedDate = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectedTime = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedQty = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailedQty = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptDate = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotCostVariance = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonConformnce = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurRate = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurMtlBurUnitCost = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefType = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCode = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCFlag = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbVendorNum = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPurPoint = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPackSlip = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPackLine = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitCost = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Volume = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitCost = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitCost = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitCost = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigCountryNum = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftPercent = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDutyAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCIndCost = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POTransValue = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtTransValue = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Received = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCode = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoReceipt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VolumeUOM = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCSpecLineDutyAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCUpliftIndCost = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCMtlBurUnitCost = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocVendorUnitCost = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1VendorUnitCost = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2VendorUnitCost = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3VendorUnitCost = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCompliant = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplianceMsg = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustNum = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICPackNum = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipRcv = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportNum = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFrom = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFromDesc = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyOption = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConvOverride = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMITransNum = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delivered = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveredComments = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InOurCost = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitCost = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitCost = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitCost = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitCost = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InVendorUnitCost = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInVendorUnitCost = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InVendorUnitCost = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InVendorUnitCost = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InVendorUnitCost = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierUnInvcReceiptQty = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurUnInvcReceiptQty = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCVariance = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedRcptLCAmt = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCAmt = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCDutyAmt = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCIndCost = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCMtlBurUnitCost = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCSpecLineDutyAmt = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCUpliftIndCost = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPOTransValue = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjProcessed = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtNonRecoverableCost = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EpicorFSA = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeBackoutRequired = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLCUpdate = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsmPartDescription = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConsolidatedPO = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerExtCost = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerLCAmt = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractOrder = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerFactor = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableInspection = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayUMField = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrUnitCost = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrVendorUnitCost = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipment = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableBin = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableDim = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableInventoryAttributes = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableLot = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePCID = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSN = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSupplierXRef = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTransValue = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableUplift = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableWhse = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCost = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHReceiveToPCID = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InputOurQty = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectionFlag = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntQueID = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobIUM = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobPartNum = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobRequiredQty = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustID = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MangCustName = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualLC = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MassReceipt = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnTime = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenRelease = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderQty = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurRemQty = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCIDOutboundContainer = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlStatus = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POComment = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PODueDate = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POFactor = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POFactorDirection = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHold = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POIUM = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POPUM = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelArrivedQty = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelStatus = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvdSMIQty = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQty = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemainingSMIQty = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrUnitCost = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrVendorUnitCost = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrUnitCost = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrVendorUnitCost = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrUnitCost = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrVendorUnitCost = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrOurUnitCost = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrVendorUnitCost = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchPONum = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Selected = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetToLocation = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipMaterialQueueCreation = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SMIComplete = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNStusChanged = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagMtlSeq = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagOprSeq = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranQty = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranUOM = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalAmt = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDutiesAmt = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLineAmt = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotWHTaxAmt = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranType = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsePurchaseCode = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCurrSymbol = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenRemQty = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdSuppPrice = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeqDescription = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityDescription = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNumDescription = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCodeDimCodeDescription = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InspectorIDName = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumDescription = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNumPartDescription = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlipInPrice = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumAttrClassID = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineVenPartNum = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineLineDesc = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLinePartNum = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumConfirmed = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumApprovalStatus = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipToConName = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumShipName = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONumApprove = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCodePurchDesc = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointZip = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointState = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCity = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointPrimPCon = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress2 = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress3 = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress1 = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCountry = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointName = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouseCodeDescription = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 284,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvDtlAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlAttrValueSetRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvDtlAttrValueSetRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeValueSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AttributeSetID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfPieces = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoGenerated = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorQty = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDtlTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvDtlTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrFixedAmount = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvDtlPONum = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCurrencyCode = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 105,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvDutyRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvDutyRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DutySeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TariffCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DutyAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDutyAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLCUpdate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDutyAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TariffDescription = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 17,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvHeadRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveForInvoicing = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptComment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivePerson = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCReference = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LandedCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCVariance = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICLinked = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbVendorNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPurPoint = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPackSlip = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDisburseMethod = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoReceipt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoTranType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoTranID = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftPercent = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecDutyAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDutyAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCIndCost = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyToLC = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Received = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCUpliftIndCost = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportNum = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFrom = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFromDesc = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HdrTaxNoUpdt = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateGrpCode = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxesCalculated = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCAmt = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCVariance = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedRcptLCAmt = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLandedCost = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCDutyAmt = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCIndCost = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCUpliftIndCost = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCVariance = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InSpecDutyAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNDeclarationBill = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CNBonded = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialReceipt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORel = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POTypeDesc = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaDesc = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDutiesAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGrossWeight = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotGrossWeightUOM = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotIndirectCostsAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLinesAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotWeight = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotWeightUOM = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotWHTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlArvdDate = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlRcptDate = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlRecs = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLCUpdate = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUplift = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispLandedCost = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eshReceived = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntQueID = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCMessage = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigLandedCost = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointName = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCountry = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointState = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress3 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress1 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointPrimPCon = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress2 = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCity = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointZip = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCodeDescription = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vrPONumShipToConName = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vrPONumShipName = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 129,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvHeadAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvHeadTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SummaryOnly = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuperGRate = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocDedTaxAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocFixedAmount = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocReportableAmt = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxableAmt = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmt = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmtVar = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 106,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludeFromLC = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncTransValue = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDisburseMethod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActualAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocActualAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ActualAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ActualAmt = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ActualAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MscNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APInvVendorNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InActualAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInActualAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InActualAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InActualAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InActualAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateLabel = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLCUpdate = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrActualAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrActualAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrActualAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrActualAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrActualAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APInvVendorName = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APInvVendorVendorID = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrSymbol = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrencyID = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyDocumentDesc = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrDesc = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrName = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCDisburseMethod = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCCurrencyCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscDescription = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCAmount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpDescription = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvHeadReceiptDate = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvHeadInPrice = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorVendorID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 67,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvMiscTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvMiscTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrFixedAmount = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvMiscCurrencyCode = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 105,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierXRefRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SupplierXRefRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgPartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POReference = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Receipt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendPartNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoice = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RcvXRefNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inspected = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="RcvHeadListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="RcvHeadListRow")]
    [System.SerializableAttribute()]
    public class RcvHeadListTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.RcvHeadListRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcvHeadListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum RcvHeadListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaveForInvoicing = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptComment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivePerson = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCReference = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LandedCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCVariance = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICLinked = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbCompany = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbVendorNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPurPoint = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlbPackSlip = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDisburseMethod = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoReceipt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoTranType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POType = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoTranID = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftPercent = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecDutyAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDutyAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCIndCost = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyToLC = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Received = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCUpliftIndCost = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportNum = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFrom = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFromDesc = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispLandedCost = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigLandedCost = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POTypeDesc = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowLCUpdate = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUplift = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlRecs = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eshReceived = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialReceipt = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCMessage = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlRcptDate = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlArvdDate = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointState = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointPrimPCon = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress1 = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCity = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointCountry = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress3 = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointAddress2 = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointZip = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPointName = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vrPONumShipToConName = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        vrPONumShipName = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 90,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MassReceiptTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="MassReceiptRow")]
    [System.SerializableAttribute()]
    public class MassReceiptTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.MassReceiptRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MassReceiptRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum MassReceiptRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouseCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQty = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurUnitCost = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeqType = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorQty = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorUnitCost = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedTo = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedComplete = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IssuedComplete = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VenPartNum = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerCode = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurMtlBurUnitCost = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefType = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCode = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefDisplayAccount = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackDims = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevRcvDtlRec = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLots = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerFactor = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PConvFactor = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQty = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurIQty = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderQty = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMsg = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCost = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisburseNum = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCVariance = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlBurCost = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseWeight = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseWeightUOM = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 61,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerDetailTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerDetailRow")]
    [System.SerializableAttribute()]
    public class ContainerDetailTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerDetailRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerDetailRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerShipQty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipQtyUOm = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Volume = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VolumeUOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NetWeightUOM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurUnitCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOurUnitCost = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OurUnitCost = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OurUnitCost = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OurUnitCost = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigCountryNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerLineRef = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedQty = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedQtyUOM = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQty = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedQtyUOM = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftPercent = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDutyAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCIndCost = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POTransValue = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtTransValue = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityCode = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCSpecLineDutyAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCUpliftIndCost = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeight = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GrossWeightUOM = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxExempt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCVariance = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedRcptLCAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InExtTransValue = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCDutyAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCIndCost = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCSpecLineDutyAmt = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCUpliftIndCost = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPOTransValue = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseWeight = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseWeightUOM = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerShipped = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTransValue = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableUplift = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCost = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManualLC = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpenPoRelease = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PoLineDesc = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelRcvdQty = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelRemQty = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PUM = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierPartNum = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranQty = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranUOM = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatedKeyRow = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidPOInfoEntered = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdate = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseVolume = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseVolumeUOM = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommodityDescription = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerHeaderContainerDescription = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerHeaderShipDate = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNumDescription = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderInPrice = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelBTOOrderNum = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelBTOOrderLine = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelRefCodeDesc = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelPurchasingFactor = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelXRelQty = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelOpenRelease = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelRelQty = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNeedByDate = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelBTOOrderRelNum = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelPromiseDt = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelPurchasingFactorDirection = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelArrivedQty = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelDueDate = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelPlant = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 109,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerDetailAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerDetailAttchRow")]
    [System.SerializableAttribute()]
    public class ContainerDetailAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerDetailAttchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerDetailAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerDetailTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerDetailTaxRow")]
    [System.SerializableAttribute()]
    public class ContainerDetailTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerDetailTaxRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDetailTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerDetailTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuperGRate = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrFixedAmount = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 106,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerDutyTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerDutyRow")]
    [System.SerializableAttribute()]
    public class ContainerDutyTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerDutyRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerDutyRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerDutyRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DutySeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TariffCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DutyAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDutyAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDutyAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderTaxRegionCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POHeaderInPrice = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TariffDescription = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 19,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerHeaderTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerHeaderRow")]
    [System.SerializableAttribute()]
    public class ContainerHeaderTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerHeaderRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerHeaderRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shipped = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerClass = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerCost = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShippingDays = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerComments = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NewPoRelAtReceipt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Volume = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VolumeUOM = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostPerVolume = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerReference = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCReference = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCVariance = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDisburseMethod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyDate = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocContainerCost = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelShipOption = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ContainerCost = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ContainerCost = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ContainerCost = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadPortID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DechargePortID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOB = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerCount = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageCount = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftPercent = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLading = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOExchange = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelRcptOption = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportNum = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vessel = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecDutyAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerDutyAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerIndCost = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyToLC = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArrivedDate = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceivedDate = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedRcptLCAmt = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpliftIndCost = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDate = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AppliedLCVariance = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFrom = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportedFromDesc = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionalShippingDays = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimatedArrivalDate = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromiseDate = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxesCalculated = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedLCVariance = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InAppliedRcptLCAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InContainerCost = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InContainerDutyAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InContainerIndCost = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDocContainerCost = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCAppliedAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InLCVariance = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InSpecDutyAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUpliftIndCost = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayContainerID = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispRcptStatus = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispShipStatus = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableCalcTaxes = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableLCAfterRcpt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSplitContainer = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTransferCost = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableUplift = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        eshReceived = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAccount = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAccountDesc = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCAppliedAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCMessage = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialReceipt = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiveAll = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResetPORelDates = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipLandedCost = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TestImportFields = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalAmt = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalExtCost = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWeight = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDutiesAmt = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotIndirectCostsAmt = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotLinesAmt = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotWHTaxAmt = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateDtlRecs = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdIndCosts = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdate = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTaxAtLineLevel = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxPoint = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerClassDescription = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DechargePortDescription = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DechargePortPortID = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FOBDescription = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadPortPortID = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoadPortDescription = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntPhoneNum = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntName = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntFaxNum = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendCntEmailAddress = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCountry = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorState = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorZIP = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCity = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorVendorID = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorTermsCode = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress3 = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorDefaultFOB = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress1 = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCurrencyCode = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress2 = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 139,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerHeaderAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerHeaderAttchRow")]
    [System.SerializableAttribute()]
    public class ContainerHeaderAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerHeaderAttchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerHeaderAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerHeaderTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerHeaderTaxRow")]
    [System.SerializableAttribute()]
    public class ContainerHeaderTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerHeaderTaxRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerHeaderTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerHeaderTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SummaryOnly = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrSymbol = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuperGRate = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocDedTaxAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocFixedAmount = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocReportableAmt = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxableAmt = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmt = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDocTaxAmtVar = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 104,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerMiscRow")]
    [System.SerializableAttribute()]
    public class ContainerMiscTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerMiscRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MscNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludeFromLC = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncTransValue = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCDisburseMethod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EstimateAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocEstimateAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActualAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocActualAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockRate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentText = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1EstimateAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2EstimateAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3EstimateAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ActualAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ActualAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ActualAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyDate = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocHstEstimateAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HstEstimateAmt = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1HstEstimateAmt = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2HstEstimateAmt = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3HstEstimateAmt = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatID = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxable = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTaxRecalc = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InEstimateAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInEstimateAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InEstimateAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InEstimateAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InEstimateAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InHstEstimateAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInHstEstimateAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InHstEstimateAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InHstEstimateAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InHstEstimateAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowUpdate = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCurrSymbol = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotDedTaxAmt = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotSATaxAmt = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotTaxAmt = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateLabel = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrEstimateAmt = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrEstimateAmt = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrEstimateAmt = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrEstimateAmt = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrHstEstimateAmt = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrHstEstimateAmt = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrHstEstimateAmt = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrHstEstimateAmt = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrEstimateAmt = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrHstEstimateAmt = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrName = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrSymbol = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyDocumentDesc = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrencyID = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrDesc = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCAmount = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCCurrencyCode = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscDescription = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurMiscLCDisburseMethod = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpDescription = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCatIDDescription = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCodeDescription = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCurrencyCode = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorDefaultFOB = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress3 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorState = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCity = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorVendorID = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorTermsCode = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress2 = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress1 = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorZIP = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCountry = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 93,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ContainerMiscTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ContainerMiscTaxRow")]
    [System.SerializableAttribute()]
    public class ContainerMiscTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.ContainerMiscTaxRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContainerMiscTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ContainerMiscTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedOn = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmtVar = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmtVar = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmtVar = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmtVar = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmtVar = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrDedTaxAmt = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrReportableAmt = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxableAmt = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmt = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrTaxAmtVar = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrDedTaxAmt = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrReportableAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxableAmt = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrTaxAmtVar = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrDedTaxAmt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrReportableAmt = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxableAmt = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmt = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrTaxAmtVar = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrDedTaxAmt = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrReportableAmt = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxableAmt = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmt = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrTaxAmtVar = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrDedTaxAmt = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrReportableAmt = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxableAmt = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmt = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrTaxAmtVar = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ScrFixedAmount = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ScrFixedAmount = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ScrFixedAmount = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocScrFixedAmount = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrFixedAmount = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerMiscApplyDate = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerMiscInPrice = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerMiscCurrencyCode = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCodeDescription = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 105,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptSvc.BOUpdErrorRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:Receipt", ConfigurationName="Epicor.ReceiptSvc.ReceiptSvcContract")]
    public interface ReceiptSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscTaxCatID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscTaxCatIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscTaxCatIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDResponse OnChangeMiscTaxCatID(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscTaxCatID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscTaxCatIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDResponse> OnChangeMiscTaxCatIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscVendor", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscVendorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscVendorEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorResponse OnChangeMiscVendor(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscVendor", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscVendorResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorResponse> OnChangeMiscVendorAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetSelectSerialNumbersParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetSelectSerialNumbersParamsEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, decimal ipQuantity, string ipUOM, int ipVendNum, string ipVendPP, string ipPackSlip, int ipPackSlipLine, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipReceivedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetSelectSerialNumbersParamsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, decimal ipQuantity, string ipUOM, int ipVendNum, string ipVendPP, string ipPackSlip, int ipPackSlipLine, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipReceivedTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetSNStatus", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetSNStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetSNStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetSNStatus(bool isReceived, string receivedToVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetSNStatus", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetSNStatusResponse")]
        System.Threading.Tasks.Task<string> GetSNStatusAsync(bool isReceived, string receivedToVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateSN", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warningMsg")]
        string ValidateSN(string ipPartNum, string ipSerialNo, int ipVendorNum, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipPackSlip, int ipPackLine, string ipReceivedTo, string ipJobSeqType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateSN", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateSNResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warningMsg")]
        System.Threading.Tasks.Task<string> ValidateSNAsync(string ipPartNum, string ipSerialNo, int ipVendorNum, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipPackSlip, int ipPackLine, string ipReceivedTo, string ipJobSeqType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckMassReceiptChangeWhseBin", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckMassReceiptChangeWhseBinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckMassReceiptChangeWhseBinEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        string CheckMassReceiptChangeWhseBin(string contractID, string whse, string bin);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckMassReceiptChangeWhseBin", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckMassReceiptChangeWhseBinResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        System.Threading.Tasks.Task<string> CheckMassReceiptChangeWhseBinAsync(string contractID, string whse, string bin);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CommitRcvDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CommitRcvDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CommitRcvDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlResponse CommitRcvDtl(EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CommitRcvDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CommitRcvDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlResponse> CommitRcvDtlAsync(EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMassReceipts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreateMassReceiptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMassReceiptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsResponse CreateMassReceipts(EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMassReceipts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreateMassReceiptsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsResponse> CreateMassReceiptsAsync(EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHCanEditPackSlip", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHCanEditPackSlipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/HHCanEditPackSlipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pbIsEdit")]
        bool HHCanEditPackSlip(int piPONum, string pcPackSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHCanEditPackSlip", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHCanEditPackSlipResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pbIsEdit")]
        System.Threading.Tasks.Task<bool> HHCanEditPackSlipAsync(int piPONum, string pcPackSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPartNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPartNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumResponse HHOnChangeDtlPartNum(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPartNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPartNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumResponse> HHOnChangeDtlPartNumAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPOLine", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPOLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPOLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineResponse HHOnChangeDtlPOLine(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPOLine", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPOLineResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineResponse> HHOnChangeDtlPOLineAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPORelNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPORelNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPORelNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumResponse HHOnChangeDtlPORelNum(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPORelNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHOnChangeDtlPORelNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumResponse> HHOnChangeDtlPORelNumAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHValRecDocReq", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHValRecDocReqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/HHValRecDocReqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="infoMsg")]
        string HHValRecDocReq(string partNum, string lotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/HHValRecDocReq", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/HHValRecDocReqResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="infoMsg")]
        System.Threading.Tasks.Task<string> HHValRecDocReqAsync(string partNum, string lotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadResponse GetNewRcvHead(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadResponse> GetNewRcvHeadAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadAttch", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchResponse GetNewRcvHeadAttch(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadAttch", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadAttchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchResponse> GetNewRcvHeadAttchAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxResponse GetNewRcvHeadTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadTaxResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxResponse> GetNewRcvHeadTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlResponse GetNewRcvDtl(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlResponse> GetNewRcvDtlAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttch", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchResponse GetNewRcvDtlAttch(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttch", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchResponse> GetNewRcvDtlAttchAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttrValueSet", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttrValueSetResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttrValueSetEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetResponse GetNewRcvDtlAttrValueSet(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttrValueSet", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlAttrValueSetResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetResponse> GetNewRcvDtlAttrValueSetAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxResponse GetNewRcvDtlTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlTaxResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxResponse> GetNewRcvDtlTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDuty", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDutyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDutyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyResponse GetNewRcvDuty(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDuty", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDutyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyResponse> GetNewRcvDutyAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMisc", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscResponse GetNewRcvMisc(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMisc", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscResponse> GetNewRcvMiscAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxResponse GetNewRcvMiscTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscTax", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvMiscTaxResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxResponse> GetNewRcvMiscTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DeleteByID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DeleteByID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetByID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetByID(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetByID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetByIDAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetList", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetListResponse GetList(EpicWAS.Epicor.ReceiptSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetList", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.ReceiptSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetRows", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetRowsResponse GetRows(EpicWAS.Epicor.ReceiptSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetRows", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.ReceiptSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/Update", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.UpdateResponse Update(EpicWAS.Epicor.ReceiptSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/Update", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.ReceiptSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateExt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.UpdateExtResponse UpdateExt(EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateExt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetMtlQueueSeqValue", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetMtlQueueSeqValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetMtlQueueSeqValueEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        int GetMtlQueueSeqValue(string company, string pcid, int vendorNum, string purPoint, string packSlip, int packLine, string tranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetMtlQueueSeqValue", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetMtlQueueSeqValueResponse")]
        System.Threading.Tasks.Task<int> GetMtlQueueSeqValueAsync(string company, string pcid, int vendorNum, string purPoint, string packSlip, int packLine, string tranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AssignLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/AssignLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberResponse AssignLegalNumber(EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AssignLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CalculateReceiptTaxes", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CalculateReceiptTaxesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CalculateReceiptTaxesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesResponse CalculateReceiptTaxes(EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CalculateReceiptTaxes", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CalculateReceiptTaxesResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesResponse> CalculateReceiptTaxesAsync(EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckCompliance", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckComplianceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckComplianceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckComplianceResponse CheckCompliance(EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckCompliance", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckComplianceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckComplianceResponse> CheckComplianceAsync(EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckContainersBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckContainersBeforeUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckContainersBeforeUpdateEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateResponse CheckContainersBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckContainersBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckContainersBeforeUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateResponse> CheckContainersBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckForDefaultRcvInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckForDefaultRcvInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckForDefaultRcvInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckForDefaultRcvInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckForDefaultRcvInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckForDefaultRcvInfoResponse")]
        System.Threading.Tasks.Task CheckForDefaultRcvInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckShipmentReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckShipmentReceivedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckShipmentReceivedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckShipmentReceived(string packSlip, int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckShipmentReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckShipmentReceivedResponse")]
        System.Threading.Tasks.Task CheckShipmentReceivedAsync(string packSlip, int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMaterialQueueForPCID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreateMaterialQueueForPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMaterialQueueForPCIDEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CreateMaterialQueueForPCID(string pcid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreateMaterialQueueForPCID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreateMaterialQueueForPCIDResponse")]
        System.Threading.Tasks.Task CreateMaterialQueueForPCIDAsync(string pcid);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DisburseLandedCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DisburseLandedCostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/DisburseLandedCostEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DisburseLandedCost(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DisburseLandedCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DisburseLandedCostResponse")]
        System.Threading.Tasks.Task DisburseLandedCostAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetAvailTranDocTypesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetCodeDescList", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetExistingRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetExistingRcvHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetExistingRcvHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadResponse GetExistingRcvHead(EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetExistingRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetExistingRcvHeadResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadResponse> GetExistingRcvHeadAsync(EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetListReceipts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetListReceiptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetListReceiptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetListReceiptsResponse GetListReceipts(EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetListReceipts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetListReceiptsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetListReceiptsResponse> GetListReceiptsAsync(EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetContainerReceiptPartTranPKs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetContainerReceiptPartTranPKsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetContainerReceiptPartTranPKsEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="partTranPKs")]
        string GetContainerReceiptPartTranPKs(int containerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetContainerReceiptPartTranPKs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetContainerReceiptPartTranPKsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="partTranPKs")]
        System.Threading.Tasks.Task<string> GetContainerReceiptPartTranPKsAsync(int containerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartTranPKs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPartTranPKsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartTranPKsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="partTranPKs")]
        string GetPartTranPKs(string packSlip, int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartTranPKs", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPartTranPKsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="partTranPKs")]
        System.Threading.Tasks.Task<string> GetPartTranPKsAsync(string packSlip, int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPendingDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPendingDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetPendingDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetPendingDtlResponse GetPendingDtl(EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPendingDtl", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPendingDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPendingDtlResponse> GetPendingDtlAsync(EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPOInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPOInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetPOInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetPOInfoResponse GetPOInfo(EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPOInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPOInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPOInfoResponse> GetPOInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPurPointInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPurPointInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetPurPointInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoResponse GetPurPointInfo(EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPurPointInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPurPointInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoResponse> GetPurPointInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetReceiptDetailsFromContainer", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetReceiptDetailsFromContainerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetReceiptDetailsFromContainerEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerResponse GetReceiptDetailsFromContainer(EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetReceiptDetailsFromContainer", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetReceiptDetailsFromContainerResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerResponse> GetReceiptDetailsFromContainerAsync(EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetWarningPOClosed", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetWarningPOClosedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetWarningPOClosedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cWarning")]
        string GetWarningPOClosed(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetWarningPOClosed", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetWarningPOClosedResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="cWarning")]
        System.Threading.Tasks.Task<string> GetWarningPOClosedAsync(int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ImportReceipt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ImportReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ImportReceiptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ImportReceiptResponse ImportReceipt(EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ImportReceipt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ImportReceiptResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ImportReceiptResponse> ImportReceiptAsync(EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/InitializeLandedCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/InitializeLandedCostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/InitializeLandedCostEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostResponse InitializeLandedCost(EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/InitializeLandedCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/InitializeLandedCostResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostResponse> InitializeLandedCostAsync(EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/IsContainerReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/IsContainerReceivedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/IsContainerReceivedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool IsContainerReceived(int inContainerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/IsContainerReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/IsContainerReceivedResponse")]
        System.Threading.Tasks.Task<bool> IsContainerReceivedAsync(int inContainerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/PreUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/PreUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/PreUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.PreUpdateResponse PreUpdate(EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/PreUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/PreUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.PreUpdateResponse> PreUpdateAsync(EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessLandedCosts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ProcessLandedCostsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessLandedCostsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ProcessLandedCosts(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessLandedCosts", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ProcessLandedCostsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> ProcessLandedCostsAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessIM", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ProcessIMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessIMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ProcessIMResponse ProcessIM(EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ProcessIM", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ProcessIMResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ProcessIMResponse> ProcessIMAsync(EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAll", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveAllResponse ReceiveAll(EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAll", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveAllResponse> ReceiveAllAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllLines", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllLinesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesResponse ReceiveAllLines(EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllLines", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveAllLinesResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesResponse> ReceiveAllLinesAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUsingArrivedDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUsingArrivedDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUsingArrivedDateEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateResponse ReceiveContainerUsingArrivedDate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUsingArrivedDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUsingArrivedDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateResponse> ReceiveContainerUsingArrivedDateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainer", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerResponse ReceiveContainer(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainer", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerResponse> ReceiveContainerAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateUsingArriveDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateUsingArriveDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateUsingArriveDateEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateResponse ReceiveContainerUpdateUsingArriveDate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateUsingArriveDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateUsingArriveDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateResponse> ReceiveContainerUpdateUsingArriveDateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateResponse ReceiveContainerUpdate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ReceiveContainerUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateResponse> ReceiveContainerUpdateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/SetPrimaryBin", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/SetPrimaryBinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/SetPrimaryBinEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinResponse SetPrimaryBin(EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/SetPrimaryBin", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/SetPrimaryBinResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinResponse> SetPrimaryBinAsync(EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerHdrArrivedDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerHdrArrivedDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerHdrArrivedDateEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateResponse OnChangeContainerHdrArrivedDate(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerHdrArrivedDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerHdrArrivedDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateResponse> OnChangeContainerHdrArrivedDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ResetLandedCostDisbursements", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ResetLandedCostDisbursementsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ResetLandedCostDisbursementsEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ResetLandedCostDisbursements(int ipVendorNum, string ipPurPoint, string ipPackSlip, string ipDisburseMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ResetLandedCostDisbursements", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ResetLandedCostDisbursementsResponse")]
        System.Threading.Tasks.Task ResetLandedCostDisbursementsAsync(int ipVendorNum, string ipPurPoint, string ipPackSlip, string ipDisburseMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateMaster", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.UpdateMasterResponse UpdateMaster(EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/UpdateMaster", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/UpdateMasterResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateMasterResponse> UpdateMasterAsync(EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateMRPONum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateMRPONumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateMRPONumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="errorMsg")]
        string ValidateMRPONum(int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateMRPONum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateMRPONumResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="errorMsg")]
        System.Threading.Tasks.Task<string> ValidateMRPONumAsync(int poNum, int vendorNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateReceiptRecords", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateReceiptRecordsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateReceiptRecordsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateReceiptRecords(string tableName, int vendorNum, string purPoint, string packSlip, int packLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ValidateReceiptRecords", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ValidateReceiptRecordsResponse")]
        System.Threading.Tasks.Task<bool> ValidateReceiptRecordsAsync(string tableName, int vendorNum, string purPoint, string packSlip, int packLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/VoidLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/VoidLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberResponse VoidLegalNumber(EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/VoidLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberResponse> VoidLegalNumberAsync(EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckHdrBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckHdrBeforeUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckHdrBeforeUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateResponse CheckHdrBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckHdrBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckHdrBeforeUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateResponse> CheckHdrBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckLCAmtBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckLCAmtBeforeUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckLCAmtBeforeUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateResponse CheckLCAmtBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckLCAmtBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckLCAmtBeforeUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateResponse> CheckLCAmtBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckOnLeaveHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckOnLeaveHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckOnLeaveHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        string CheckOnLeaveHead(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckOnLeaveHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckOnLeaveHeadResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        System.Threading.Tasks.Task<string> CheckOnLeaveHeadAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckPOClosedInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckPOClosedInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckPOClosedInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        string CheckPOClosedInfo(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckPOClosedInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckPOClosedInfoResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warnMsg")]
        System.Threading.Tasks.Task<string> CheckPOClosedInfoAsync(int vendorNum, string purPoint, string packSlip);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ExistsRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ExistsRcvHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/ExistsRcvHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warning")]
        string ExistsRcvHead(int vendorNum, string purPoint, string packSlip, int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/ExistsRcvHead", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/ExistsRcvHeadResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="warning")]
        System.Threading.Tasks.Task<string> ExistsRcvHeadAsync(int vendorNum, string purPoint, string packSlip, int poNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetByIdChkContainerID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetByIdChkContainerIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetByIdChkContainerIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetByIdChkContainerID(int piVendorNum, string pcPurPoint, string pcPackSlip, int piPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetByIdChkContainerID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetByIdChkContainerIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetByIdChkContainerIDAsync(int piVendorNum, string pcPurPoint, string pcPackSlip, int piPONum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadWithPONum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadWithPONumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadWithPONumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumResponse GetNewRcvHeadWithPONum(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadWithPONum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvHeadWithPONumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumResponse> GetNewRcvHeadWithPONumAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetVendorInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetVendorInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetVendorInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetVendorInfoResponse GetVendorInfo(EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetVendorInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetVendorInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetVendorInfoResponse> GetVendorInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/RcvHeadNegInvCheck", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/RcvHeadNegInvCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/RcvHeadNegInvCheckEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckResponse RcvHeadNegInvCheck(EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/RcvHeadNegInvCheck", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/RcvHeadNegInvCheckResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckResponse> RcvHeadNegInvCheckAsync(EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrReceivedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrReceivedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedResponse OnChangeHdrReceived(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrReceivedResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedResponse> OnChangeHdrReceivedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrTaxRegionCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrTaxRegionCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrTaxRegionCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeResponse OnChangeHdrTaxRegionCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrTaxRegionCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHdrTaxRegionCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeResponse> OnChangeHdrTaxRegionCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerImportFld", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerImportFldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerImportFldEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldResponse OnChangeContainerImportFld(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerImportFld", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeContainerImportFldResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldResponse> OnChangeContainerImportFldAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedHeaderTaxManual", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedHeaderTaxManualResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedHeaderTaxManualEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualResponse OnChangedHeaderTaxManual(EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedHeaderTaxManual", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedHeaderTaxManualResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualResponse> OnChangedHeaderTaxManualAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxFixedAmount", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxFixedAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxFixedAmountEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountResponse OnChangeHeaderTaxFixedAmount(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxFixedAmount", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxFixedAmountResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountResponse> OnChangeHeaderTaxFixedAmountAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxPercentEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentResponse OnChangeHeaderTaxTaxPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentResponse> OnChangeHeaderTaxTaxPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeResponse OnChangeHeaderTaxRateCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeResponse> OnChangeHeaderTaxRateCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeMaster", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeMasterEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterResponse OnChangeHeaderTaxRateCodeMaster(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeMaster", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxRateCodeMasterResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterResponse> OnChangeHeaderTaxRateCodeMasterAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxReportableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxReportableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxReportableAmtEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtResponse OnChangeHeaderTaxReportableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxReportableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxReportableAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtResponse> OnChangeHeaderTaxReportableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxableAmtEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtResponse OnChangeHeaderTaxTaxableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtResponse> OnChangeHeaderTaxTaxableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtResponse OnChangeHeaderTaxTaxAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtResponse> OnChangeHeaderTaxTaxAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeResponse OnChangeHeaderTaxTaxCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeResponse> OnChangeHeaderTaxTaxCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxDeductable", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxDeductableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxDeductableEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableResponse OnChangeHeaderTaxTaxDeductable(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxDeductable", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeHeaderTaxTaxDeductableResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableResponse> OnChangeHeaderTaxTaxDeductableAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocation", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationResponse AutoSetToLocation(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocation", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationResponse> AutoSetToLocationAsync(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationToDflt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationToDfltResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationToDfltEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltResponse AutoSetToLocationToDflt(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationToDflt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/AutoSetToLocationToDfltResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltResponse> AutoSetToLocationToDfltAsync(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlBeforeUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlBeforeUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateResponse CheckDtlBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlBeforeUpdate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlBeforeUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateResponse> CheckDtlBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlCompliance", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlComplianceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlComplianceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceResponse CheckDtlCompliance(EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlCompliance", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlComplianceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceResponse> CheckDtlComplianceAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlJobStatus", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlJobStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlJobStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusResponse CheckDtlJobStatus(EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlJobStatus", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlJobStatusResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusResponse> CheckDtlJobStatusAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlLotInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlLotInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlLotInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoResponse CheckDtlLotInfo(EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlLotInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlLotInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoResponse> CheckDtlLotInfoAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSeqChange", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSeqChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSeqChangeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeResponse CheckDtlSeqChange(EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSeqChange", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSeqChangeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeResponse> CheckDtlSeqChangeAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSSN", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNResponse CheckDtlSSN(EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSSN", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckDtlSSNResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNResponse> CheckDtlSSNAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckIssuedComplete", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckIssuedCompleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckIssuedCompleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteResponse CheckIssuedComplete(EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckIssuedComplete", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckIssuedCompleteResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteResponse> CheckIssuedCompleteAsync(EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckReceivedComplete", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckReceivedCompleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckReceivedCompleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteResponse CheckReceivedComplete(EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckReceivedComplete", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckReceivedCompleteResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteResponse> CheckReceivedCompleteAsync(EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckSupplierPrice", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckSupplierPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CheckSupplierPriceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceResponse CheckSupplierPrice(EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CheckSupplierPrice", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CheckSupplierPriceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceResponse> CheckSupplierPriceAsync(EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/chkUnReceive", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/chkUnReceiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/chkUnReceiveEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool chkUnReceive(int ipPONum, int ipPOLine, int ipPORelNum, string ipPackSlip, int ipPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/chkUnReceive", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/chkUnReceiveResponse")]
        System.Threading.Tasks.Task<bool> chkUnReceiveAsync(int ipPONum, int ipPOLine, int ipPORelNum, string ipPackSlip, int ipPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreatePartLot", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreatePartLotResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/CreatePartLotEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CreatePartLot(string partNum, string lotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/CreatePartLot", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/CreatePartLotResponse")]
        System.Threading.Tasks.Task CreatePartLotAsync(string partNum, string lotNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlAssemblyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlAssemblyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlAssemblyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoResponse GetDtlAssemblyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlAssemblyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlAssemblyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoResponse> GetDtlAssemblyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlJobInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlJobInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlJobInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoResponse GetDtlJobInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlJobInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlJobInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoResponse> GetDtlJobInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlLotInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlLotInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlLotInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoResponse GetDtlLotInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlLotInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlLotInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoResponse> GetDtlLotInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPartInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPartInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPartInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoResponse GetDtlPartInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPartInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPartInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoResponse> GetDtlPartInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoResponse GetDtlPOInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoResponse> GetDtlPOInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOLineInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOLineInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOLineInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoResponse GetDtlPOLineInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOLineInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPOLineInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoResponse> GetDtlPOLineInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPORelInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPORelInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPORelInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoResponse GetDtlPORelInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPORelInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlPORelInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoResponse> GetDtlPORelInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlQtyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlQtyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlQtyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoResponse GetDtlQtyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlQtyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlQtyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoResponse> GetDtlQtyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlRcvdToInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlRcvdToInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlRcvdToInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoResponse GetDtlRcvdToInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlRcvdToInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlRcvdToInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoResponse> GetDtlRcvdToInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlSeqInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlSeqInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlSeqInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoResponse GetDtlSeqInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlSeqInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlSeqInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoResponse> GetDtlSeqInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlVenQtyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlVenQtyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlVenQtyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoResponse GetDtlVenQtyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetDtlVenQtyInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetDtlVenQtyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoResponse> GetDtlVenQtyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetLotImportInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetLotImportInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetLotImportInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoResponse GetLotImportInfo(EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetLotImportInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetLotImportInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoResponse> GetLotImportInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlMisc", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscResponse GetNewRcvDtlMisc(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlMisc", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetNewRcvDtlMiscResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscResponse> GetNewRcvDtlMiscAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPartXRefInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartXRefInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoResponse GetPartXRefInfo(EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/GetPartXRefInfo", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/GetPartXRefInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DisplayWarnMsg", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DisplayWarnMsgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/DisplayWarnMsgEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pcMsg")]
        string DisplayWarnMsg(string PartTranType, string JobNum, int AsmSeq, int JobSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/DisplayWarnMsg", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/DisplayWarnMsgResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pcMsg")]
        System.Threading.Tasks.Task<string> DisplayWarnMsgAsync(string PartTranType, string JobNum, int AsmSeq, int JobSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/LCChangeLCAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/LCChangeLCAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/LCChangeLCAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtResponse LCChangeLCAmt(EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/LCChangeLCAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/LCChangeLCAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtResponse> LCChangeLCAmtAsync(EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedDtlPOTransValue", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedDtlPOTransValueResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedDtlPOTransValueEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueResponse OnChangedDtlPOTransValue(EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedDtlPOTransValue", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedDtlPOTransValueResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueResponse> OnChangedDtlPOTransValueAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlBinNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlBinNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlBinNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumResponse OnChangeDtlBinNum(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlBinNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlBinNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumResponse> OnChangeDtlBinNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCommodity", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCommodityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCommodityEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityResponse OnChangeDtlCommodity(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCommodity", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCommodityResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityResponse> OnChangeDtlCommodityAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCountryNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCountryNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCountryNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumResponse OnChangeDtlCountryNum(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCountryNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlCountryNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumResponse> OnChangeDtlCountryNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlLCIndCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlLCIndCostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlLCIndCostEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostResponse OnChangeDtlLCIndCost(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlLCIndCost", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlLCIndCostResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostResponse> OnChangeDtlLCIndCostAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPCID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDResponse OnChangeDtlPCID(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPCID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDResponse> OnChangeDtlPCIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPOSelected", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPOSelectedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPOSelectedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedResponse OnChangeDtlPOSelected(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPOSelected", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlPOSelectedResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedResponse> OnChangeDtlPOSelectedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceivedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceivedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedResponse OnChangeDtlReceived(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceived", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceivedResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedResponse> OnChangeDtlReceivedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceiptType", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceiptTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceiptTypeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeResponse OnChangeDtlReceiptType(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceiptType", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlReceiptTypeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeResponse> OnChangeDtlReceiptTypeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlSupplierPrice", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlSupplierPriceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlSupplierPriceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceResponse OnChangeDtlSupplierPrice(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlSupplierPrice", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlSupplierPriceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceResponse> OnChangeDtlSupplierPriceAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxCatID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxCatIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxCatIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDResponse OnChangeDtlTaxCatID(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxCatID", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxCatIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDResponse> OnChangeDtlTaxCatIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxExempt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxExemptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxExemptEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptResponse OnChangeDtlTaxExempt(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxExempt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlTaxExemptResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptResponse> OnChangeDtlTaxExemptAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlUpliftPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlUpliftPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlUpliftPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentResponse OnChangeDtlUpliftPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlUpliftPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlUpliftPercentResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentResponse> OnChangeDtlUpliftPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeReceiptDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeReceiptDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeReceiptDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateResponse OnChangeReceiptDate(EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeReceiptDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeReceiptDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateResponse> OnChangeReceiptDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlWareHouseCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlWareHouseCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlWareHouseCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeResponse OnChangeDtlWareHouseCode(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlWareHouseCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDtlWareHouseCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeResponse> OnChangeDtlWareHouseCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeInspReq", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeInspReqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeInspReqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqResponse OnChangeInspReq(EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeInspReq", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeInspReqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqResponse> OnChangeInspReqAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/RcvDtlNegInvCheck", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/RcvDtlNegInvCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/RcvDtlNegInvCheckEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckResponse RcvDtlNegInvCheck(EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/RcvDtlNegInvCheck", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/RcvDtlNegInvCheckResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckResponse> RcvDtlNegInvCheckAsync(EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/SetToLocation", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/SetToLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/SetToLocationEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.SetToLocationResponse SetToLocation(EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/SetToLocation", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/SetToLocationResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SetToLocationResponse> SetToLocationAsync(EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedTaxManual", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedTaxManualResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedTaxManualEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualResponse OnChangedTaxManual(EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangedTaxManual", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangedTaxManualResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualResponse> OnChangedTaxManualAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxFixedAmount", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxFixedAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxFixedAmountEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountResponse OnChangeTaxFixedAmount(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxFixedAmount", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxFixedAmountResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountResponse> OnChangeTaxFixedAmountAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxReportableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxReportableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxReportableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtResponse OnChangeTaxReportableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxReportableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxReportableAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtResponse> OnChangeTaxReportableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxableAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxableAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtResponse OnChangeTaxTaxableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxableAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxableAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtResponse> OnChangeTaxTaxableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtResponse OnChangeTaxTaxAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtResponse> OnChangeTaxTaxAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxDeductable", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxDeductableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxDeductableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableResponse OnChangeTaxDeductable(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxDeductable", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxDeductableResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableResponse> OnChangeTaxDeductableAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeResponse OnChangeTaxTaxCode(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxTaxCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeResponse> OnChangeTaxTaxCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxRateCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxRateCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxRateCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeResponse OnChangeTaxRateCode(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxRateCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxRateCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeResponse> OnChangeTaxRateCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentResponse OnChangeTaxPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeTaxPercentResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentResponse> OnChangeTaxPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDutyTariffCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDutyTariffCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDutyTariffCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeResponse OnChangeDutyTariffCode(EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDutyTariffCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeDutyTariffCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeResponse> OnChangeDutyTariffCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscApplyDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscApplyDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscApplyDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateResponse OnChangeMiscApplyDate(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscApplyDate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscApplyDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateResponse> OnChangeMiscApplyDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCharge", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscChargeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscChargeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeResponse OnChangeMiscCharge(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCharge", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscChargeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeResponse> OnChangeMiscChargeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCurrencyCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCurrencyCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCurrencyCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeResponse OnChangeMiscCurrencyCode(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCurrencyCode", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscCurrencyCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeResponse> OnChangeMiscCurrencyCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscDocActualAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscDocActualAmtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscDocActualAmtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtResponse OnChangeMiscDocActualAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscDocActualAmt", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscDocActualAmtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtResponse> OnChangeMiscDocActualAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscExchangeRate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscExchangeRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscExchangeRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateResponse OnChangeMiscExchangeRate(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscExchangeRate", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscExchangeRateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateResponse> OnChangeMiscExchangeRateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceLine", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceLineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceLineEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineResponse OnChangeMiscInvoiceLine(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceLine", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceLineResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineResponse> OnChangeMiscInvoiceLineAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumResponse OnChangeMiscInvoiceNum(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscInvoiceNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumResponse> OnChangeMiscInvoiceNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscMscNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscMscNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscMscNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumResponse OnChangeMiscMscNum(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscMscNum", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscMscNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumResponse> OnChangeMiscMscNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscPercentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscPercentEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentResponse OnChangeMiscPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscPercent", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscPercentResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentResponse> OnChangeMiscPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscRateGrp", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscRateGrpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptSvc.EpicorFaultDetail), Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscRateGrpEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpResponse OnChangeMiscRateGrp(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscRateGrp", ReplyAction="Erp:BO:Receipt/ReceiptSvcContract/OnChangeMiscRateGrpResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpResponse> OnChangeMiscRateGrpAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscTaxCatID", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscTaxCatIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string taxCatID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscTaxCatIDRequest() {
        }
        
        public OnChangeMiscTaxCatIDRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string taxCatID, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.taxCatID = taxCatID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscTaxCatIDResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscTaxCatIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscTaxCatIDResponse() {
        }
        
        public OnChangeMiscTaxCatIDResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscVendor", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscVendorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string vendID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscVendorRequest() {
        }
        
        public OnChangeMiscVendorRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string vendID, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.vendID = vendID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscVendorResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscVendorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscVendorResponse() {
        }
        
        public OnChangeMiscVendorResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CommitRcvDtl", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CommitRcvDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CommitRcvDtlRequest() {
        }
        
        public CommitRcvDtlRequest(int vendorNum, string purPoint, string packSlip, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CommitRcvDtlResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CommitRcvDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CommitRcvDtlResponse() {
        }
        
        public CommitRcvDtlResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMassReceipts", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CreateMassReceiptsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int intQueId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CreateMassReceiptsRequest() {
        }
        
        public CreateMassReceiptsRequest(int vendorNum, string purPoint, string packSlip, int intQueId, int poNum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.intQueId = intQueId;
            this.poNum = poNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMassReceiptsResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CreateMassReceiptsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CreateMassReceiptsResponse() {
        }
        
        public CreateMassReceiptsResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPartNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public System.Guid sysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string rowType;
        
        public HHOnChangeDtlPartNumRequest() {
        }
        
        public HHOnChangeDtlPartNumRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string partNum, System.Guid sysRowID, string rowType) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.partNum = partNum;
            this.sysRowID = sysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPartNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool multipleMatch;
        
        public HHOnChangeDtlPartNumResponse() {
        }
        
        public HHOnChangeDtlPartNumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string partNum, bool multipleMatch) {
            this.ds = ds;
            this.partNum = partNum;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPOLine", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPOLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int poLine;
        
        public HHOnChangeDtlPOLineRequest() {
        }
        
        public HHOnChangeDtlPOLineRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPOLineResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPOLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public HHOnChangeDtlPOLineResponse() {
        }
        
        public HHOnChangeDtlPOLineResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPORelNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPORelNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int poRelNum;
        
        public HHOnChangeDtlPORelNumRequest() {
        }
        
        public HHOnChangeDtlPORelNumRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poRelNum) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.poRelNum = poRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHOnChangeDtlPORelNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class HHOnChangeDtlPORelNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public HHOnChangeDtlPORelNumResponse() {
        }
        
        public HHOnChangeDtlPORelNumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHead", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        public GetNewRcvHeadRequest() {
        }
        
        public GetNewRcvHeadRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvHeadResponse() {
        }
        
        public GetNewRcvHeadResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadAttch", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        public GetNewRcvHeadAttchRequest() {
        }
        
        public GetNewRcvHeadAttchRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadAttchResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvHeadAttchResponse() {
        }
        
        public GetNewRcvHeadAttchResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadTax", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string rateCode;
        
        public GetNewRcvHeadTaxRequest() {
        }
        
        public GetNewRcvHeadTaxRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, string taxCode, string rateCode) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadTaxResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvHeadTaxResponse() {
        }
        
        public GetNewRcvHeadTaxResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtl", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        public GetNewRcvDtlRequest() {
        }
        
        public GetNewRcvDtlRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDtlResponse() {
        }
        
        public GetNewRcvDtlResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlAttch", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public GetNewRcvDtlAttchRequest() {
        }
        
        public GetNewRcvDtlAttchRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlAttchResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDtlAttchResponse() {
        }
        
        public GetNewRcvDtlAttchResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlAttrValueSet", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlAttrValueSetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public GetNewRcvDtlAttrValueSetRequest() {
        }
        
        public GetNewRcvDtlAttrValueSetRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlAttrValueSetResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlAttrValueSetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDtlAttrValueSetResponse() {
        }
        
        public GetNewRcvDtlAttrValueSetResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlTax", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public string rateCode;
        
        public GetNewRcvDtlTaxRequest() {
        }
        
        public GetNewRcvDtlTaxRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string taxCode, string rateCode) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlTaxResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDtlTaxResponse() {
        }
        
        public GetNewRcvDtlTaxResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDuty", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDutyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public GetNewRcvDutyRequest() {
        }
        
        public GetNewRcvDutyRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDutyResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDutyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDutyResponse() {
        }
        
        public GetNewRcvDutyResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvMisc", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        public GetNewRcvMiscRequest() {
        }
        
        public GetNewRcvMiscRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvMiscResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvMiscResponse() {
        }
        
        public GetNewRcvMiscResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvMiscTax", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvMiscTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public string rateCode;
        
        public GetNewRcvMiscTaxRequest() {
        }
        
        public GetNewRcvMiscTaxRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int miscSeq, string taxCode, string rateCode) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvMiscTaxResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvMiscTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvMiscTaxResponse() {
        }
        
        public GetNewRcvMiscTaxResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicWAS.Epicor.ReceiptSvc.RcvHeadListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string whereClauseRcvHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string whereClauseRcvHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string whereClauseRcvHeadTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string whereClauseRcvDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string whereClauseRcvDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string whereClauseRcvDtlAttrValueSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public string whereClauseRcvDtlTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string whereClauseRcvDuty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=8)]
        public string whereClauseRcvMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=9)]
        public string whereClauseRcvMiscTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=10)]
        public string whereClauseLegalNumGenOpts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=11)]
        public string whereClausePendingRcvDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=12)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=13)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=14)]
        public string whereClauseSupplierXRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=15)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=16)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClauseRcvHead, 
                    string whereClauseRcvHeadAttch, 
                    string whereClauseRcvHeadTax, 
                    string whereClauseRcvDtl, 
                    string whereClauseRcvDtlAttch, 
                    string whereClauseRcvDtlAttrValueSet, 
                    string whereClauseRcvDtlTax, 
                    string whereClauseRcvDuty, 
                    string whereClauseRcvMisc, 
                    string whereClauseRcvMiscTax, 
                    string whereClauseLegalNumGenOpts, 
                    string whereClausePendingRcvDtl, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseSNFormat, 
                    string whereClauseSupplierXRef, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClauseRcvHead = whereClauseRcvHead;
            this.whereClauseRcvHeadAttch = whereClauseRcvHeadAttch;
            this.whereClauseRcvHeadTax = whereClauseRcvHeadTax;
            this.whereClauseRcvDtl = whereClauseRcvDtl;
            this.whereClauseRcvDtlAttch = whereClauseRcvDtlAttch;
            this.whereClauseRcvDtlAttrValueSet = whereClauseRcvDtlAttrValueSet;
            this.whereClauseRcvDtlTax = whereClauseRcvDtlTax;
            this.whereClauseRcvDuty = whereClauseRcvDuty;
            this.whereClauseRcvMisc = whereClauseRcvMisc;
            this.whereClauseRcvMiscTax = whereClauseRcvMiscTax;
            this.whereClauseLegalNumGenOpts = whereClauseLegalNumGenOpts;
            this.whereClausePendingRcvDtl = whereClausePendingRcvDtl;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.whereClauseSupplierXRef = whereClauseSupplierXRef;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTableset UpdateExtResult, EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumber", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AssignLegalNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool checkforManualPrompt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public AssignLegalNumberRequest() {
        }
        
        public AssignLegalNumberRequest(int vendorNum, string purPoint, string packSlip, bool checkforManualPrompt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.checkforManualPrompt = checkforManualPrompt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumberResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AssignLegalNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool RequiresUserInput;
        
        public AssignLegalNumberResponse() {
        }
        
        public AssignLegalNumberResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, bool RequiresUserInput) {
            this.ds = ds;
            this.RequiresUserInput = RequiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateReceiptTaxes", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CalculateReceiptTaxesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool calledFromUI;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CalculateReceiptTaxesRequest() {
        }
        
        public CalculateReceiptTaxesRequest(int vendorNum, string purPoint, string packSlip, bool calledFromUI, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.calledFromUI = calledFromUI;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateReceiptTaxesResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CalculateReceiptTaxesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CalculateReceiptTaxesResponse() {
        }
        
        public CalculateReceiptTaxesResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCompliance", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckComplianceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckComplianceRequest() {
        }
        
        public CheckComplianceRequest(int vendorNum, string purPoint, string packSlip, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckComplianceResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckComplianceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public bool compliant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckComplianceResponse() {
        }
        
        public CheckComplianceResponse(bool compliant, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.compliant = compliant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckContainersBeforeUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckContainersBeforeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckContainersBeforeUpdateRequest() {
        }
        
        public CheckContainersBeforeUpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckContainersBeforeUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckContainersBeforeUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string qMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string qQuestion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string sMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string sQuestion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string lMessageStr;
        
        public CheckContainersBeforeUpdateResponse() {
        }
        
        public CheckContainersBeforeUpdateResponse(string qMessageStr, string qQuestion, string sMessageStr, string sQuestion, string lMessageStr) {
            this.qMessageStr = qMessageStr;
            this.qQuestion = qQuestion;
            this.sMessageStr = sMessageStr;
            this.sQuestion = sQuestion;
            this.lMessageStr = lMessageStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExistingRcvHead", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetExistingRcvHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        public GetExistingRcvHeadRequest() {
        }
        
        public GetExistingRcvHeadRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetExistingRcvHeadResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetExistingRcvHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetExistingRcvHeadResponse() {
        }
        
        public GetExistingRcvHeadResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListReceipts", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetListReceiptsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string whereClauseRcvDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int absolutePage;
        
        public GetListReceiptsRequest() {
        }
        
        public GetListReceiptsRequest(string whereClauseRcvDtl, int pageSize, int absolutePage) {
            this.whereClauseRcvDtl = whereClauseRcvDtl;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListReceiptsResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetListReceiptsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetListReceiptsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool morePages;
        
        public GetListReceiptsResponse() {
        }
        
        public GetListReceiptsResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetListReceiptsResult, bool morePages) {
            this.GetListReceiptsResult = GetListReceiptsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingDtl", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPendingDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inPONum;
        
        public GetPendingDtlRequest() {
        }
        
        public GetPendingDtlRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inPONum) {
            this.ds = ds;
            this.inPONum = inPONum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPendingDtlResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPendingDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetPendingDtlResponse() {
        }
        
        public GetPendingDtlResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPOInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool fromReceiptEntryNewRcpt;
        
        public GetPOInfoRequest() {
        }
        
        public GetPOInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int poNum, bool fromReceiptEntryNewRcpt) {
            this.ds = ds;
            this.poNum = poNum;
            this.fromReceiptEntryNewRcpt = fromReceiptEntryNewRcpt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPOInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string warnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string poStatusWarnMsg;
        
        public GetPOInfoResponse() {
        }
        
        public GetPOInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string warnMsg, string poStatusWarnMsg) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.warnMsg = warnMsg;
            this.poStatusWarnMsg = poStatusWarnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPurPointInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPurPointInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        public GetPurPointInfoRequest() {
        }
        
        public GetPurPointInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string purPoint) {
            this.ds = ds;
            this.purPoint = purPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPurPointInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPurPointInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        public GetPurPointInfoResponse() {
        }
        
        public GetPurPointInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string purPoint) {
            this.ds = ds;
            this.purPoint = purPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReceiptDetailsFromContainer", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetReceiptDetailsFromContainerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inContainerID;
        
        public GetReceiptDetailsFromContainerRequest() {
        }
        
        public GetReceiptDetailsFromContainerRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID) {
            this.ds = ds;
            this.inContainerID = inContainerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReceiptDetailsFromContainerResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetReceiptDetailsFromContainerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetReceiptDetailsFromContainerResponse() {
        }
        
        public GetReceiptDetailsFromContainerResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImportReceipt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ImportReceiptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int intQueId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool checkForManualPrompt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ImportReceiptRequest() {
        }
        
        public ImportReceiptRequest(int intQueId, bool checkForManualPrompt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.intQueId = intQueId;
            this.checkForManualPrompt = checkForManualPrompt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ImportReceiptResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ImportReceiptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool requiresUserInput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string legalNumMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string closedPOWarningMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ImportReceiptResponse() {
        }
        
        public ImportReceiptResponse(int vendorNum, string purPoint, string packSlip, bool requiresUserInput, string legalNumMsg, string closedPOWarningMsg, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.requiresUserInput = requiresUserInput;
            this.legalNumMsg = legalNumMsg;
            this.closedPOWarningMsg = closedPOWarningMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitializeLandedCost", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class InitializeLandedCostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        public InitializeLandedCostRequest() {
        }
        
        public InitializeLandedCostRequest(int vendorNum, string purPoint, string packSlip) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InitializeLandedCostResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class InitializeLandedCostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset InitializeLandedCostResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string lcComment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string lcReference;
        
        public InitializeLandedCostResponse() {
        }
        
        public InitializeLandedCostResponse(EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset InitializeLandedCostResult, string lcComment, string lcReference) {
            this.InitializeLandedCostResult = InitializeLandedCostResult;
            this.lcComment = lcComment;
            this.lcReference = lcReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class PreUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public PreUpdateRequest() {
        }
        
        public PreUpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class PreUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool RequiresUserInput;
        
        public PreUpdateResponse() {
        }
        
        public PreUpdateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, bool RequiresUserInput) {
            this.ds = ds;
            this.RequiresUserInput = RequiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessIM", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ProcessIMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int pintQueId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string curpackSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ProcessIMRequest() {
        }
        
        public ProcessIMRequest(int pintQueId, string curpackSlip, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.pintQueId = pintQueId;
            this.curpackSlip = curpackSlip;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessIMResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ProcessIMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ProcessIMResponse() {
        }
        
        public ProcessIMResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveAll", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveAllRequest() {
        }
        
        public ReceiveAllRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveAllResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveAllResponse() {
        }
        
        public ReceiveAllResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveAllLines", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveAllLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public bool ipReceived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveAllLinesRequest() {
        }
        
        public ReceiveAllLinesRequest(bool ipReceived, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ipReceived = ipReceived;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveAllLinesResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveAllLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveAllLinesResponse() {
        }
        
        public ReceiveAllLinesResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUsingArrivedDate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUsingArrivedDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inContainerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public System.Nullable<System.DateTime> ipArrivedDate;
        
        public ReceiveContainerUsingArrivedDateRequest() {
        }
        
        public ReceiveContainerUsingArrivedDateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, System.Nullable<System.DateTime> ipArrivedDate) {
            this.ds = ds;
            this.inContainerID = inContainerID;
            this.ipArrivedDate = ipArrivedDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUsingArrivedDateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUsingArrivedDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainerUsingArrivedDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveContainerUsingArrivedDateResponse() {
        }
        
        public ReceiveContainerUsingArrivedDateResponse(EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainerUsingArrivedDateResult, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ReceiveContainerUsingArrivedDateResult = ReceiveContainerUsingArrivedDateResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainer", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inContainerID;
        
        public ReceiveContainerRequest() {
        }
        
        public ReceiveContainerRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID) {
            this.ds = ds;
            this.inContainerID = inContainerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public ReceiveContainerResponse() {
        }
        
        public ReceiveContainerResponse(EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainerResult, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ReceiveContainerResult = ReceiveContainerResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUpdateUsingArriveDate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUpdateUsingArriveDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inContainerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public System.Nullable<System.DateTime> ipArrivedDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string inCreateNewPoRels;
        
        public ReceiveContainerUpdateUsingArriveDateRequest() {
        }
        
        public ReceiveContainerUpdateUsingArriveDateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, System.Nullable<System.DateTime> ipArrivedDate, string inCreateNewPoRels) {
            this.ds = ds;
            this.inContainerID = inContainerID;
            this.ipArrivedDate = ipArrivedDate;
            this.inCreateNewPoRels = inCreateNewPoRels;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUpdateUsingArriveDateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUpdateUsingArriveDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool outEshReceived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool outPartialReceipt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool outReceiveAll;
        
        public ReceiveContainerUpdateUsingArriveDateResponse() {
        }
        
        public ReceiveContainerUpdateUsingArriveDateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, bool outEshReceived, bool outPartialReceipt, bool outReceiveAll) {
            this.ds = ds;
            this.outEshReceived = outEshReceived;
            this.outPartialReceipt = outPartialReceipt;
            this.outReceiveAll = outReceiveAll;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int inContainerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string inCreateNewPoRels;
        
        public ReceiveContainerUpdateRequest() {
        }
        
        public ReceiveContainerUpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, string inCreateNewPoRels) {
            this.ds = ds;
            this.inContainerID = inContainerID;
            this.inCreateNewPoRels = inCreateNewPoRels;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveContainerUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class ReceiveContainerUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool outEshReceived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool outPartialReceipt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool outReceiveAll;
        
        public ReceiveContainerUpdateResponse() {
        }
        
        public ReceiveContainerUpdateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, bool outEshReceived, bool outPartialReceipt, bool outReceiveAll) {
            this.ds = ds;
            this.outEshReceived = outEshReceived;
            this.outPartialReceipt = outPartialReceipt;
            this.outReceiveAll = outReceiveAll;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPrimaryBin", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class SetPrimaryBinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public SetPrimaryBinRequest() {
        }
        
        public SetPrimaryBinRequest(int vendorNum, string purPoint, string packSlip, int packLine, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPrimaryBinResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class SetPrimaryBinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public SetPrimaryBinResponse() {
        }
        
        public SetPrimaryBinResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeContainerHdrArrivedDate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeContainerHdrArrivedDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string ipCompany;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int ipContainerID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public System.Nullable<System.DateTime> ipNewArrivedDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public System.Nullable<System.DateTime> ipOldArrivedDate;
        
        public OnChangeContainerHdrArrivedDateRequest() {
        }
        
        public OnChangeContainerHdrArrivedDateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string ipCompany, int ipContainerID, System.Nullable<System.DateTime> ipNewArrivedDate, System.Nullable<System.DateTime> ipOldArrivedDate) {
            this.ds = ds;
            this.ipCompany = ipCompany;
            this.ipContainerID = ipContainerID;
            this.ipNewArrivedDate = ipNewArrivedDate;
            this.ipOldArrivedDate = ipOldArrivedDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeContainerHdrArrivedDateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeContainerHdrArrivedDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool opNeedsRecalc;
        
        public OnChangeContainerHdrArrivedDateResponse() {
        }
        
        public OnChangeContainerHdrArrivedDateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, bool opNeedsRecalc) {
            this.ds = ds;
            this.opNeedsRecalc = opNeedsRecalc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMaster", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public bool RunChkLCAmtBeforeUpdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool RunChkHdrBeforeUpdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int ipVendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string ipPurPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipPackSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int ipPackLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public bool lRunChkDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public bool lRunChkDtlCompliance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=8)]
        public bool lRunCheckCompliance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=9)]
        public bool lRunPreUpdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=10)]
        public bool lRunCreatePartLot;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=11)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=12)]
        public string lotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=13)]
        public bool lOkToUpdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=14)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public UpdateMasterRequest() {
        }
        
        public UpdateMasterRequest(bool RunChkLCAmtBeforeUpdate, bool RunChkHdrBeforeUpdate, int ipVendorNum, string ipPurPoint, string ipPackSlip, int ipPackLine, bool lRunChkDtl, bool lRunChkDtlCompliance, bool lRunCheckCompliance, bool lRunPreUpdate, bool lRunCreatePartLot, string partNum, string lotNum, bool lOkToUpdate, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.RunChkLCAmtBeforeUpdate = RunChkLCAmtBeforeUpdate;
            this.RunChkHdrBeforeUpdate = RunChkHdrBeforeUpdate;
            this.ipVendorNum = ipVendorNum;
            this.ipPurPoint = ipPurPoint;
            this.ipPackSlip = ipPackSlip;
            this.ipPackLine = ipPackLine;
            this.lRunChkDtl = lRunChkDtl;
            this.lRunChkDtlCompliance = lRunChkDtlCompliance;
            this.lRunCheckCompliance = lRunCheckCompliance;
            this.lRunPreUpdate = lRunPreUpdate;
            this.lRunCreatePartLot = lRunCreatePartLot;
            this.partNum = partNum;
            this.lotNum = lotNum;
            this.lOkToUpdate = lOkToUpdate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMasterResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class UpdateMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string cLCAmtMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string opUpliftWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string opReceiptWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string opArriveWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string qMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string sMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public string lcMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string pcMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=8)]
        public string qDtlComplianceMsgStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=9)]
        public bool lCompliant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=10)]
        public bool lRequiresUserInput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=11)]
        public bool lUpdateWasRun;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=12)]
        public string wrnLines;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=13)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public UpdateMasterResponse() {
        }
        
        public UpdateMasterResponse(string cLCAmtMessage, string opUpliftWarnMsg, string opReceiptWarnMsg, string opArriveWarnMsg, string qMessageStr, string sMessageStr, string lcMessageStr, string pcMessageStr, string qDtlComplianceMsgStr, bool lCompliant, bool lRequiresUserInput, bool lUpdateWasRun, string wrnLines, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.cLCAmtMessage = cLCAmtMessage;
            this.opUpliftWarnMsg = opUpliftWarnMsg;
            this.opReceiptWarnMsg = opReceiptWarnMsg;
            this.opArriveWarnMsg = opArriveWarnMsg;
            this.qMessageStr = qMessageStr;
            this.sMessageStr = sMessageStr;
            this.lcMessageStr = lcMessageStr;
            this.pcMessageStr = pcMessageStr;
            this.qDtlComplianceMsgStr = qDtlComplianceMsgStr;
            this.lCompliant = lCompliant;
            this.lRequiresUserInput = lRequiresUserInput;
            this.lUpdateWasRun = lUpdateWasRun;
            this.wrnLines = wrnLines;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidLegalNumber", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class VoidLegalNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string voidReason;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public VoidLegalNumberRequest() {
        }
        
        public VoidLegalNumberRequest(int vendorNum, string purPoint, string packSlip, string voidReason, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.voidReason = voidReason;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidLegalNumberResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class VoidLegalNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public VoidLegalNumberResponse() {
        }
        
        public VoidLegalNumberResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckHdrBeforeUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckHdrBeforeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckHdrBeforeUpdateRequest() {
        }
        
        public CheckHdrBeforeUpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckHdrBeforeUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckHdrBeforeUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string opUpliftWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string opReceiptWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string opArriveWarnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckHdrBeforeUpdateResponse() {
        }
        
        public CheckHdrBeforeUpdateResponse(string opUpliftWarnMsg, string opReceiptWarnMsg, string opArriveWarnMsg, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.opUpliftWarnMsg = opUpliftWarnMsg;
            this.opReceiptWarnMsg = opReceiptWarnMsg;
            this.opArriveWarnMsg = opArriveWarnMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLCAmtBeforeUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckLCAmtBeforeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int ipVendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string ipPurPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string ipPackSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int ipPackLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckLCAmtBeforeUpdateRequest() {
        }
        
        public CheckLCAmtBeforeUpdateRequest(int ipVendorNum, string ipPurPoint, string ipPackSlip, int ipPackLine, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ipVendorNum = ipVendorNum;
            this.ipPurPoint = ipPurPoint;
            this.ipPackSlip = ipPackSlip;
            this.ipPackLine = ipPackLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckLCAmtBeforeUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckLCAmtBeforeUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public CheckLCAmtBeforeUpdateResponse() {
        }
        
        public CheckLCAmtBeforeUpdateResponse(string opMessage, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadWithPONum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadWithPONumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int poNum;
        
        public GetNewRcvHeadWithPONumRequest() {
        }
        
        public GetNewRcvHeadWithPONumRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int poNum) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.poNum = poNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvHeadWithPONumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvHeadWithPONumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvHeadWithPONumResponse() {
        }
        
        public GetNewRcvHeadWithPONumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVendorInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetVendorInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string vendorID;
        
        public GetVendorInfoRequest() {
        }
        
        public GetVendorInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string vendorID) {
            this.ds = ds;
            this.vendorID = vendorID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVendorInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetVendorInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        public GetVendorInfoResponse() {
        }
        
        public GetVendorInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RcvHeadNegInvCheck", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class RcvHeadNegInvCheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string company;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        public RcvHeadNegInvCheckRequest() {
        }
        
        public RcvHeadNegInvCheckRequest(string company, int vendorNum, string purPoint, string packSlip) {
            this.company = company;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RcvHeadNegInvCheckResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class RcvHeadNegInvCheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string negQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string msg;
        
        public RcvHeadNegInvCheckResponse() {
        }
        
        public RcvHeadNegInvCheckResponse(string negQtyAction, string msg) {
            this.negQtyAction = negQtyAction;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHdrReceived", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHdrReceivedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public bool ipReceived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHdrReceivedRequest() {
        }
        
        public OnChangeHdrReceivedRequest(int vendorNum, string purPoint, string packSlip, bool ipReceived, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.ipReceived = ipReceived;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHdrReceivedResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHdrReceivedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHdrReceivedResponse() {
        }
        
        public OnChangeHdrReceivedResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHdrTaxRegionCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHdrTaxRegionCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string newTaxRegionCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHdrTaxRegionCodeRequest() {
        }
        
        public OnChangeHdrTaxRegionCodeRequest(string newTaxRegionCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.newTaxRegionCode = newTaxRegionCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHdrTaxRegionCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHdrTaxRegionCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHdrTaxRegionCodeResponse() {
        }
        
        public OnChangeHdrTaxRegionCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeContainerImportFld", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeContainerImportFldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeContainerImportFldRequest() {
        }
        
        public OnChangeContainerImportFldRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeContainerImportFldResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeContainerImportFldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeContainerImportFldResponse() {
        }
        
        public OnChangeContainerImportFldResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedHeaderTaxManual", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedHeaderTaxManualRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedHeaderTaxManualRequest() {
        }
        
        public OnChangedHeaderTaxManualRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedHeaderTaxManualResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedHeaderTaxManualResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedHeaderTaxManualResponse() {
        }
        
        public OnChangedHeaderTaxManualResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxFixedAmount", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxFixedAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedFixedAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxFixedAmountRequest() {
        }
        
        public OnChangeHeaderTaxFixedAmountRequest(decimal proposedFixedAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedFixedAmt = proposedFixedAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxFixedAmountResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxFixedAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxFixedAmountResponse() {
        }
        
        public OnChangeHeaderTaxFixedAmountResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxPercent", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedTaxPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxPercentRequest() {
        }
        
        public OnChangeHeaderTaxTaxPercentRequest(decimal proposedTaxPercent, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedTaxPercent = proposedTaxPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxPercentResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxPercentResponse() {
        }
        
        public OnChangeHeaderTaxTaxPercentResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxRateCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxRateCodeRequest() {
        }
        
        public OnChangeHeaderTaxRateCodeRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxRateCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxRateCodeResponse() {
        }
        
        public OnChangeHeaderTaxRateCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxRateCodeMaster", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxRateCodeMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string proposedRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxRateCodeMasterRequest() {
        }
        
        public OnChangeHeaderTaxRateCodeMasterRequest(string proposedRateCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedRateCode = proposedRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxRateCodeMasterResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxRateCodeMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxRateCodeMasterResponse() {
        }
        
        public OnChangeHeaderTaxRateCodeMasterResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxReportableAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxReportableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedReportableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxReportableAmtRequest() {
        }
        
        public OnChangeHeaderTaxReportableAmtRequest(decimal proposedReportableAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedReportableAmt = proposedReportableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxReportableAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxReportableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxReportableAmtResponse() {
        }
        
        public OnChangeHeaderTaxReportableAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxableAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxableAmtRequest() {
        }
        
        public OnChangeHeaderTaxTaxableAmtRequest(decimal proposedTaxableAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedTaxableAmt = proposedTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxableAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxableAmtResponse() {
        }
        
        public OnChangeHeaderTaxTaxableAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxAmtRequest() {
        }
        
        public OnChangeHeaderTaxTaxAmtRequest(decimal proposedTaxAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedTaxAmt = proposedTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxAmtResponse() {
        }
        
        public OnChangeHeaderTaxTaxAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string proposedTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxCodeRequest() {
        }
        
        public OnChangeHeaderTaxTaxCodeRequest(string proposedTaxCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedTaxCode = proposedTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxCodeResponse() {
        }
        
        public OnChangeHeaderTaxTaxCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxDeductable", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxDeductableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public decimal proposedTaxDeductable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxDeductableRequest() {
        }
        
        public OnChangeHeaderTaxTaxDeductableRequest(decimal proposedTaxDeductable, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.proposedTaxDeductable = proposedTaxDeductable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeHeaderTaxTaxDeductableResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeHeaderTaxTaxDeductableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeHeaderTaxTaxDeductableResponse() {
        }
        
        public OnChangeHeaderTaxTaxDeductableResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoSetToLocation", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AutoSetToLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public AutoSetToLocationRequest() {
        }
        
        public AutoSetToLocationRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoSetToLocationResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AutoSetToLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public AutoSetToLocationResponse() {
        }
        
        public AutoSetToLocationResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoSetToLocationToDflt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AutoSetToLocationToDfltRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public AutoSetToLocationToDfltRequest() {
        }
        
        public AutoSetToLocationToDfltRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoSetToLocationToDfltResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class AutoSetToLocationToDfltResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public AutoSetToLocationToDfltResponse() {
        }
        
        public AutoSetToLocationToDfltResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlBeforeUpdate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlBeforeUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string packSlip;
        
        public CheckDtlBeforeUpdateRequest() {
        }
        
        public CheckDtlBeforeUpdateRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int packLine, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packLine = packLine;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlBeforeUpdateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlBeforeUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string qMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string sMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string lcMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string pcMessageStr;
        
        public CheckDtlBeforeUpdateResponse() {
        }
        
        public CheckDtlBeforeUpdateResponse(string qMessageStr, string sMessageStr, string lcMessageStr, string pcMessageStr) {
            this.qMessageStr = qMessageStr;
            this.sMessageStr = sMessageStr;
            this.lcMessageStr = lcMessageStr;
            this.pcMessageStr = pcMessageStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlCompliance", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlComplianceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string packSlip;
        
        public CheckDtlComplianceRequest() {
        }
        
        public CheckDtlComplianceRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int packLine, string packSlip) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packLine = packLine;
            this.packSlip = packSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlComplianceResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlComplianceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string qMessageStr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string pcMessageStr;
        
        public CheckDtlComplianceResponse() {
        }
        
        public CheckDtlComplianceResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string qMessageStr, string pcMessageStr) {
            this.ds = ds;
            this.qMessageStr = qMessageStr;
            this.pcMessageStr = pcMessageStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlJobStatus", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlJobStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int poLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int poRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string jobNum;
        
        public CheckDtlJobStatusRequest() {
        }
        
        public CheckDtlJobStatusRequest(int poNum, int poLine, int poRelNum, string jobNum) {
            this.poNum = poNum;
            this.poLine = poLine;
            this.poRelNum = poRelNum;
            this.jobNum = jobNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlJobStatusResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlJobStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string poQuestion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string warnMsg;
        
        public CheckDtlJobStatusResponse() {
        }
        
        public CheckDtlJobStatusResponse(string poQuestion, string questionMsg, string warnMsg) {
            this.poQuestion = poQuestion;
            this.questionMsg = questionMsg;
            this.warnMsg = warnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlLotInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlLotInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string lotNum;
        
        public CheckDtlLotInfoRequest() {
        }
        
        public CheckDtlLotInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string lotNum) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.lotNum = lotNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlLotInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlLotInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string errorMsg;
        
        public CheckDtlLotInfoResponse() {
        }
        
        public CheckDtlLotInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string questionMsg, string errorMsg) {
            this.ds = ds;
            this.questionMsg = questionMsg;
            this.errorMsg = errorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlSeqChange", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlSeqChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int jobSeq;
        
        public CheckDtlSeqChangeRequest() {
        }
        
        public CheckDtlSeqChangeRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int jobSeq) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.jobSeq = jobSeq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlSeqChangeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlSeqChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string vMessage;
        
        public CheckDtlSeqChangeResponse() {
        }
        
        public CheckDtlSeqChangeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlSSN", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlSSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string receivedTo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string partNum;
        
        public CheckDtlSSNRequest() {
        }
        
        public CheckDtlSSNRequest(int vendorNum, string purPoint, string packSlip, int packLine, string receivedTo, string partNum) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.receivedTo = receivedTo;
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckDtlSSNResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckDtlSSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string vMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string vWMessage;
        
        public CheckDtlSSNResponse() {
        }
        
        public CheckDtlSSNResponse(string vMessage, string vWMessage) {
            this.vMessage = vMessage;
            this.vWMessage = vWMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckIssuedComplete", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckIssuedCompleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public bool issuedComplete;
        
        public CheckIssuedCompleteRequest() {
        }
        
        public CheckIssuedCompleteRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, bool issuedComplete) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.issuedComplete = issuedComplete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckIssuedCompleteResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckIssuedCompleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string vMessage;
        
        public CheckIssuedCompleteResponse() {
        }
        
        public CheckIssuedCompleteResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckReceivedComplete", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckReceivedCompleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public bool receivedComplete;
        
        public CheckReceivedCompleteRequest() {
        }
        
        public CheckReceivedCompleteRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, bool receivedComplete) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.receivedComplete = receivedComplete;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckReceivedCompleteResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckReceivedCompleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string vMessage;
        
        public CheckReceivedCompleteResponse() {
        }
        
        public CheckReceivedCompleteResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string vMessage) {
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSupplierPrice", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckSupplierPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public decimal suppPrice;
        
        public CheckSupplierPriceRequest() {
        }
        
        public CheckSupplierPriceRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal suppPrice) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.suppPrice = suppPrice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckSupplierPriceResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class CheckSupplierPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string warningMsg;
        
        public CheckSupplierPriceResponse() {
        }
        
        public CheckSupplierPriceResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string warningMsg) {
            this.ds = ds;
            this.warningMsg = warningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlAssemblyInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlAssemblyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public GetDtlAssemblyInfoRequest() {
        }
        
        public GetDtlAssemblyInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlAssemblyInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlAssemblyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetDtlAssemblyInfoResponse() {
        }
        
        public GetDtlAssemblyInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlJobInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlJobInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string jobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetDtlJobInfoRequest() {
        }
        
        public GetDtlJobInfoRequest(int vendorNum, string purPoint, string packSlip, int packLine, string jobNum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.jobNum = jobNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlJobInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlJobInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetDtlJobInfoResponse() {
        }
        
        public GetDtlJobInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlLotInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlLotInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string lotNum;
        
        public GetDtlLotInfoRequest() {
        }
        
        public GetDtlLotInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string lotNum) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.lotNum = lotNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlLotInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlLotInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string errorMsg;
        
        public GetDtlLotInfoResponse() {
        }
        
        public GetDtlLotInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string questionMsg, string errorMsg) {
            this.ds = ds;
            this.questionMsg = questionMsg;
            this.errorMsg = errorMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPartInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPartInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string rowType;
        
        public GetDtlPartInfoRequest() {
        }
        
        public GetDtlPartInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string partNum, System.Guid SysRowID, string rowType) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.partNum = partNum;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPartInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPartInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public bool multipleMatch;
        
        public GetDtlPartInfoResponse() {
        }
        
        public GetDtlPartInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string partNum, bool multipleMatch) {
            this.ds = ds;
            this.partNum = partNum;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPOInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPOInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int poNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public bool requiresUserInput;
        
        public GetDtlPOInfoRequest() {
        }
        
        public GetDtlPOInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poNum, bool requiresUserInput) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.poNum = poNum;
            this.requiresUserInput = requiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPOInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPOInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string poStatusQstnMsg;
        
        public GetDtlPOInfoResponse() {
        }
        
        public GetDtlPOInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string poStatusQstnMsg) {
            this.ds = ds;
            this.poStatusQstnMsg = poStatusQstnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPOLineInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPOLineInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int poLine;
        
        public GetDtlPOLineInfoRequest() {
        }
        
        public GetDtlPOLineInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.poLine = poLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPOLineInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPOLineInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string serialWarning;
        
        public GetDtlPOLineInfoResponse() {
        }
        
        public GetDtlPOLineInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string serialWarning) {
            this.ds = ds;
            this.serialWarning = serialWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPORelInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPORelInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int poRelNum;
        
        public GetDtlPORelInfoRequest() {
        }
        
        public GetDtlPORelInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poRelNum) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.poRelNum = poRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlPORelInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlPORelInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetDtlPORelInfoResponse() {
        }
        
        public GetDtlPORelInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlQtyInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlQtyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public decimal inputOurQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public string inputIUM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string whichField;
        
        public GetDtlQtyInfoRequest() {
        }
        
        public GetDtlQtyInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal inputOurQty, string inputIUM, string whichField) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.inputOurQty = inputOurQty;
            this.inputIUM = inputIUM;
            this.whichField = whichField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlQtyInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlQtyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string warnMsg;
        
        public GetDtlQtyInfoResponse() {
        }
        
        public GetDtlQtyInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string warnMsg) {
            this.ds = ds;
            this.warnMsg = warnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlRcvdToInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlRcvdToInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string rcvdTo;
        
        public GetDtlRcvdToInfoRequest() {
        }
        
        public GetDtlRcvdToInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string rcvdTo) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.rcvdTo = rcvdTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlRcvdToInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlRcvdToInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string rcvdTo;
        
        public GetDtlRcvdToInfoResponse() {
        }
        
        public GetDtlRcvdToInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string rcvdTo) {
            this.ds = ds;
            this.rcvdTo = rcvdTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlSeqInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlSeqInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public int jobSeq;
        
        public GetDtlSeqInfoRequest() {
        }
        
        public GetDtlSeqInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int jobSeq) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.jobSeq = jobSeq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlSeqInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlSeqInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string serialWarning;
        
        public GetDtlSeqInfoResponse() {
        }
        
        public GetDtlSeqInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string serialWarning) {
            this.ds = ds;
            this.serialWarning = serialWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlVenQtyInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlVenQtyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public decimal vendorQty;
        
        public GetDtlVenQtyInfoRequest() {
        }
        
        public GetDtlVenQtyInfoRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal vendorQty) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.vendorQty = vendorQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDtlVenQtyInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetDtlVenQtyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string warnMsg;
        
        public GetDtlVenQtyInfoResponse() {
        }
        
        public GetDtlVenQtyInfoResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string warnMsg) {
            this.ds = ds;
            this.warnMsg = warnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLotImportInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetLotImportInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string inPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string inLotNum;
        
        public GetLotImportInfoRequest() {
        }
        
        public GetLotImportInfoRequest(string inPartNum, string inLotNum) {
            this.inPartNum = inPartNum;
            this.inLotNum = inLotNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLotImportInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetLotImportInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string outImportNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string outImportedFromDesc;
        
        public GetLotImportInfoResponse() {
        }
        
        public GetLotImportInfoResponse(string outImportNum, string outImportedFromDesc) {
            this.outImportNum = outImportNum;
            this.outImportedFromDesc = outImportedFromDesc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlMisc", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int VendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string PurPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string PackSlip;
        
        public GetNewRcvDtlMiscRequest() {
        }
        
        public GetNewRcvDtlMiscRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int VendorNum, string PurPoint, string PackSlip) {
            this.ds = ds;
            this.VendorNum = VendorNum;
            this.PurPoint = PurPoint;
            this.PackSlip = PackSlip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewRcvDtlMiscResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetNewRcvDtlMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public GetNewRcvDtlMiscResponse() {
        }
        
        public GetNewRcvDtlMiscResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfo", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPartXRefInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string partNum;
        
        public GetPartXRefInfoRequest() {
        }
        
        public GetPartXRefInfoRequest(string partNum) {
            this.partNum = partNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartXRefInfoResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class GetPartXRefInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public bool multipleMatch;
        
        public GetPartXRefInfoResponse() {
        }
        
        public GetPartXRefInfoResponse(string partNum, bool multipleMatch) {
            this.partNum = partNum;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LCChangeLCAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class LCChangeLCAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public int packLine;
        
        public LCChangeLCAmtRequest() {
        }
        
        public LCChangeLCAmtRequest(EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset ds, string packSlip, int packLine) {
            this.ds = ds;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LCChangeLCAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class LCChangeLCAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset ds;
        
        public LCChangeLCAmtResponse() {
        }
        
        public LCChangeLCAmtResponse(EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedDtlPOTransValue", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedDtlPOTransValueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedDtlPOTransValueRequest() {
        }
        
        public OnChangedDtlPOTransValueRequest(int vendorNum, string purPoint, string packSlip, int packLine, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedDtlPOTransValueResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedDtlPOTransValueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedDtlPOTransValueResponse() {
        }
        
        public OnChangedDtlPOTransValueResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlBinNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlBinNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string newBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public bool requiresUserInput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlBinNumRequest() {
        }
        
        public OnChangeDtlBinNumRequest(int vendorNum, string purPoint, string packSlip, int packLine, string newBinNum, bool requiresUserInput, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.newBinNum = newBinNum;
            this.requiresUserInput = requiresUserInput;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlBinNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlBinNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlBinNumResponse() {
        }
        
        public OnChangeDtlBinNumResponse(string questionMsg, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.questionMsg = questionMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlCommodity", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlCommodityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipCommCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlCommodityRequest() {
        }
        
        public OnChangeDtlCommodityRequest(int vendorNum, string purPoint, string packSlip, int packLine, string ipCommCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ipCommCode = ipCommCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlCommodityResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlCommodityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlCommodityResponse() {
        }
        
        public OnChangeDtlCommodityResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlCountryNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlCountryNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int ipCountryNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlCountryNumRequest() {
        }
        
        public OnChangeDtlCountryNumRequest(int vendorNum, string purPoint, string packSlip, int packLine, int ipCountryNum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ipCountryNum = ipCountryNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlCountryNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlCountryNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlCountryNumResponse() {
        }
        
        public OnChangeDtlCountryNumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlLCIndCost", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlLCIndCostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public decimal ipLCIndCost;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public decimal LCIndCostSum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlLCIndCostRequest() {
        }
        
        public OnChangeDtlLCIndCostRequest(int vendorNum, string purPoint, string packSlip, int packLine, decimal ipLCIndCost, decimal LCIndCostSum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ipLCIndCost = ipLCIndCost;
            this.LCIndCostSum = LCIndCostSum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlLCIndCostResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlLCIndCostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlLCIndCostResponse() {
        }
        
        public OnChangeDtlLCIndCostResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlPCID", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlPCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public bool requiresUserInput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public int selectedSerialNumberCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=8)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlPCIDRequest() {
        }
        
        public OnChangeDtlPCIDRequest(int vendorNum, string purPoint, string packSlip, int packLine, string pcid, bool requiresUserInput, int selectedSerialNumberCount, string serialNumber, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.pcid = pcid;
            this.requiresUserInput = requiresUserInput;
            this.selectedSerialNumberCount = selectedSerialNumberCount;
            this.serialNumber = serialNumber;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlPCIDResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlPCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string warnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlPCIDResponse() {
        }
        
        public OnChangeDtlPCIDResponse(string questionMsg, string warnMsg, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.questionMsg = questionMsg;
            this.warnMsg = warnMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlPOSelected", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlPOSelectedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int poNum;
        
        public OnChangeDtlPOSelectedRequest() {
        }
        
        public OnChangeDtlPOSelectedRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int poNum) {
            this.ds = ds;
            this.poNum = poNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlPOSelectedResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlPOSelectedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string poStatusQstnMsg;
        
        public OnChangeDtlPOSelectedResponse() {
        }
        
        public OnChangeDtlPOSelectedResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string poStatusQstnMsg) {
            this.ds = ds;
            this.poStatusQstnMsg = poStatusQstnMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlReceived", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlReceivedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public bool ipReceived;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlReceivedRequest() {
        }
        
        public OnChangeDtlReceivedRequest(int vendorNum, string purPoint, string packSlip, int packLine, bool ipReceived, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ipReceived = ipReceived;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlReceivedResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlReceivedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlReceivedResponse() {
        }
        
        public OnChangeDtlReceivedResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlReceiptType", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlReceiptTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string receiptType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlReceiptTypeRequest() {
        }
        
        public OnChangeDtlReceiptTypeRequest(int vendorNum, string purPoint, string packSlip, int packLine, string receiptType, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.receiptType = receiptType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlReceiptTypeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlReceiptTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlReceiptTypeResponse() {
        }
        
        public OnChangeDtlReceiptTypeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlSupplierPrice", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlSupplierPriceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public OnChangeDtlSupplierPriceRequest() {
        }
        
        public OnChangeDtlSupplierPriceRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlSupplierPriceResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlSupplierPriceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlSupplierPriceResponse() {
        }
        
        public OnChangeDtlSupplierPriceResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlTaxCatID", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlTaxCatIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string taxCatID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlTaxCatIDRequest() {
        }
        
        public OnChangeDtlTaxCatIDRequest(int vendorNum, string purPoint, string packSlip, int packLine, string taxCatID, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.taxCatID = taxCatID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlTaxCatIDResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlTaxCatIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlTaxCatIDResponse() {
        }
        
        public OnChangeDtlTaxCatIDResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlTaxExempt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlTaxExemptRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string taxExempt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlTaxExemptRequest() {
        }
        
        public OnChangeDtlTaxExemptRequest(int vendorNum, string purPoint, string packSlip, int packLine, string taxExempt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.taxExempt = taxExempt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlTaxExemptResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlTaxExemptResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlTaxExemptResponse() {
        }
        
        public OnChangeDtlTaxExemptResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlUpliftPercent", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlUpliftPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public decimal ipUpliftPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlUpliftPercentRequest() {
        }
        
        public OnChangeDtlUpliftPercentRequest(int vendorNum, string purPoint, string packSlip, int packLine, decimal ipUpliftPercent, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ipUpliftPercent = ipUpliftPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlUpliftPercentResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlUpliftPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlUpliftPercentResponse() {
        }
        
        public OnChangeDtlUpliftPercentResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReceiptDate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeReceiptDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public bool received;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public System.Nullable<System.DateTime> rcvDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=7)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeReceiptDateRequest() {
        }
        
        public OnChangeReceiptDateRequest(int vendorNum, string purPoint, string packSlip, int packLine, bool received, string partNum, System.Nullable<System.DateTime> rcvDate, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.received = received;
            this.partNum = partNum;
            this.rcvDate = rcvDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeReceiptDateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeReceiptDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string wrnLines;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeReceiptDateResponse() {
        }
        
        public OnChangeReceiptDateResponse(string wrnLines, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.wrnLines = wrnLines;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlWareHouseCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlWareHouseCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string newWareHouseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public bool requiresUserInput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlWareHouseCodeRequest() {
        }
        
        public OnChangeDtlWareHouseCodeRequest(int vendorNum, string purPoint, string packSlip, int packLine, string newWareHouseCode, bool requiresUserInput, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.newWareHouseCode = newWareHouseCode;
            this.requiresUserInput = requiresUserInput;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDtlWareHouseCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDtlWareHouseCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string questionMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string warnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDtlWareHouseCodeResponse() {
        }
        
        public OnChangeDtlWareHouseCodeResponse(string questionMsg, string warnMsg, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.questionMsg = questionMsg;
            this.warnMsg = warnMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeInspReq", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeInspReqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public OnChangeInspReqRequest() {
        }
        
        public OnChangeInspReqRequest(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.ds = ds;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeInspReqResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeInspReqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeInspReqResponse() {
        }
        
        public OnChangeInspReqResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RcvDtlNegInvCheck", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class RcvDtlNegInvCheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string company;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int packLine;
        
        public RcvDtlNegInvCheckRequest() {
        }
        
        public RcvDtlNegInvCheckRequest(string company, int vendorNum, string purPoint, string packSlip, int packLine) {
            this.company = company;
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RcvDtlNegInvCheckResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class RcvDtlNegInvCheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string negQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string msg;
        
        public RcvDtlNegInvCheckResponse() {
        }
        
        public RcvDtlNegInvCheckResponse(string negQtyAction, string msg) {
            this.negQtyAction = negQtyAction;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetToLocation", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class SetToLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public SetToLocationRequest() {
        }
        
        public SetToLocationRequest(int vendorNum, string purPoint, string packSlip, int packLine, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetToLocationResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class SetToLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public SetToLocationResponse() {
        }
        
        public SetToLocationResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedTaxManual", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedTaxManualRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedTaxManualRequest() {
        }
        
        public OnChangedTaxManualRequest(string tableName, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangedTaxManualResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangedTaxManualResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangedTaxManualResponse() {
        }
        
        public OnChangedTaxManualResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxFixedAmount", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxFixedAmountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedFixedAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxFixedAmountRequest() {
        }
        
        public OnChangeTaxFixedAmountRequest(string tableName, decimal proposedFixedAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedFixedAmt = proposedFixedAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxFixedAmountResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxFixedAmountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxFixedAmountResponse() {
        }
        
        public OnChangeTaxFixedAmountResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxReportableAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxReportableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedReportableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxReportableAmtRequest() {
        }
        
        public OnChangeTaxReportableAmtRequest(string tableName, decimal proposedReportableAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedReportableAmt = proposedReportableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxReportableAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxReportableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxReportableAmtResponse() {
        }
        
        public OnChangeTaxReportableAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxableAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxableAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedTaxableAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxableAmtRequest() {
        }
        
        public OnChangeTaxTaxableAmtRequest(string tableName, decimal proposedTaxableAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedTaxableAmt = proposedTaxableAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxableAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxableAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxableAmtResponse() {
        }
        
        public OnChangeTaxTaxableAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedTaxAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxAmtRequest() {
        }
        
        public OnChangeTaxTaxAmtRequest(string tableName, decimal proposedTaxAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedTaxAmt = proposedTaxAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxAmtResponse() {
        }
        
        public OnChangeTaxTaxAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxDeductable", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxDeductableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedTaxDeductable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxDeductableRequest() {
        }
        
        public OnChangeTaxDeductableRequest(string tableName, decimal proposedTaxDeductable, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedTaxDeductable = proposedTaxDeductable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxDeductableResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxDeductableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxDeductableResponse() {
        }
        
        public OnChangeTaxDeductableResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string proposedTaxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxCodeRequest() {
        }
        
        public OnChangeTaxTaxCodeRequest(string tableName, string proposedTaxCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedTaxCode = proposedTaxCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxTaxCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxTaxCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxTaxCodeResponse() {
        }
        
        public OnChangeTaxTaxCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxRateCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxRateCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string proposedRateCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxRateCodeRequest() {
        }
        
        public OnChangeTaxRateCodeRequest(string tableName, string proposedRateCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedRateCode = proposedRateCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxRateCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxRateCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxRateCodeResponse() {
        }
        
        public OnChangeTaxRateCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxPercent", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public string tableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public decimal proposedTaxPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxPercentRequest() {
        }
        
        public OnChangeTaxPercentRequest(string tableName, decimal proposedTaxPercent, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.tableName = tableName;
            this.proposedTaxPercent = proposedTaxPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTaxPercentResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeTaxPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeTaxPercentResponse() {
        }
        
        public OnChangeTaxPercentResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDutyTariffCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDutyTariffCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int dutySeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public string ipTariffCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=6)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDutyTariffCodeRequest() {
        }
        
        public OnChangeDutyTariffCodeRequest(int vendorNum, string purPoint, string packSlip, int packLine, int dutySeq, string ipTariffCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.packLine = packLine;
            this.dutySeq = dutySeq;
            this.ipTariffCode = ipTariffCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeDutyTariffCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeDutyTariffCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeDutyTariffCodeResponse() {
        }
        
        public OnChangeDutyTariffCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscApplyDate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscApplyDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public System.Nullable<System.DateTime> ipApplyDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscApplyDateRequest() {
        }
        
        public OnChangeMiscApplyDateRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, System.Nullable<System.DateTime> ipApplyDate, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipApplyDate = ipApplyDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscApplyDateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscApplyDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscApplyDateResponse() {
        }
        
        public OnChangeMiscApplyDateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscCharge", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscChargeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipChargeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscChargeRequest() {
        }
        
        public OnChangeMiscChargeRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipChargeID, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipChargeID = ipChargeID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscChargeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscChargeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscChargeResponse() {
        }
        
        public OnChangeMiscChargeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscCurrencyCode", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscCurrencyCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipCurrCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscCurrencyCodeRequest() {
        }
        
        public OnChangeMiscCurrencyCodeRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipCurrCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipCurrCode = ipCurrCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscCurrencyCodeResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscCurrencyCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscCurrencyCodeResponse() {
        }
        
        public OnChangeMiscCurrencyCodeResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscDocActualAmt", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscDocActualAmtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public decimal ipDocActualAmt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscDocActualAmtRequest() {
        }
        
        public OnChangeMiscDocActualAmtRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipDocActualAmt, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipDocActualAmt = ipDocActualAmt;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscDocActualAmtResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscDocActualAmtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscDocActualAmtResponse() {
        }
        
        public OnChangeMiscDocActualAmtResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscExchangeRate", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscExchangeRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public decimal ipExchangeRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscExchangeRateRequest() {
        }
        
        public OnChangeMiscExchangeRateRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipExchangeRate, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipExchangeRate = ipExchangeRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscExchangeRateResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscExchangeRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscExchangeRateResponse() {
        }
        
        public OnChangeMiscExchangeRateResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscInvoiceLine", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscInvoiceLineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int ipInvLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscInvoiceLineRequest() {
        }
        
        public OnChangeMiscInvoiceLineRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, int ipInvLine, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipInvLine = ipInvLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscInvoiceLineResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscInvoiceLineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscInvoiceLineResponse() {
        }
        
        public OnChangeMiscInvoiceLineResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscInvoiceNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscInvoiceNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipInvNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscInvoiceNumRequest() {
        }
        
        public OnChangeMiscInvoiceNumRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipInvNum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipInvNum = ipInvNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscInvoiceNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscInvoiceNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscInvoiceNumResponse() {
        }
        
        public OnChangeMiscInvoiceNumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscMscNum", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscMscNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public int ipMscNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscMscNumRequest() {
        }
        
        public OnChangeMiscMscNumRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, int ipMscNum, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipMscNum = ipMscNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscMscNumResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscMscNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscMscNumResponse() {
        }
        
        public OnChangeMiscMscNumResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscPercent", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscPercentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public decimal ipPercent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscPercentRequest() {
        }
        
        public OnChangeMiscPercentRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipPercent, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipPercent = ipPercent;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscPercentResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscPercentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscPercentResponse() {
        }
        
        public OnChangeMiscPercentResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscRateGrp", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscRateGrpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public int vendorNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=1)]
        public string purPoint;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=2)]
        public string packSlip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=3)]
        public int miscSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=4)]
        public string ipRateGrpCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=5)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscRateGrpRequest() {
        }
        
        public OnChangeMiscRateGrpRequest(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipRateGrpCode, EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.vendorNum = vendorNum;
            this.purPoint = purPoint;
            this.packSlip = packSlip;
            this.miscSeq = miscSeq;
            this.ipRateGrpCode = ipRateGrpCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeMiscRateGrpResponse", WrapperNamespace="Erp:BO:Receipt", IsWrapped=true)]
    public partial class OnChangeMiscRateGrpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:Receipt", Order=0)]
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds;
        
        public OnChangeMiscRateGrpResponse() {
        }
        
        public OnChangeMiscRateGrpResponse(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReceiptSvcContractChannel : EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiptSvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract>, EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract {
        
        public ReceiptSvcContractClient() {
        }
        
        public ReceiptSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiptSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscTaxCatID(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest request) {
            return base.Channel.OnChangeMiscTaxCatID(request);
        }
        
        public void OnChangeMiscTaxCatID(int vendorNum, string purPoint, string packSlip, int miscSeq, string taxCatID, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.taxCatID = taxCatID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscTaxCatID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDResponse> OnChangeMiscTaxCatIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscTaxCatIDRequest request) {
            return base.Channel.OnChangeMiscTaxCatIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscVendor(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest request) {
            return base.Channel.OnChangeMiscVendor(request);
        }
        
        public void OnChangeMiscVendor(int vendorNum, string purPoint, string packSlip, int miscSeq, string vendID, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.vendID = vendID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscVendor(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorResponse> OnChangeMiscVendorAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscVendorRequest request) {
            return base.Channel.OnChangeMiscVendorAsync(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, decimal ipQuantity, string ipUOM, int ipVendNum, string ipVendPP, string ipPackSlip, int ipPackSlipLine, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipReceivedTo) {
            return base.Channel.GetSelectSerialNumbersParams(ipPartNum, ipQuantity, ipUOM, ipVendNum, ipVendPP, ipPackSlip, ipPackSlipLine, ipJobNum, ipAsmSeq, ipSubOprSeq, ipReceivedTo);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, decimal ipQuantity, string ipUOM, int ipVendNum, string ipVendPP, string ipPackSlip, int ipPackSlipLine, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipReceivedTo) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(ipPartNum, ipQuantity, ipUOM, ipVendNum, ipVendPP, ipPackSlip, ipPackSlipLine, ipJobNum, ipAsmSeq, ipSubOprSeq, ipReceivedTo);
        }
        
        public string GetSNStatus(bool isReceived, string receivedToVal) {
            return base.Channel.GetSNStatus(isReceived, receivedToVal);
        }
        
        public System.Threading.Tasks.Task<string> GetSNStatusAsync(bool isReceived, string receivedToVal) {
            return base.Channel.GetSNStatusAsync(isReceived, receivedToVal);
        }
        
        public string ValidateSN(string ipPartNum, string ipSerialNo, int ipVendorNum, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipPackSlip, int ipPackLine, string ipReceivedTo, string ipJobSeqType) {
            return base.Channel.ValidateSN(ipPartNum, ipSerialNo, ipVendorNum, ipJobNum, ipAsmSeq, ipSubOprSeq, ipPackSlip, ipPackLine, ipReceivedTo, ipJobSeqType);
        }
        
        public System.Threading.Tasks.Task<string> ValidateSNAsync(string ipPartNum, string ipSerialNo, int ipVendorNum, string ipJobNum, int ipAsmSeq, int ipSubOprSeq, string ipPackSlip, int ipPackLine, string ipReceivedTo, string ipJobSeqType) {
            return base.Channel.ValidateSNAsync(ipPartNum, ipSerialNo, ipVendorNum, ipJobNum, ipAsmSeq, ipSubOprSeq, ipPackSlip, ipPackLine, ipReceivedTo, ipJobSeqType);
        }
        
        public string CheckMassReceiptChangeWhseBin(string contractID, string whse, string bin) {
            return base.Channel.CheckMassReceiptChangeWhseBin(contractID, whse, bin);
        }
        
        public System.Threading.Tasks.Task<string> CheckMassReceiptChangeWhseBinAsync(string contractID, string whse, string bin) {
            return base.Channel.CheckMassReceiptChangeWhseBinAsync(contractID, whse, bin);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CommitRcvDtl(EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest request) {
            return base.Channel.CommitRcvDtl(request);
        }
        
        public void CommitRcvDtl(int vendorNum, string purPoint, string packSlip, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CommitRcvDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlResponse> CommitRcvDtlAsync(EpicWAS.Epicor.ReceiptSvc.CommitRcvDtlRequest request) {
            return base.Channel.CommitRcvDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CreateMassReceipts(EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest request) {
            return base.Channel.CreateMassReceipts(request);
        }
        
        public void CreateMassReceipts(int vendorNum, string purPoint, string packSlip, int intQueId, int poNum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.intQueId = intQueId;
            inValue.poNum = poNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CreateMassReceipts(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsResponse> CreateMassReceiptsAsync(EpicWAS.Epicor.ReceiptSvc.CreateMassReceiptsRequest request) {
            return base.Channel.CreateMassReceiptsAsync(request);
        }
        
        public bool HHCanEditPackSlip(int piPONum, string pcPackSlip) {
            return base.Channel.HHCanEditPackSlip(piPONum, pcPackSlip);
        }
        
        public System.Threading.Tasks.Task<bool> HHCanEditPackSlipAsync(int piPONum, string pcPackSlip) {
            return base.Channel.HHCanEditPackSlipAsync(piPONum, pcPackSlip);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.HHOnChangeDtlPartNum(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest request) {
            return base.Channel.HHOnChangeDtlPartNum(request);
        }
        
        public bool HHOnChangeDtlPartNum(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, ref string partNum, System.Guid sysRowID, string rowType) {
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.partNum = partNum;
            inValue.sysRowID = sysRowID;
            inValue.rowType = rowType;
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).HHOnChangeDtlPartNum(inValue);
            ds = retVal.ds;
            partNum = retVal.partNum;
            return retVal.multipleMatch;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumResponse> HHOnChangeDtlPartNumAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPartNumRequest request) {
            return base.Channel.HHOnChangeDtlPartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.HHOnChangeDtlPOLine(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest request) {
            return base.Channel.HHOnChangeDtlPOLine(request);
        }
        
        public void HHOnChangeDtlPOLine(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poLine) {
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest inValue = new EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.poLine = poLine;
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).HHOnChangeDtlPOLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineResponse> HHOnChangeDtlPOLineAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPOLineRequest request) {
            return base.Channel.HHOnChangeDtlPOLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.HHOnChangeDtlPORelNum(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest request) {
            return base.Channel.HHOnChangeDtlPORelNum(request);
        }
        
        public void HHOnChangeDtlPORelNum(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poRelNum) {
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.poRelNum = poRelNum;
            EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).HHOnChangeDtlPORelNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumResponse> HHOnChangeDtlPORelNumAsync(EpicWAS.Epicor.ReceiptSvc.HHOnChangeDtlPORelNumRequest request) {
            return base.Channel.HHOnChangeDtlPORelNumAsync(request);
        }
        
        public string HHValRecDocReq(string partNum, string lotNum) {
            return base.Channel.HHValRecDocReq(partNum, lotNum);
        }
        
        public System.Threading.Tasks.Task<string> HHValRecDocReqAsync(string partNum, string lotNum) {
            return base.Channel.HHValRecDocReqAsync(partNum, lotNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvHead(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest request) {
            return base.Channel.GetNewRcvHead(request);
        }
        
        public void GetNewRcvHead(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadResponse> GetNewRcvHeadAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadRequest request) {
            return base.Channel.GetNewRcvHeadAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvHeadAttch(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest request) {
            return base.Channel.GetNewRcvHeadAttch(request);
        }
        
        public void GetNewRcvHeadAttch(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvHeadAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchResponse> GetNewRcvHeadAttchAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadAttchRequest request) {
            return base.Channel.GetNewRcvHeadAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvHeadTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest request) {
            return base.Channel.GetNewRcvHeadTax(request);
        }
        
        public void GetNewRcvHeadTax(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, string taxCode, string rateCode) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvHeadTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxResponse> GetNewRcvHeadTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadTaxRequest request) {
            return base.Channel.GetNewRcvHeadTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDtl(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest request) {
            return base.Channel.GetNewRcvDtl(request);
        }
        
        public void GetNewRcvDtl(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlResponse> GetNewRcvDtlAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlRequest request) {
            return base.Channel.GetNewRcvDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDtlAttch(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest request) {
            return base.Channel.GetNewRcvDtlAttch(request);
        }
        
        public void GetNewRcvDtlAttch(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDtlAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchResponse> GetNewRcvDtlAttchAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttchRequest request) {
            return base.Channel.GetNewRcvDtlAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDtlAttrValueSet(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest request) {
            return base.Channel.GetNewRcvDtlAttrValueSet(request);
        }
        
        public void GetNewRcvDtlAttrValueSet(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDtlAttrValueSet(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetResponse> GetNewRcvDtlAttrValueSetAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlAttrValueSetRequest request) {
            return base.Channel.GetNewRcvDtlAttrValueSetAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDtlTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest request) {
            return base.Channel.GetNewRcvDtlTax(request);
        }
        
        public void GetNewRcvDtlTax(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string taxCode, string rateCode) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDtlTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxResponse> GetNewRcvDtlTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlTaxRequest request) {
            return base.Channel.GetNewRcvDtlTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDuty(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest request) {
            return base.Channel.GetNewRcvDuty(request);
        }
        
        public void GetNewRcvDuty(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDuty(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyResponse> GetNewRcvDutyAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDutyRequest request) {
            return base.Channel.GetNewRcvDutyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvMisc(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest request) {
            return base.Channel.GetNewRcvMisc(request);
        }
        
        public void GetNewRcvMisc(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscResponse> GetNewRcvMiscAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscRequest request) {
            return base.Channel.GetNewRcvMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvMiscTax(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest request) {
            return base.Channel.GetNewRcvMiscTax(request);
        }
        
        public void GetNewRcvMiscTax(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int miscSeq, string taxCode, string rateCode) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvMiscTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxResponse> GetNewRcvMiscTaxAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvMiscTaxRequest request) {
            return base.Channel.GetNewRcvMiscTaxAsync(request);
        }
        
        public void DeleteByID(int vendorNum, string purPoint, string packSlip) {
            base.Channel.DeleteByID(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.DeleteByIDAsync(vendorNum, purPoint, packSlip);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetByID(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.GetByID(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetByIDAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.GetByIDAsync(vendorNum, purPoint, packSlip);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetListResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetList(EpicWAS.Epicor.ReceiptSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.RcvHeadListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.ReceiptSvc.GetListRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.ReceiptSvc.GetListResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.ReceiptSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetRowsResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetRows(EpicWAS.Epicor.ReceiptSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetRows(
                    string whereClauseRcvHead, 
                    string whereClauseRcvHeadAttch, 
                    string whereClauseRcvHeadTax, 
                    string whereClauseRcvDtl, 
                    string whereClauseRcvDtlAttch, 
                    string whereClauseRcvDtlAttrValueSet, 
                    string whereClauseRcvDtlTax, 
                    string whereClauseRcvDuty, 
                    string whereClauseRcvMisc, 
                    string whereClauseRcvMiscTax, 
                    string whereClauseLegalNumGenOpts, 
                    string whereClausePendingRcvDtl, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseSNFormat, 
                    string whereClauseSupplierXRef, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicWAS.Epicor.ReceiptSvc.GetRowsRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetRowsRequest();
            inValue.whereClauseRcvHead = whereClauseRcvHead;
            inValue.whereClauseRcvHeadAttch = whereClauseRcvHeadAttch;
            inValue.whereClauseRcvHeadTax = whereClauseRcvHeadTax;
            inValue.whereClauseRcvDtl = whereClauseRcvDtl;
            inValue.whereClauseRcvDtlAttch = whereClauseRcvDtlAttch;
            inValue.whereClauseRcvDtlAttrValueSet = whereClauseRcvDtlAttrValueSet;
            inValue.whereClauseRcvDtlTax = whereClauseRcvDtlTax;
            inValue.whereClauseRcvDuty = whereClauseRcvDuty;
            inValue.whereClauseRcvMisc = whereClauseRcvMisc;
            inValue.whereClauseRcvMiscTax = whereClauseRcvMiscTax;
            inValue.whereClauseLegalNumGenOpts = whereClauseLegalNumGenOpts;
            inValue.whereClausePendingRcvDtl = whereClausePendingRcvDtl;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.whereClauseSupplierXRef = whereClauseSupplierXRef;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.ReceiptSvc.GetRowsResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.ReceiptSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.UpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.Update(EpicWAS.Epicor.ReceiptSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.UpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.UpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.UpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.ReceiptSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.UpdateExtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.UpdateExt(EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.BOUpdErrorTableset UpdateExt(ref EpicWAS.Epicor.ReceiptSvc.UpdExtReceiptTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicWAS.Epicor.ReceiptSvc.UpdateExtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.ReceiptSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        public int GetMtlQueueSeqValue(string company, string pcid, int vendorNum, string purPoint, string packSlip, int packLine, string tranType) {
            return base.Channel.GetMtlQueueSeqValue(company, pcid, vendorNum, purPoint, packSlip, packLine, tranType);
        }
        
        public System.Threading.Tasks.Task<int> GetMtlQueueSeqValueAsync(string company, string pcid, int vendorNum, string purPoint, string packSlip, int packLine, string tranType) {
            return base.Channel.GetMtlQueueSeqValueAsync(company, pcid, vendorNum, purPoint, packSlip, packLine, tranType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.AssignLegalNumber(EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumber(request);
        }
        
        public bool AssignLegalNumber(int vendorNum, string purPoint, string packSlip, bool checkforManualPrompt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest inValue = new EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.checkforManualPrompt = checkforManualPrompt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).AssignLegalNumber(inValue);
            ds = retVal.ds;
            return retVal.RequiresUserInput;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicWAS.Epicor.ReceiptSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CalculateReceiptTaxes(EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest request) {
            return base.Channel.CalculateReceiptTaxes(request);
        }
        
        public void CalculateReceiptTaxes(int vendorNum, string purPoint, string packSlip, bool calledFromUI, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.calledFromUI = calledFromUI;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CalculateReceiptTaxes(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesResponse> CalculateReceiptTaxesAsync(EpicWAS.Epicor.ReceiptSvc.CalculateReceiptTaxesRequest request) {
            return base.Channel.CalculateReceiptTaxesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckComplianceResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckCompliance(EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest request) {
            return base.Channel.CheckCompliance(request);
        }
        
        public bool CheckCompliance(int vendorNum, string purPoint, string packSlip, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CheckComplianceResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckCompliance(inValue);
            ds = retVal.ds;
            return retVal.compliant;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckComplianceResponse> CheckComplianceAsync(EpicWAS.Epicor.ReceiptSvc.CheckComplianceRequest request) {
            return base.Channel.CheckComplianceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckContainersBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest request) {
            return base.Channel.CheckContainersBeforeUpdate(request);
        }
        
        public string CheckContainersBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, out string qQuestion, out string sMessageStr, out string sQuestion, out string lMessageStr) {
            EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckContainersBeforeUpdate(inValue);
            qQuestion = retVal.qQuestion;
            sMessageStr = retVal.sMessageStr;
            sQuestion = retVal.sQuestion;
            lMessageStr = retVal.lMessageStr;
            return retVal.qMessageStr;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateResponse> CheckContainersBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckContainersBeforeUpdateRequest request) {
            return base.Channel.CheckContainersBeforeUpdateAsync(request);
        }
        
        public void CheckForDefaultRcvInfo() {
            base.Channel.CheckForDefaultRcvInfo();
        }
        
        public System.Threading.Tasks.Task CheckForDefaultRcvInfoAsync() {
            return base.Channel.CheckForDefaultRcvInfoAsync();
        }
        
        public void CheckShipmentReceived(string packSlip, int poNum, int vendorNum) {
            base.Channel.CheckShipmentReceived(packSlip, poNum, vendorNum);
        }
        
        public System.Threading.Tasks.Task CheckShipmentReceivedAsync(string packSlip, int poNum, int vendorNum) {
            return base.Channel.CheckShipmentReceivedAsync(packSlip, poNum, vendorNum);
        }
        
        public void CreateMaterialQueueForPCID(string pcid) {
            base.Channel.CreateMaterialQueueForPCID(pcid);
        }
        
        public System.Threading.Tasks.Task CreateMaterialQueueForPCIDAsync(string pcid) {
            return base.Channel.CreateMaterialQueueForPCIDAsync(pcid);
        }
        
        public void DisburseLandedCost(int vendorNum, string purPoint, string packSlip) {
            base.Channel.DisburseLandedCost(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task DisburseLandedCostAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.DisburseLandedCostAsync(vendorNum, purPoint, packSlip);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetExistingRcvHead(EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest request) {
            return base.Channel.GetExistingRcvHead(request);
        }
        
        public void GetExistingRcvHead(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip) {
            EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetExistingRcvHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadResponse> GetExistingRcvHeadAsync(EpicWAS.Epicor.ReceiptSvc.GetExistingRcvHeadRequest request) {
            return base.Channel.GetExistingRcvHeadAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetListReceiptsResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetListReceipts(EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest request) {
            return base.Channel.GetListReceipts(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetListReceipts(string whereClauseRcvDtl, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest();
            inValue.whereClauseRcvDtl = whereClauseRcvDtl;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.ReceiptSvc.GetListReceiptsResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetListReceipts(inValue);
            morePages = retVal.morePages;
            return retVal.GetListReceiptsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetListReceiptsResponse> GetListReceiptsAsync(EpicWAS.Epicor.ReceiptSvc.GetListReceiptsRequest request) {
            return base.Channel.GetListReceiptsAsync(request);
        }
        
        public string GetContainerReceiptPartTranPKs(int containerID) {
            return base.Channel.GetContainerReceiptPartTranPKs(containerID);
        }
        
        public System.Threading.Tasks.Task<string> GetContainerReceiptPartTranPKsAsync(int containerID) {
            return base.Channel.GetContainerReceiptPartTranPKsAsync(containerID);
        }
        
        public string GetPartTranPKs(string packSlip, int poNum, int vendorNum) {
            return base.Channel.GetPartTranPKs(packSlip, poNum, vendorNum);
        }
        
        public System.Threading.Tasks.Task<string> GetPartTranPKsAsync(string packSlip, int poNum, int vendorNum) {
            return base.Channel.GetPartTranPKsAsync(packSlip, poNum, vendorNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetPendingDtlResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetPendingDtl(EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest request) {
            return base.Channel.GetPendingDtl(request);
        }
        
        public void GetPendingDtl(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inPONum) {
            EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest();
            inValue.ds = ds;
            inValue.inPONum = inPONum;
            EpicWAS.Epicor.ReceiptSvc.GetPendingDtlResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetPendingDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPendingDtlResponse> GetPendingDtlAsync(EpicWAS.Epicor.ReceiptSvc.GetPendingDtlRequest request) {
            return base.Channel.GetPendingDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetPOInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetPOInfo(EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest request) {
            return base.Channel.GetPOInfo(request);
        }
        
        public int GetPOInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int poNum, bool fromReceiptEntryNewRcpt, out string purPoint, out string warnMsg, out string poStatusWarnMsg) {
            EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            inValue.fromReceiptEntryNewRcpt = fromReceiptEntryNewRcpt;
            EpicWAS.Epicor.ReceiptSvc.GetPOInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetPOInfo(inValue);
            ds = retVal.ds;
            purPoint = retVal.purPoint;
            warnMsg = retVal.warnMsg;
            poStatusWarnMsg = retVal.poStatusWarnMsg;
            return retVal.vendorNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPOInfoResponse> GetPOInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPOInfoRequest request) {
            return base.Channel.GetPOInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetPurPointInfo(EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest request) {
            return base.Channel.GetPurPointInfo(request);
        }
        
        public void GetPurPointInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, ref string purPoint) {
            EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest();
            inValue.ds = ds;
            inValue.purPoint = purPoint;
            EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetPurPointInfo(inValue);
            ds = retVal.ds;
            purPoint = retVal.purPoint;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoResponse> GetPurPointInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPurPointInfoRequest request) {
            return base.Channel.GetPurPointInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetReceiptDetailsFromContainer(EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest request) {
            return base.Channel.GetReceiptDetailsFromContainer(request);
        }
        
        public void GetReceiptDetailsFromContainer(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID) {
            EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest();
            inValue.ds = ds;
            inValue.inContainerID = inContainerID;
            EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetReceiptDetailsFromContainer(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerResponse> GetReceiptDetailsFromContainerAsync(EpicWAS.Epicor.ReceiptSvc.GetReceiptDetailsFromContainerRequest request) {
            return base.Channel.GetReceiptDetailsFromContainerAsync(request);
        }
        
        public string GetWarningPOClosed(int poNum) {
            return base.Channel.GetWarningPOClosed(poNum);
        }
        
        public System.Threading.Tasks.Task<string> GetWarningPOClosedAsync(int poNum) {
            return base.Channel.GetWarningPOClosedAsync(poNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ImportReceiptResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ImportReceipt(EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest request) {
            return base.Channel.ImportReceipt(request);
        }
        
        public int ImportReceipt(int intQueId, bool checkForManualPrompt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, out string purPoint, out string packSlip, out bool requiresUserInput, out string legalNumMsg, out string closedPOWarningMsg) {
            EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest();
            inValue.intQueId = intQueId;
            inValue.checkForManualPrompt = checkForManualPrompt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.ImportReceiptResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ImportReceipt(inValue);
            purPoint = retVal.purPoint;
            packSlip = retVal.packSlip;
            requiresUserInput = retVal.requiresUserInput;
            legalNumMsg = retVal.legalNumMsg;
            closedPOWarningMsg = retVal.closedPOWarningMsg;
            ds = retVal.ds;
            return retVal.vendorNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ImportReceiptResponse> ImportReceiptAsync(EpicWAS.Epicor.ReceiptSvc.ImportReceiptRequest request) {
            return base.Channel.ImportReceiptAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.InitializeLandedCost(EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest request) {
            return base.Channel.InitializeLandedCost(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset InitializeLandedCost(int vendorNum, string purPoint, string packSlip, out string lcComment, out string lcReference) {
            EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest inValue = new EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).InitializeLandedCost(inValue);
            lcComment = retVal.lcComment;
            lcReference = retVal.lcReference;
            return retVal.InitializeLandedCostResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostResponse> InitializeLandedCostAsync(EpicWAS.Epicor.ReceiptSvc.InitializeLandedCostRequest request) {
            return base.Channel.InitializeLandedCostAsync(request);
        }
        
        public bool IsContainerReceived(int inContainerID) {
            return base.Channel.IsContainerReceived(inContainerID);
        }
        
        public System.Threading.Tasks.Task<bool> IsContainerReceivedAsync(int inContainerID) {
            return base.Channel.IsContainerReceivedAsync(inContainerID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.PreUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.PreUpdate(EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest request) {
            return base.Channel.PreUpdate(request);
        }
        
        public bool PreUpdate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.PreUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).PreUpdate(inValue);
            ds = retVal.ds;
            return retVal.RequiresUserInput;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.PreUpdateResponse> PreUpdateAsync(EpicWAS.Epicor.ReceiptSvc.PreUpdateRequest request) {
            return base.Channel.PreUpdateAsync(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ProcessLandedCosts(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.ProcessLandedCosts(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> ProcessLandedCostsAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.ProcessLandedCostsAsync(vendorNum, purPoint, packSlip);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ProcessIMResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ProcessIM(EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest request) {
            return base.Channel.ProcessIM(request);
        }
        
        public void ProcessIM(int pintQueId, string curpackSlip, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest();
            inValue.pintQueId = pintQueId;
            inValue.curpackSlip = curpackSlip;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.ProcessIMResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ProcessIM(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ProcessIMResponse> ProcessIMAsync(EpicWAS.Epicor.ReceiptSvc.ProcessIMRequest request) {
            return base.Channel.ProcessIMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveAllResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveAll(EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest request) {
            return base.Channel.ReceiveAll(request);
        }
        
        public void ReceiveAll(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.ReceiveAllResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveAll(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveAllResponse> ReceiveAllAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveAllRequest request) {
            return base.Channel.ReceiveAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveAllLines(EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest request) {
            return base.Channel.ReceiveAllLines(request);
        }
        
        public void ReceiveAllLines(bool ipReceived, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest();
            inValue.ipReceived = ipReceived;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveAllLines(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesResponse> ReceiveAllLinesAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveAllLinesRequest request) {
            return base.Channel.ReceiveAllLinesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveContainerUsingArrivedDate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest request) {
            return base.Channel.ReceiveContainerUsingArrivedDate(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainerUsingArrivedDate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, System.Nullable<System.DateTime> ipArrivedDate) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest();
            inValue.ds = ds;
            inValue.inContainerID = inContainerID;
            inValue.ipArrivedDate = ipArrivedDate;
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveContainerUsingArrivedDate(inValue);
            ds = retVal.ds;
            return retVal.ReceiveContainerUsingArrivedDateResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateResponse> ReceiveContainerUsingArrivedDateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUsingArrivedDateRequest request) {
            return base.Channel.ReceiveContainerUsingArrivedDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveContainer(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest request) {
            return base.Channel.ReceiveContainer(request);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ContainerTrackingTableset ReceiveContainer(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest();
            inValue.ds = ds;
            inValue.inContainerID = inContainerID;
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveContainer(inValue);
            ds = retVal.ds;
            return retVal.ReceiveContainerResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerResponse> ReceiveContainerAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerRequest request) {
            return base.Channel.ReceiveContainerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveContainerUpdateUsingArriveDate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest request) {
            return base.Channel.ReceiveContainerUpdateUsingArriveDate(request);
        }
        
        public bool ReceiveContainerUpdateUsingArriveDate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, System.Nullable<System.DateTime> ipArrivedDate, string inCreateNewPoRels, out bool outPartialReceipt, out bool outReceiveAll) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest();
            inValue.ds = ds;
            inValue.inContainerID = inContainerID;
            inValue.ipArrivedDate = ipArrivedDate;
            inValue.inCreateNewPoRels = inCreateNewPoRels;
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveContainerUpdateUsingArriveDate(inValue);
            ds = retVal.ds;
            outPartialReceipt = retVal.outPartialReceipt;
            outReceiveAll = retVal.outReceiveAll;
            return retVal.outEshReceived;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateResponse> ReceiveContainerUpdateUsingArriveDateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateUsingArriveDateRequest request) {
            return base.Channel.ReceiveContainerUpdateUsingArriveDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.ReceiveContainerUpdate(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest request) {
            return base.Channel.ReceiveContainerUpdate(request);
        }
        
        public bool ReceiveContainerUpdate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int inContainerID, string inCreateNewPoRels, out bool outPartialReceipt, out bool outReceiveAll) {
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest();
            inValue.ds = ds;
            inValue.inContainerID = inContainerID;
            inValue.inCreateNewPoRels = inCreateNewPoRels;
            EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).ReceiveContainerUpdate(inValue);
            ds = retVal.ds;
            outPartialReceipt = retVal.outPartialReceipt;
            outReceiveAll = retVal.outReceiveAll;
            return retVal.outEshReceived;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateResponse> ReceiveContainerUpdateAsync(EpicWAS.Epicor.ReceiptSvc.ReceiveContainerUpdateRequest request) {
            return base.Channel.ReceiveContainerUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.SetPrimaryBin(EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest request) {
            return base.Channel.SetPrimaryBin(request);
        }
        
        public void SetPrimaryBin(int vendorNum, string purPoint, string packSlip, int packLine, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest inValue = new EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).SetPrimaryBin(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinResponse> SetPrimaryBinAsync(EpicWAS.Epicor.ReceiptSvc.SetPrimaryBinRequest request) {
            return base.Channel.SetPrimaryBinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeContainerHdrArrivedDate(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest request) {
            return base.Channel.OnChangeContainerHdrArrivedDate(request);
        }
        
        public bool OnChangeContainerHdrArrivedDate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string ipCompany, int ipContainerID, System.Nullable<System.DateTime> ipNewArrivedDate, System.Nullable<System.DateTime> ipOldArrivedDate) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest();
            inValue.ds = ds;
            inValue.ipCompany = ipCompany;
            inValue.ipContainerID = ipContainerID;
            inValue.ipNewArrivedDate = ipNewArrivedDate;
            inValue.ipOldArrivedDate = ipOldArrivedDate;
            EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeContainerHdrArrivedDate(inValue);
            ds = retVal.ds;
            return retVal.opNeedsRecalc;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateResponse> OnChangeContainerHdrArrivedDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerHdrArrivedDateRequest request) {
            return base.Channel.OnChangeContainerHdrArrivedDateAsync(request);
        }
        
        public void ResetLandedCostDisbursements(int ipVendorNum, string ipPurPoint, string ipPackSlip, string ipDisburseMethod) {
            base.Channel.ResetLandedCostDisbursements(ipVendorNum, ipPurPoint, ipPackSlip, ipDisburseMethod);
        }
        
        public System.Threading.Tasks.Task ResetLandedCostDisbursementsAsync(int ipVendorNum, string ipPurPoint, string ipPackSlip, string ipDisburseMethod) {
            return base.Channel.ResetLandedCostDisbursementsAsync(ipVendorNum, ipPurPoint, ipPackSlip, ipDisburseMethod);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.UpdateMasterResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.UpdateMaster(EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMaster(request);
        }
        
        public string UpdateMaster(
                    bool RunChkLCAmtBeforeUpdate, 
                    bool RunChkHdrBeforeUpdate, 
                    int ipVendorNum, 
                    string ipPurPoint, 
                    string ipPackSlip, 
                    int ipPackLine, 
                    bool lRunChkDtl, 
                    bool lRunChkDtlCompliance, 
                    bool lRunCheckCompliance, 
                    bool lRunPreUpdate, 
                    bool lRunCreatePartLot, 
                    string partNum, 
                    string lotNum, 
                    bool lOkToUpdate, 
                    ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, 
                    out string opUpliftWarnMsg, 
                    out string opReceiptWarnMsg, 
                    out string opArriveWarnMsg, 
                    out string qMessageStr, 
                    out string sMessageStr, 
                    out string lcMessageStr, 
                    out string pcMessageStr, 
                    out string qDtlComplianceMsgStr, 
                    out bool lCompliant, 
                    out bool lRequiresUserInput, 
                    out bool lUpdateWasRun, 
                    out string wrnLines) {
            EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest inValue = new EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest();
            inValue.RunChkLCAmtBeforeUpdate = RunChkLCAmtBeforeUpdate;
            inValue.RunChkHdrBeforeUpdate = RunChkHdrBeforeUpdate;
            inValue.ipVendorNum = ipVendorNum;
            inValue.ipPurPoint = ipPurPoint;
            inValue.ipPackSlip = ipPackSlip;
            inValue.ipPackLine = ipPackLine;
            inValue.lRunChkDtl = lRunChkDtl;
            inValue.lRunChkDtlCompliance = lRunChkDtlCompliance;
            inValue.lRunCheckCompliance = lRunCheckCompliance;
            inValue.lRunPreUpdate = lRunPreUpdate;
            inValue.lRunCreatePartLot = lRunCreatePartLot;
            inValue.partNum = partNum;
            inValue.lotNum = lotNum;
            inValue.lOkToUpdate = lOkToUpdate;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.UpdateMasterResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).UpdateMaster(inValue);
            opUpliftWarnMsg = retVal.opUpliftWarnMsg;
            opReceiptWarnMsg = retVal.opReceiptWarnMsg;
            opArriveWarnMsg = retVal.opArriveWarnMsg;
            qMessageStr = retVal.qMessageStr;
            sMessageStr = retVal.sMessageStr;
            lcMessageStr = retVal.lcMessageStr;
            pcMessageStr = retVal.pcMessageStr;
            qDtlComplianceMsgStr = retVal.qDtlComplianceMsgStr;
            lCompliant = retVal.lCompliant;
            lRequiresUserInput = retVal.lRequiresUserInput;
            lUpdateWasRun = retVal.lUpdateWasRun;
            wrnLines = retVal.wrnLines;
            ds = retVal.ds;
            return retVal.cLCAmtMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.UpdateMasterResponse> UpdateMasterAsync(EpicWAS.Epicor.ReceiptSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMasterAsync(request);
        }
        
        public string ValidateMRPONum(int poNum, int vendorNum) {
            return base.Channel.ValidateMRPONum(poNum, vendorNum);
        }
        
        public System.Threading.Tasks.Task<string> ValidateMRPONumAsync(int poNum, int vendorNum) {
            return base.Channel.ValidateMRPONumAsync(poNum, vendorNum);
        }
        
        public bool ValidateReceiptRecords(string tableName, int vendorNum, string purPoint, string packSlip, int packLine) {
            return base.Channel.ValidateReceiptRecords(tableName, vendorNum, purPoint, packSlip, packLine);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateReceiptRecordsAsync(string tableName, int vendorNum, string purPoint, string packSlip, int packLine) {
            return base.Channel.ValidateReceiptRecordsAsync(tableName, vendorNum, purPoint, packSlip, packLine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.VoidLegalNumber(EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest request) {
            return base.Channel.VoidLegalNumber(request);
        }
        
        public void VoidLegalNumber(int vendorNum, string purPoint, string packSlip, string voidReason, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest inValue = new EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.voidReason = voidReason;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).VoidLegalNumber(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberResponse> VoidLegalNumberAsync(EpicWAS.Epicor.ReceiptSvc.VoidLegalNumberRequest request) {
            return base.Channel.VoidLegalNumberAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckHdrBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest request) {
            return base.Channel.CheckHdrBeforeUpdate(request);
        }
        
        public string CheckHdrBeforeUpdate(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, out string opReceiptWarnMsg, out string opArriveWarnMsg) {
            EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckHdrBeforeUpdate(inValue);
            opReceiptWarnMsg = retVal.opReceiptWarnMsg;
            opArriveWarnMsg = retVal.opArriveWarnMsg;
            ds = retVal.ds;
            return retVal.opUpliftWarnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateResponse> CheckHdrBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckHdrBeforeUpdateRequest request) {
            return base.Channel.CheckHdrBeforeUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckLCAmtBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest request) {
            return base.Channel.CheckLCAmtBeforeUpdate(request);
        }
        
        public string CheckLCAmtBeforeUpdate(int ipVendorNum, string ipPurPoint, string ipPackSlip, int ipPackLine, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest();
            inValue.ipVendorNum = ipVendorNum;
            inValue.ipPurPoint = ipPurPoint;
            inValue.ipPackSlip = ipPackSlip;
            inValue.ipPackLine = ipPackLine;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckLCAmtBeforeUpdate(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateResponse> CheckLCAmtBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckLCAmtBeforeUpdateRequest request) {
            return base.Channel.CheckLCAmtBeforeUpdateAsync(request);
        }
        
        public string CheckOnLeaveHead(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.CheckOnLeaveHead(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task<string> CheckOnLeaveHeadAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.CheckOnLeaveHeadAsync(vendorNum, purPoint, packSlip);
        }
        
        public string CheckPOClosedInfo(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.CheckPOClosedInfo(vendorNum, purPoint, packSlip);
        }
        
        public System.Threading.Tasks.Task<string> CheckPOClosedInfoAsync(int vendorNum, string purPoint, string packSlip) {
            return base.Channel.CheckPOClosedInfoAsync(vendorNum, purPoint, packSlip);
        }
        
        public string ExistsRcvHead(int vendorNum, string purPoint, string packSlip, int poNum) {
            return base.Channel.ExistsRcvHead(vendorNum, purPoint, packSlip, poNum);
        }
        
        public System.Threading.Tasks.Task<string> ExistsRcvHeadAsync(int vendorNum, string purPoint, string packSlip, int poNum) {
            return base.Channel.ExistsRcvHeadAsync(vendorNum, purPoint, packSlip, poNum);
        }
        
        public EpicWAS.Epicor.ReceiptSvc.ReceiptTableset GetByIdChkContainerID(int piVendorNum, string pcPurPoint, string pcPackSlip, int piPONum) {
            return base.Channel.GetByIdChkContainerID(piVendorNum, pcPurPoint, pcPackSlip, piPONum);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.ReceiptTableset> GetByIdChkContainerIDAsync(int piVendorNum, string pcPurPoint, string pcPackSlip, int piPONum) {
            return base.Channel.GetByIdChkContainerIDAsync(piVendorNum, pcPurPoint, pcPackSlip, piPONum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvHeadWithPONum(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest request) {
            return base.Channel.GetNewRcvHeadWithPONum(request);
        }
        
        public void GetNewRcvHeadWithPONum(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int poNum) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.poNum = poNum;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvHeadWithPONum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumResponse> GetNewRcvHeadWithPONumAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvHeadWithPONumRequest request) {
            return base.Channel.GetNewRcvHeadWithPONumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetVendorInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetVendorInfo(EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest request) {
            return base.Channel.GetVendorInfo(request);
        }
        
        public int GetVendorInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, string vendorID, out string purPoint) {
            EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest();
            inValue.ds = ds;
            inValue.vendorID = vendorID;
            EpicWAS.Epicor.ReceiptSvc.GetVendorInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetVendorInfo(inValue);
            ds = retVal.ds;
            purPoint = retVal.purPoint;
            return retVal.vendorNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetVendorInfoResponse> GetVendorInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetVendorInfoRequest request) {
            return base.Channel.GetVendorInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.RcvHeadNegInvCheck(EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest request) {
            return base.Channel.RcvHeadNegInvCheck(request);
        }
        
        public string RcvHeadNegInvCheck(string company, int vendorNum, string purPoint, string packSlip, out string msg) {
            EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest inValue = new EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest();
            inValue.company = company;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).RcvHeadNegInvCheck(inValue);
            msg = retVal.msg;
            return retVal.negQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckResponse> RcvHeadNegInvCheckAsync(EpicWAS.Epicor.ReceiptSvc.RcvHeadNegInvCheckRequest request) {
            return base.Channel.RcvHeadNegInvCheckAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHdrReceived(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest request) {
            return base.Channel.OnChangeHdrReceived(request);
        }
        
        public void OnChangeHdrReceived(int vendorNum, string purPoint, string packSlip, bool ipReceived, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.ipReceived = ipReceived;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHdrReceived(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedResponse> OnChangeHdrReceivedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrReceivedRequest request) {
            return base.Channel.OnChangeHdrReceivedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHdrTaxRegionCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest request) {
            return base.Channel.OnChangeHdrTaxRegionCode(request);
        }
        
        public void OnChangeHdrTaxRegionCode(string newTaxRegionCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest();
            inValue.newTaxRegionCode = newTaxRegionCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHdrTaxRegionCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeResponse> OnChangeHdrTaxRegionCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHdrTaxRegionCodeRequest request) {
            return base.Channel.OnChangeHdrTaxRegionCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeContainerImportFld(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest request) {
            return base.Channel.OnChangeContainerImportFld(request);
        }
        
        public void OnChangeContainerImportFld(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeContainerImportFld(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldResponse> OnChangeContainerImportFldAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeContainerImportFldRequest request) {
            return base.Channel.OnChangeContainerImportFldAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangedHeaderTaxManual(EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest request) {
            return base.Channel.OnChangedHeaderTaxManual(request);
        }
        
        public void OnChangedHeaderTaxManual(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangedHeaderTaxManual(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualResponse> OnChangedHeaderTaxManualAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedHeaderTaxManualRequest request) {
            return base.Channel.OnChangedHeaderTaxManualAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxFixedAmount(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest request) {
            return base.Channel.OnChangeHeaderTaxFixedAmount(request);
        }
        
        public void OnChangeHeaderTaxFixedAmount(decimal proposedFixedAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest();
            inValue.proposedFixedAmt = proposedFixedAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxFixedAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountResponse> OnChangeHeaderTaxFixedAmountAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxFixedAmountRequest request) {
            return base.Channel.OnChangeHeaderTaxFixedAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxTaxPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxPercent(request);
        }
        
        public void OnChangeHeaderTaxTaxPercent(decimal proposedTaxPercent, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest();
            inValue.proposedTaxPercent = proposedTaxPercent;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentResponse> OnChangeHeaderTaxTaxPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxPercentRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxRateCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest request) {
            return base.Channel.OnChangeHeaderTaxRateCode(request);
        }
        
        public void OnChangeHeaderTaxRateCode(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeResponse> OnChangeHeaderTaxRateCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeRequest request) {
            return base.Channel.OnChangeHeaderTaxRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxRateCodeMaster(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest request) {
            return base.Channel.OnChangeHeaderTaxRateCodeMaster(request);
        }
        
        public void OnChangeHeaderTaxRateCodeMaster(string proposedRateCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest();
            inValue.proposedRateCode = proposedRateCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxRateCodeMaster(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterResponse> OnChangeHeaderTaxRateCodeMasterAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxRateCodeMasterRequest request) {
            return base.Channel.OnChangeHeaderTaxRateCodeMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxReportableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxReportableAmt(request);
        }
        
        public void OnChangeHeaderTaxReportableAmt(decimal proposedReportableAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest();
            inValue.proposedReportableAmt = proposedReportableAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxReportableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtResponse> OnChangeHeaderTaxReportableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxReportableAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxReportableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxTaxableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxableAmt(request);
        }
        
        public void OnChangeHeaderTaxTaxableAmt(decimal proposedTaxableAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest();
            inValue.proposedTaxableAmt = proposedTaxableAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtResponse> OnChangeHeaderTaxTaxableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxableAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxTaxAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxAmt(request);
        }
        
        public void OnChangeHeaderTaxTaxAmt(decimal proposedTaxAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest();
            inValue.proposedTaxAmt = proposedTaxAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtResponse> OnChangeHeaderTaxTaxAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxAmtRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxTaxCode(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxCode(request);
        }
        
        public void OnChangeHeaderTaxTaxCode(string proposedTaxCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest();
            inValue.proposedTaxCode = proposedTaxCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeResponse> OnChangeHeaderTaxTaxCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxCodeRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeHeaderTaxTaxDeductable(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxDeductable(request);
        }
        
        public void OnChangeHeaderTaxTaxDeductable(decimal proposedTaxDeductable, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest();
            inValue.proposedTaxDeductable = proposedTaxDeductable;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeHeaderTaxTaxDeductable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableResponse> OnChangeHeaderTaxTaxDeductableAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeHeaderTaxTaxDeductableRequest request) {
            return base.Channel.OnChangeHeaderTaxTaxDeductableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.AutoSetToLocation(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest request) {
            return base.Channel.AutoSetToLocation(request);
        }
        
        public void AutoSetToLocation(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest inValue = new EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).AutoSetToLocation(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationResponse> AutoSetToLocationAsync(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationRequest request) {
            return base.Channel.AutoSetToLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.AutoSetToLocationToDflt(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest request) {
            return base.Channel.AutoSetToLocationToDflt(request);
        }
        
        public void AutoSetToLocationToDflt(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest inValue = new EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).AutoSetToLocationToDflt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltResponse> AutoSetToLocationToDfltAsync(EpicWAS.Epicor.ReceiptSvc.AutoSetToLocationToDfltRequest request) {
            return base.Channel.AutoSetToLocationToDfltAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest request) {
            return base.Channel.CheckDtlBeforeUpdate(request);
        }
        
        public string CheckDtlBeforeUpdate(EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int packLine, string packSlip, out string sMessageStr, out string lcMessageStr, out string pcMessageStr) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packLine = packLine;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlBeforeUpdate(inValue);
            sMessageStr = retVal.sMessageStr;
            lcMessageStr = retVal.lcMessageStr;
            pcMessageStr = retVal.pcMessageStr;
            return retVal.qMessageStr;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateResponse> CheckDtlBeforeUpdateAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlBeforeUpdateRequest request) {
            return base.Channel.CheckDtlBeforeUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlCompliance(EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest request) {
            return base.Channel.CheckDtlCompliance(request);
        }
        
        public string CheckDtlCompliance(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, int packLine, string packSlip, out string pcMessageStr) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packLine = packLine;
            inValue.packSlip = packSlip;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlCompliance(inValue);
            ds = retVal.ds;
            pcMessageStr = retVal.pcMessageStr;
            return retVal.qMessageStr;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceResponse> CheckDtlComplianceAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlComplianceRequest request) {
            return base.Channel.CheckDtlComplianceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlJobStatus(EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest request) {
            return base.Channel.CheckDtlJobStatus(request);
        }
        
        public string CheckDtlJobStatus(int poNum, int poLine, int poRelNum, string jobNum, out string questionMsg, out string warnMsg) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest();
            inValue.poNum = poNum;
            inValue.poLine = poLine;
            inValue.poRelNum = poRelNum;
            inValue.jobNum = jobNum;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlJobStatus(inValue);
            questionMsg = retVal.questionMsg;
            warnMsg = retVal.warnMsg;
            return retVal.poQuestion;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusResponse> CheckDtlJobStatusAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlJobStatusRequest request) {
            return base.Channel.CheckDtlJobStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlLotInfo(EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest request) {
            return base.Channel.CheckDtlLotInfo(request);
        }
        
        public string CheckDtlLotInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string lotNum, out string errorMsg) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.lotNum = lotNum;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlLotInfo(inValue);
            ds = retVal.ds;
            errorMsg = retVal.errorMsg;
            return retVal.questionMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoResponse> CheckDtlLotInfoAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlLotInfoRequest request) {
            return base.Channel.CheckDtlLotInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlSeqChange(EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest request) {
            return base.Channel.CheckDtlSeqChange(request);
        }
        
        public string CheckDtlSeqChange(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int jobSeq) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.jobSeq = jobSeq;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlSeqChange(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeResponse> CheckDtlSeqChangeAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlSeqChangeRequest request) {
            return base.Channel.CheckDtlSeqChangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckDtlSSN(EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest request) {
            return base.Channel.CheckDtlSSN(request);
        }
        
        public string CheckDtlSSN(int vendorNum, string purPoint, string packSlip, int packLine, string receivedTo, string partNum, out string vWMessage) {
            EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.receivedTo = receivedTo;
            inValue.partNum = partNum;
            EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckDtlSSN(inValue);
            vWMessage = retVal.vWMessage;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNResponse> CheckDtlSSNAsync(EpicWAS.Epicor.ReceiptSvc.CheckDtlSSNRequest request) {
            return base.Channel.CheckDtlSSNAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckIssuedComplete(EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest request) {
            return base.Channel.CheckIssuedComplete(request);
        }
        
        public string CheckIssuedComplete(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, bool issuedComplete) {
            EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.issuedComplete = issuedComplete;
            EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckIssuedComplete(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteResponse> CheckIssuedCompleteAsync(EpicWAS.Epicor.ReceiptSvc.CheckIssuedCompleteRequest request) {
            return base.Channel.CheckIssuedCompleteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckReceivedComplete(EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest request) {
            return base.Channel.CheckReceivedComplete(request);
        }
        
        public string CheckReceivedComplete(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, bool receivedComplete) {
            EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.receivedComplete = receivedComplete;
            EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckReceivedComplete(inValue);
            ds = retVal.ds;
            return retVal.vMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteResponse> CheckReceivedCompleteAsync(EpicWAS.Epicor.ReceiptSvc.CheckReceivedCompleteRequest request) {
            return base.Channel.CheckReceivedCompleteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.CheckSupplierPrice(EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest request) {
            return base.Channel.CheckSupplierPrice(request);
        }
        
        public string CheckSupplierPrice(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal suppPrice) {
            EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest inValue = new EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.suppPrice = suppPrice;
            EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).CheckSupplierPrice(inValue);
            ds = retVal.ds;
            return retVal.warningMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceResponse> CheckSupplierPriceAsync(EpicWAS.Epicor.ReceiptSvc.CheckSupplierPriceRequest request) {
            return base.Channel.CheckSupplierPriceAsync(request);
        }
        
        public bool chkUnReceive(int ipPONum, int ipPOLine, int ipPORelNum, string ipPackSlip, int ipPackLine) {
            return base.Channel.chkUnReceive(ipPONum, ipPOLine, ipPORelNum, ipPackSlip, ipPackLine);
        }
        
        public System.Threading.Tasks.Task<bool> chkUnReceiveAsync(int ipPONum, int ipPOLine, int ipPORelNum, string ipPackSlip, int ipPackLine) {
            return base.Channel.chkUnReceiveAsync(ipPONum, ipPOLine, ipPORelNum, ipPackSlip, ipPackLine);
        }
        
        public void CreatePartLot(string partNum, string lotNum) {
            base.Channel.CreatePartLot(partNum, lotNum);
        }
        
        public System.Threading.Tasks.Task CreatePartLotAsync(string partNum, string lotNum) {
            return base.Channel.CreatePartLotAsync(partNum, lotNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlAssemblyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest request) {
            return base.Channel.GetDtlAssemblyInfo(request);
        }
        
        public void GetDtlAssemblyInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlAssemblyInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoResponse> GetDtlAssemblyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlAssemblyInfoRequest request) {
            return base.Channel.GetDtlAssemblyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlJobInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest request) {
            return base.Channel.GetDtlJobInfo(request);
        }
        
        public void GetDtlJobInfo(int vendorNum, string purPoint, string packSlip, int packLine, string jobNum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.jobNum = jobNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlJobInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoResponse> GetDtlJobInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlJobInfoRequest request) {
            return base.Channel.GetDtlJobInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlLotInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest request) {
            return base.Channel.GetDtlLotInfo(request);
        }
        
        public string GetDtlLotInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, string lotNum, out string errorMsg) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.lotNum = lotNum;
            EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlLotInfo(inValue);
            ds = retVal.ds;
            errorMsg = retVal.errorMsg;
            return retVal.questionMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoResponse> GetDtlLotInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlLotInfoRequest request) {
            return base.Channel.GetDtlLotInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlPartInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest request) {
            return base.Channel.GetDtlPartInfo(request);
        }
        
        public bool GetDtlPartInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, ref string partNum, System.Guid SysRowID, string rowType) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.partNum = partNum;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlPartInfo(inValue);
            ds = retVal.ds;
            partNum = retVal.partNum;
            return retVal.multipleMatch;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoResponse> GetDtlPartInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPartInfoRequest request) {
            return base.Channel.GetDtlPartInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlPOInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest request) {
            return base.Channel.GetDtlPOInfo(request);
        }
        
        public string GetDtlPOInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poNum, bool requiresUserInput) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.poNum = poNum;
            inValue.requiresUserInput = requiresUserInput;
            EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlPOInfo(inValue);
            ds = retVal.ds;
            return retVal.poStatusQstnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoResponse> GetDtlPOInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPOInfoRequest request) {
            return base.Channel.GetDtlPOInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlPOLineInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest request) {
            return base.Channel.GetDtlPOLineInfo(request);
        }
        
        public string GetDtlPOLineInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poLine) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.poLine = poLine;
            EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlPOLineInfo(inValue);
            ds = retVal.ds;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoResponse> GetDtlPOLineInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPOLineInfoRequest request) {
            return base.Channel.GetDtlPOLineInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlPORelInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest request) {
            return base.Channel.GetDtlPORelInfo(request);
        }
        
        public void GetDtlPORelInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int poRelNum) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.poRelNum = poRelNum;
            EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlPORelInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoResponse> GetDtlPORelInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlPORelInfoRequest request) {
            return base.Channel.GetDtlPORelInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlQtyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest request) {
            return base.Channel.GetDtlQtyInfo(request);
        }
        
        public string GetDtlQtyInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal inputOurQty, string inputIUM, string whichField) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.inputOurQty = inputOurQty;
            inValue.inputIUM = inputIUM;
            inValue.whichField = whichField;
            EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlQtyInfo(inValue);
            ds = retVal.ds;
            return retVal.warnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoResponse> GetDtlQtyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlQtyInfoRequest request) {
            return base.Channel.GetDtlQtyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlRcvdToInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest request) {
            return base.Channel.GetDtlRcvdToInfo(request);
        }
        
        public void GetDtlRcvdToInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, ref string rcvdTo) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.rcvdTo = rcvdTo;
            EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlRcvdToInfo(inValue);
            ds = retVal.ds;
            rcvdTo = retVal.rcvdTo;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoResponse> GetDtlRcvdToInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlRcvdToInfoRequest request) {
            return base.Channel.GetDtlRcvdToInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlSeqInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest request) {
            return base.Channel.GetDtlSeqInfo(request);
        }
        
        public string GetDtlSeqInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, int jobSeq) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.jobSeq = jobSeq;
            EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlSeqInfo(inValue);
            ds = retVal.ds;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoResponse> GetDtlSeqInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlSeqInfoRequest request) {
            return base.Channel.GetDtlSeqInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetDtlVenQtyInfo(EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest request) {
            return base.Channel.GetDtlVenQtyInfo(request);
        }
        
        public string GetDtlVenQtyInfo(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine, decimal vendorQty) {
            EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.vendorQty = vendorQty;
            EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetDtlVenQtyInfo(inValue);
            ds = retVal.ds;
            return retVal.warnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoResponse> GetDtlVenQtyInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetDtlVenQtyInfoRequest request) {
            return base.Channel.GetDtlVenQtyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetLotImportInfo(EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest request) {
            return base.Channel.GetLotImportInfo(request);
        }
        
        public string GetLotImportInfo(string inPartNum, string inLotNum, out string outImportedFromDesc) {
            EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest();
            inValue.inPartNum = inPartNum;
            inValue.inLotNum = inLotNum;
            EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetLotImportInfo(inValue);
            outImportedFromDesc = retVal.outImportedFromDesc;
            return retVal.outImportNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoResponse> GetLotImportInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetLotImportInfoRequest request) {
            return base.Channel.GetLotImportInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetNewRcvDtlMisc(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest request) {
            return base.Channel.GetNewRcvDtlMisc(request);
        }
        
        public void GetNewRcvDtlMisc(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int VendorNum, string PurPoint, string PackSlip) {
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest();
            inValue.ds = ds;
            inValue.VendorNum = VendorNum;
            inValue.PurPoint = PurPoint;
            inValue.PackSlip = PackSlip;
            EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetNewRcvDtlMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscResponse> GetNewRcvDtlMiscAsync(EpicWAS.Epicor.ReceiptSvc.GetNewRcvDtlMiscRequest request) {
            return base.Channel.GetNewRcvDtlMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.GetPartXRefInfo(EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfo(request);
        }
        
        public bool GetPartXRefInfo(ref string partNum) {
            EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest inValue = new EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest();
            inValue.partNum = partNum;
            EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).GetPartXRefInfo(inValue);
            partNum = retVal.partNum;
            return retVal.multipleMatch;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoResponse> GetPartXRefInfoAsync(EpicWAS.Epicor.ReceiptSvc.GetPartXRefInfoRequest request) {
            return base.Channel.GetPartXRefInfoAsync(request);
        }
        
        public string DisplayWarnMsg(string PartTranType, string JobNum, int AsmSeq, int JobSeq) {
            return base.Channel.DisplayWarnMsg(PartTranType, JobNum, AsmSeq, JobSeq);
        }
        
        public System.Threading.Tasks.Task<string> DisplayWarnMsgAsync(string PartTranType, string JobNum, int AsmSeq, int JobSeq) {
            return base.Channel.DisplayWarnMsgAsync(PartTranType, JobNum, AsmSeq, JobSeq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.LCChangeLCAmt(EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest request) {
            return base.Channel.LCChangeLCAmt(request);
        }
        
        public void LCChangeLCAmt(ref EpicWAS.Epicor.ReceiptSvc.MassReceiptTableset ds, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest();
            inValue.ds = ds;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).LCChangeLCAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtResponse> LCChangeLCAmtAsync(EpicWAS.Epicor.ReceiptSvc.LCChangeLCAmtRequest request) {
            return base.Channel.LCChangeLCAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangedDtlPOTransValue(EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest request) {
            return base.Channel.OnChangedDtlPOTransValue(request);
        }
        
        public void OnChangedDtlPOTransValue(int vendorNum, string purPoint, string packSlip, int packLine, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangedDtlPOTransValue(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueResponse> OnChangedDtlPOTransValueAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedDtlPOTransValueRequest request) {
            return base.Channel.OnChangedDtlPOTransValueAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlBinNum(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest request) {
            return base.Channel.OnChangeDtlBinNum(request);
        }
        
        public string OnChangeDtlBinNum(int vendorNum, string purPoint, string packSlip, int packLine, string newBinNum, bool requiresUserInput, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.newBinNum = newBinNum;
            inValue.requiresUserInput = requiresUserInput;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlBinNum(inValue);
            ds = retVal.ds;
            return retVal.questionMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumResponse> OnChangeDtlBinNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlBinNumRequest request) {
            return base.Channel.OnChangeDtlBinNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlCommodity(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest request) {
            return base.Channel.OnChangeDtlCommodity(request);
        }
        
        public void OnChangeDtlCommodity(int vendorNum, string purPoint, string packSlip, int packLine, string ipCommCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ipCommCode = ipCommCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlCommodity(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityResponse> OnChangeDtlCommodityAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCommodityRequest request) {
            return base.Channel.OnChangeDtlCommodityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlCountryNum(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest request) {
            return base.Channel.OnChangeDtlCountryNum(request);
        }
        
        public void OnChangeDtlCountryNum(int vendorNum, string purPoint, string packSlip, int packLine, int ipCountryNum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ipCountryNum = ipCountryNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlCountryNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumResponse> OnChangeDtlCountryNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlCountryNumRequest request) {
            return base.Channel.OnChangeDtlCountryNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlLCIndCost(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest request) {
            return base.Channel.OnChangeDtlLCIndCost(request);
        }
        
        public void OnChangeDtlLCIndCost(int vendorNum, string purPoint, string packSlip, int packLine, decimal ipLCIndCost, decimal LCIndCostSum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ipLCIndCost = ipLCIndCost;
            inValue.LCIndCostSum = LCIndCostSum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlLCIndCost(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostResponse> OnChangeDtlLCIndCostAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlLCIndCostRequest request) {
            return base.Channel.OnChangeDtlLCIndCostAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlPCID(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest request) {
            return base.Channel.OnChangeDtlPCID(request);
        }
        
        public string OnChangeDtlPCID(int vendorNum, string purPoint, string packSlip, int packLine, string pcid, bool requiresUserInput, int selectedSerialNumberCount, string serialNumber, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, out string warnMsg) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.pcid = pcid;
            inValue.requiresUserInput = requiresUserInput;
            inValue.selectedSerialNumberCount = selectedSerialNumberCount;
            inValue.serialNumber = serialNumber;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlPCID(inValue);
            warnMsg = retVal.warnMsg;
            ds = retVal.ds;
            return retVal.questionMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDResponse> OnChangeDtlPCIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPCIDRequest request) {
            return base.Channel.OnChangeDtlPCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlPOSelected(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest request) {
            return base.Channel.OnChangeDtlPOSelected(request);
        }
        
        public string OnChangeDtlPOSelected(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int poNum) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest();
            inValue.ds = ds;
            inValue.poNum = poNum;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlPOSelected(inValue);
            ds = retVal.ds;
            return retVal.poStatusQstnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedResponse> OnChangeDtlPOSelectedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlPOSelectedRequest request) {
            return base.Channel.OnChangeDtlPOSelectedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlReceived(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest request) {
            return base.Channel.OnChangeDtlReceived(request);
        }
        
        public void OnChangeDtlReceived(int vendorNum, string purPoint, string packSlip, int packLine, bool ipReceived, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ipReceived = ipReceived;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlReceived(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedResponse> OnChangeDtlReceivedAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceivedRequest request) {
            return base.Channel.OnChangeDtlReceivedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlReceiptType(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest request) {
            return base.Channel.OnChangeDtlReceiptType(request);
        }
        
        public void OnChangeDtlReceiptType(int vendorNum, string purPoint, string packSlip, int packLine, string receiptType, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.receiptType = receiptType;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlReceiptType(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeResponse> OnChangeDtlReceiptTypeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlReceiptTypeRequest request) {
            return base.Channel.OnChangeDtlReceiptTypeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlSupplierPrice(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest request) {
            return base.Channel.OnChangeDtlSupplierPrice(request);
        }
        
        public void OnChangeDtlSupplierPrice(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlSupplierPrice(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceResponse> OnChangeDtlSupplierPriceAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlSupplierPriceRequest request) {
            return base.Channel.OnChangeDtlSupplierPriceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlTaxCatID(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest request) {
            return base.Channel.OnChangeDtlTaxCatID(request);
        }
        
        public void OnChangeDtlTaxCatID(int vendorNum, string purPoint, string packSlip, int packLine, string taxCatID, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.taxCatID = taxCatID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlTaxCatID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDResponse> OnChangeDtlTaxCatIDAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxCatIDRequest request) {
            return base.Channel.OnChangeDtlTaxCatIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlTaxExempt(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest request) {
            return base.Channel.OnChangeDtlTaxExempt(request);
        }
        
        public void OnChangeDtlTaxExempt(int vendorNum, string purPoint, string packSlip, int packLine, string taxExempt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.taxExempt = taxExempt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlTaxExempt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptResponse> OnChangeDtlTaxExemptAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlTaxExemptRequest request) {
            return base.Channel.OnChangeDtlTaxExemptAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlUpliftPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest request) {
            return base.Channel.OnChangeDtlUpliftPercent(request);
        }
        
        public void OnChangeDtlUpliftPercent(int vendorNum, string purPoint, string packSlip, int packLine, decimal ipUpliftPercent, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ipUpliftPercent = ipUpliftPercent;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlUpliftPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentResponse> OnChangeDtlUpliftPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlUpliftPercentRequest request) {
            return base.Channel.OnChangeDtlUpliftPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeReceiptDate(EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest request) {
            return base.Channel.OnChangeReceiptDate(request);
        }
        
        public string OnChangeReceiptDate(int vendorNum, string purPoint, string packSlip, int packLine, bool received, string partNum, System.Nullable<System.DateTime> rcvDate, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.received = received;
            inValue.partNum = partNum;
            inValue.rcvDate = rcvDate;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeReceiptDate(inValue);
            ds = retVal.ds;
            return retVal.wrnLines;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateResponse> OnChangeReceiptDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeReceiptDateRequest request) {
            return base.Channel.OnChangeReceiptDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDtlWareHouseCode(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest request) {
            return base.Channel.OnChangeDtlWareHouseCode(request);
        }
        
        public string OnChangeDtlWareHouseCode(int vendorNum, string purPoint, string packSlip, int packLine, string newWareHouseCode, bool requiresUserInput, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, out string warnMsg) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.newWareHouseCode = newWareHouseCode;
            inValue.requiresUserInput = requiresUserInput;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDtlWareHouseCode(inValue);
            warnMsg = retVal.warnMsg;
            ds = retVal.ds;
            return retVal.questionMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeResponse> OnChangeDtlWareHouseCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDtlWareHouseCodeRequest request) {
            return base.Channel.OnChangeDtlWareHouseCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeInspReq(EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest request) {
            return base.Channel.OnChangeInspReq(request);
        }
        
        public void OnChangeInspReq(ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds, int vendorNum, string purPoint, string packSlip, int packLine) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest();
            inValue.ds = ds;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeInspReq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqResponse> OnChangeInspReqAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeInspReqRequest request) {
            return base.Channel.OnChangeInspReqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.RcvDtlNegInvCheck(EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest request) {
            return base.Channel.RcvDtlNegInvCheck(request);
        }
        
        public string RcvDtlNegInvCheck(string company, int vendorNum, string purPoint, string packSlip, int packLine, out string msg) {
            EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest inValue = new EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest();
            inValue.company = company;
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).RcvDtlNegInvCheck(inValue);
            msg = retVal.msg;
            return retVal.negQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckResponse> RcvDtlNegInvCheckAsync(EpicWAS.Epicor.ReceiptSvc.RcvDtlNegInvCheckRequest request) {
            return base.Channel.RcvDtlNegInvCheckAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.SetToLocationResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.SetToLocation(EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest request) {
            return base.Channel.SetToLocation(request);
        }
        
        public void SetToLocation(int vendorNum, string purPoint, string packSlip, int packLine, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest inValue = new EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.SetToLocationResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).SetToLocation(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.SetToLocationResponse> SetToLocationAsync(EpicWAS.Epicor.ReceiptSvc.SetToLocationRequest request) {
            return base.Channel.SetToLocationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangedTaxManual(EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest request) {
            return base.Channel.OnChangedTaxManual(request);
        }
        
        public void OnChangedTaxManual(string tableName, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest();
            inValue.tableName = tableName;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangedTaxManual(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualResponse> OnChangedTaxManualAsync(EpicWAS.Epicor.ReceiptSvc.OnChangedTaxManualRequest request) {
            return base.Channel.OnChangedTaxManualAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxFixedAmount(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest request) {
            return base.Channel.OnChangeTaxFixedAmount(request);
        }
        
        public void OnChangeTaxFixedAmount(string tableName, decimal proposedFixedAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest();
            inValue.tableName = tableName;
            inValue.proposedFixedAmt = proposedFixedAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxFixedAmount(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountResponse> OnChangeTaxFixedAmountAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxFixedAmountRequest request) {
            return base.Channel.OnChangeTaxFixedAmountAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxReportableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest request) {
            return base.Channel.OnChangeTaxReportableAmt(request);
        }
        
        public void OnChangeTaxReportableAmt(string tableName, decimal proposedReportableAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedReportableAmt = proposedReportableAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxReportableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtResponse> OnChangeTaxReportableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxReportableAmtRequest request) {
            return base.Channel.OnChangeTaxReportableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxTaxableAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest request) {
            return base.Channel.OnChangeTaxTaxableAmt(request);
        }
        
        public void OnChangeTaxTaxableAmt(string tableName, decimal proposedTaxableAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxableAmt = proposedTaxableAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxTaxableAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtResponse> OnChangeTaxTaxableAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxableAmtRequest request) {
            return base.Channel.OnChangeTaxTaxableAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxTaxAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest request) {
            return base.Channel.OnChangeTaxTaxAmt(request);
        }
        
        public void OnChangeTaxTaxAmt(string tableName, decimal proposedTaxAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxAmt = proposedTaxAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxTaxAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtResponse> OnChangeTaxTaxAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxAmtRequest request) {
            return base.Channel.OnChangeTaxTaxAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxDeductable(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest request) {
            return base.Channel.OnChangeTaxDeductable(request);
        }
        
        public void OnChangeTaxDeductable(string tableName, decimal proposedTaxDeductable, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxDeductable = proposedTaxDeductable;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxDeductable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableResponse> OnChangeTaxDeductableAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxDeductableRequest request) {
            return base.Channel.OnChangeTaxDeductableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxTaxCode(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest request) {
            return base.Channel.OnChangeTaxTaxCode(request);
        }
        
        public void OnChangeTaxTaxCode(string tableName, string proposedTaxCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxCode = proposedTaxCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxTaxCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeResponse> OnChangeTaxTaxCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxTaxCodeRequest request) {
            return base.Channel.OnChangeTaxTaxCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxRateCode(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest request) {
            return base.Channel.OnChangeTaxRateCode(request);
        }
        
        public void OnChangeTaxRateCode(string tableName, string proposedRateCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest();
            inValue.tableName = tableName;
            inValue.proposedRateCode = proposedRateCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxRateCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeResponse> OnChangeTaxRateCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxRateCodeRequest request) {
            return base.Channel.OnChangeTaxRateCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeTaxPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest request) {
            return base.Channel.OnChangeTaxPercent(request);
        }
        
        public void OnChangeTaxPercent(string tableName, decimal proposedTaxPercent, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest();
            inValue.tableName = tableName;
            inValue.proposedTaxPercent = proposedTaxPercent;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeTaxPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentResponse> OnChangeTaxPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeTaxPercentRequest request) {
            return base.Channel.OnChangeTaxPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeDutyTariffCode(EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest request) {
            return base.Channel.OnChangeDutyTariffCode(request);
        }
        
        public void OnChangeDutyTariffCode(int vendorNum, string purPoint, string packSlip, int packLine, int dutySeq, string ipTariffCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.packLine = packLine;
            inValue.dutySeq = dutySeq;
            inValue.ipTariffCode = ipTariffCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeDutyTariffCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeResponse> OnChangeDutyTariffCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeDutyTariffCodeRequest request) {
            return base.Channel.OnChangeDutyTariffCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscApplyDate(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest request) {
            return base.Channel.OnChangeMiscApplyDate(request);
        }
        
        public void OnChangeMiscApplyDate(int vendorNum, string purPoint, string packSlip, int miscSeq, System.Nullable<System.DateTime> ipApplyDate, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipApplyDate = ipApplyDate;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscApplyDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateResponse> OnChangeMiscApplyDateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscApplyDateRequest request) {
            return base.Channel.OnChangeMiscApplyDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscCharge(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest request) {
            return base.Channel.OnChangeMiscCharge(request);
        }
        
        public void OnChangeMiscCharge(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipChargeID, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipChargeID = ipChargeID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscCharge(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeResponse> OnChangeMiscChargeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscChargeRequest request) {
            return base.Channel.OnChangeMiscChargeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscCurrencyCode(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest request) {
            return base.Channel.OnChangeMiscCurrencyCode(request);
        }
        
        public void OnChangeMiscCurrencyCode(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipCurrCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipCurrCode = ipCurrCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscCurrencyCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeResponse> OnChangeMiscCurrencyCodeAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscCurrencyCodeRequest request) {
            return base.Channel.OnChangeMiscCurrencyCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscDocActualAmt(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest request) {
            return base.Channel.OnChangeMiscDocActualAmt(request);
        }
        
        public void OnChangeMiscDocActualAmt(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipDocActualAmt, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipDocActualAmt = ipDocActualAmt;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscDocActualAmt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtResponse> OnChangeMiscDocActualAmtAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscDocActualAmtRequest request) {
            return base.Channel.OnChangeMiscDocActualAmtAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscExchangeRate(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest request) {
            return base.Channel.OnChangeMiscExchangeRate(request);
        }
        
        public void OnChangeMiscExchangeRate(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipExchangeRate, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipExchangeRate = ipExchangeRate;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscExchangeRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateResponse> OnChangeMiscExchangeRateAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscExchangeRateRequest request) {
            return base.Channel.OnChangeMiscExchangeRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscInvoiceLine(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest request) {
            return base.Channel.OnChangeMiscInvoiceLine(request);
        }
        
        public void OnChangeMiscInvoiceLine(int vendorNum, string purPoint, string packSlip, int miscSeq, int ipInvLine, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipInvLine = ipInvLine;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscInvoiceLine(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineResponse> OnChangeMiscInvoiceLineAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceLineRequest request) {
            return base.Channel.OnChangeMiscInvoiceLineAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscInvoiceNum(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest request) {
            return base.Channel.OnChangeMiscInvoiceNum(request);
        }
        
        public void OnChangeMiscInvoiceNum(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipInvNum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipInvNum = ipInvNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscInvoiceNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumResponse> OnChangeMiscInvoiceNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscInvoiceNumRequest request) {
            return base.Channel.OnChangeMiscInvoiceNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscMscNum(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest request) {
            return base.Channel.OnChangeMiscMscNum(request);
        }
        
        public void OnChangeMiscMscNum(int vendorNum, string purPoint, string packSlip, int miscSeq, int ipMscNum, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipMscNum = ipMscNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscMscNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumResponse> OnChangeMiscMscNumAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscMscNumRequest request) {
            return base.Channel.OnChangeMiscMscNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscPercent(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest request) {
            return base.Channel.OnChangeMiscPercent(request);
        }
        
        public void OnChangeMiscPercent(int vendorNum, string purPoint, string packSlip, int miscSeq, decimal ipPercent, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipPercent = ipPercent;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscPercent(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentResponse> OnChangeMiscPercentAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscPercentRequest request) {
            return base.Channel.OnChangeMiscPercentAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpResponse EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract.OnChangeMiscRateGrp(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest request) {
            return base.Channel.OnChangeMiscRateGrp(request);
        }
        
        public void OnChangeMiscRateGrp(int vendorNum, string purPoint, string packSlip, int miscSeq, string ipRateGrpCode, ref EpicWAS.Epicor.ReceiptSvc.ReceiptTableset ds) {
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest inValue = new EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest();
            inValue.vendorNum = vendorNum;
            inValue.purPoint = purPoint;
            inValue.packSlip = packSlip;
            inValue.miscSeq = miscSeq;
            inValue.ipRateGrpCode = ipRateGrpCode;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpResponse retVal = ((EpicWAS.Epicor.ReceiptSvc.ReceiptSvcContract)(this)).OnChangeMiscRateGrp(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpResponse> OnChangeMiscRateGrpAsync(EpicWAS.Epicor.ReceiptSvc.OnChangeMiscRateGrpRequest request) {
            return base.Channel.OnChangeMiscRateGrpAsync(request);
        }
    }
}
