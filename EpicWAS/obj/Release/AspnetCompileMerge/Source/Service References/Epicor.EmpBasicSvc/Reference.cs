//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.EmpBasicSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpBasicListTableset : EpicWAS.Epicor.EmpBasicSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTable EmpBasicListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTable EmpBasicList {
            get {
                return this.EmpBasicListField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicListField, value) != true)) {
                    this.EmpBasicListField = value;
                    this.RaisePropertyChanged("EmpBasicList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtEmpBasicTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtEmpBasicTableset : EpicWAS.Epicor.EmpBasicSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicTable EmpBasicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchTable EmpBasicAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpCalTable EmpCalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateTable EmpLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleTable EmpRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtTable EmpRoleRtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.PartnerTable PartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ResourceCalTable ResourceCalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTable EmpBasic {
            get {
                return this.EmpBasicField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicField, value) != true)) {
                    this.EmpBasicField = value;
                    this.RaisePropertyChanged("EmpBasic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchTable EmpBasicAttch {
            get {
                return this.EmpBasicAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicAttchField, value) != true)) {
                    this.EmpBasicAttchField = value;
                    this.RaisePropertyChanged("EmpBasicAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpCalTable EmpCal {
            get {
                return this.EmpCalField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCalField, value) != true)) {
                    this.EmpCalField = value;
                    this.RaisePropertyChanged("EmpCal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateTable EmpLabExpRate {
            get {
                return this.EmpLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpLabExpRateField, value) != true)) {
                    this.EmpLabExpRateField = value;
                    this.RaisePropertyChanged("EmpLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleTable EmpRole {
            get {
                return this.EmpRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpRoleField, value) != true)) {
                    this.EmpRoleField = value;
                    this.RaisePropertyChanged("EmpRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtTable EmpRoleRt {
            get {
                return this.EmpRoleRtField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpRoleRtField, value) != true)) {
                    this.EmpRoleRtField = value;
                    this.RaisePropertyChanged("EmpRoleRt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.PartnerTable Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.ResourceCalTable ResourceCal {
            get {
                return this.ResourceCalField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCalField, value) != true)) {
                    this.ResourceCalField = value;
                    this.RaisePropertyChanged("ResourceCal");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicWAS.Epicor.EmpBasicSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpBasicTableset : EpicWAS.Epicor.EmpBasicSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicTable EmpBasicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchTable EmpBasicAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpCalTable EmpCalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateTable EmpLabExpRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleTable EmpRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtTable EmpRoleRtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EntityGLCTable EntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.PartnerTable PartnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ResourceCalTable ResourceCalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTable EmpBasic {
            get {
                return this.EmpBasicField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicField, value) != true)) {
                    this.EmpBasicField = value;
                    this.RaisePropertyChanged("EmpBasic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchTable EmpBasicAttch {
            get {
                return this.EmpBasicAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicAttchField, value) != true)) {
                    this.EmpBasicAttchField = value;
                    this.RaisePropertyChanged("EmpBasicAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpCalTable EmpCal {
            get {
                return this.EmpCalField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCalField, value) != true)) {
                    this.EmpCalField = value;
                    this.RaisePropertyChanged("EmpCal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateTable EmpLabExpRate {
            get {
                return this.EmpLabExpRateField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpLabExpRateField, value) != true)) {
                    this.EmpLabExpRateField = value;
                    this.RaisePropertyChanged("EmpLabExpRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleTable EmpRole {
            get {
                return this.EmpRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpRoleField, value) != true)) {
                    this.EmpRoleField = value;
                    this.RaisePropertyChanged("EmpRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtTable EmpRoleRt {
            get {
                return this.EmpRoleRtField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpRoleRtField, value) != true)) {
                    this.EmpRoleRtField = value;
                    this.RaisePropertyChanged("EmpRoleRt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EntityGLCTable EntityGLC {
            get {
                return this.EntityGLCField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityGLCField, value) != true)) {
                    this.EntityGLCField = value;
                    this.RaisePropertyChanged("EntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.PartnerTable Partner {
            get {
                return this.PartnerField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerField, value) != true)) {
                    this.PartnerField = value;
                    this.RaisePropertyChanged("Partner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.ResourceCalTable ResourceCal {
            get {
                return this.ResourceCalField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCalField, value) != true)) {
                    this.ResourceCalField = value;
                    this.RaisePropertyChanged("ResourceCal");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.EmpBasicSvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpBasicTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpBasicRow")]
    [System.SerializableAttribute()]
    public class EmpBasicTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpBasicRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpBasicAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpBasicAttchRow")]
    [System.SerializableAttribute()]
    public class EmpBasicAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpCalTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpCalRow")]
    [System.SerializableAttribute()]
    public class EmpCalTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpCalRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpLabExpRateTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpLabExpRateRow")]
    [System.SerializableAttribute()]
    public class EmpLabExpRateTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpRoleTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpRoleRow")]
    [System.SerializableAttribute()]
    public class EmpRoleTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpRoleRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpRoleRtTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpRoleRtRow")]
    [System.SerializableAttribute()]
    public class EmpRoleRtTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EntityGLCTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EntityGLCRow")]
    [System.SerializableAttribute()]
    public class EntityGLCTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EntityGLCRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartnerTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartnerRow")]
    [System.SerializableAttribute()]
    public class PartnerTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.PartnerRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ResourceCalTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ResourceCalRow")]
    [System.SerializableAttribute()]
    public class ResourceCalTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.ResourceCalRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpCalTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpCalRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EntityGLCTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EntityGLCRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.PartnerTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.PartnerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.PartnerRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ResourceCalTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ResourceCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ResourceCalRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorExceptionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionTableColumn))]
    public partial class ExtensionRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.PartnerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ResourceCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EntityGLCRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.PartnerRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ResourceCalRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.EmpBasicSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpBasicRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AlertFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowAsAltRemitToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowDirLbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowIndirectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowProductionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowSetupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COASegReferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEnterIndirectTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEnterProductionTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEnterProjectTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEnterServiceTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanEnterSetupTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanOverrideAllocationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanOverrideJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanReportNCQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanReportQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanReportScrapQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanRequestMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CnvEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompanySendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContractEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DcdUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultClaimCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultExpCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultIndirectCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefaultLaborHrsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultLaborTypePseudoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefaultPMUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultResourceGrpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DefaultTaxIncludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultTaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultTimeTypCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DepartureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisallowTimeEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmgContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmgPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableExpenseSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EnrollmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseAdvReqAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseAdvReqAutoApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseAdvReqWFGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseAutoApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseDisableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseEntryAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseRestrictEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpenseVendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseVendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseWFGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalMESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExternalMESLastSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalMESSyncRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FoundPayrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FoundPayrollUserAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HCMEnabledAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHCMAllowedByEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LaborRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MaterialHandlerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileUserPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PRSetupReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PayrollField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayrollValuesForHCMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayrollValuesForHCMDspField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PerConIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitAttributeSqcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitCalibrationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitCavitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitDownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitHelpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitJobControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitMachinePmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitManualSqcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitMaterialLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitNextJobControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitPercentRegrindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitPreferencesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitSaveProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitScrapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitSetupMaterialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitToolPmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitVariableSqcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgInboundAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgInventoryAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgManufacturingAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgMasterMixedPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgOutboundAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgQualityAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgSuppressPrintMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProductionWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGrpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServTechField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SetShopLoadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipRecvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShopSupervisorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupervisorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupervisorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncAddressToPerConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncEmailToPerConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncNameToPerConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SyncPhoneToPerConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeAutoApproveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeDisableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeRestrictEntryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeWFGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIDNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameInJDFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WarehouseManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlertFlag {
            get {
                return this.AlertFlagField;
            }
            set {
                if ((this.AlertFlagField.Equals(value) != true)) {
                    this.AlertFlagField = value;
                    this.RaisePropertyChanged("AlertFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowAsAltRemitTo {
            get {
                return this.AllowAsAltRemitToField;
            }
            set {
                if ((this.AllowAsAltRemitToField.Equals(value) != true)) {
                    this.AllowAsAltRemitToField = value;
                    this.RaisePropertyChanged("AllowAsAltRemitTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDirLbr {
            get {
                return this.AllowDirLbrField;
            }
            set {
                if ((this.AllowDirLbrField.Equals(value) != true)) {
                    this.AllowDirLbrField = value;
                    this.RaisePropertyChanged("AllowDirLbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowIndirect {
            get {
                return this.AllowIndirectField;
            }
            set {
                if ((this.AllowIndirectField.Equals(value) != true)) {
                    this.AllowIndirectField = value;
                    this.RaisePropertyChanged("AllowIndirect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowProduction {
            get {
                return this.AllowProductionField;
            }
            set {
                if ((this.AllowProductionField.Equals(value) != true)) {
                    this.AllowProductionField = value;
                    this.RaisePropertyChanged("AllowProduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowProject {
            get {
                return this.AllowProjectField;
            }
            set {
                if ((this.AllowProjectField.Equals(value) != true)) {
                    this.AllowProjectField = value;
                    this.RaisePropertyChanged("AllowProject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowService {
            get {
                return this.AllowServiceField;
            }
            set {
                if ((this.AllowServiceField.Equals(value) != true)) {
                    this.AllowServiceField = value;
                    this.RaisePropertyChanged("AllowService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowSetup {
            get {
                return this.AllowSetupField;
            }
            set {
                if ((this.AllowSetupField.Equals(value) != true)) {
                    this.AllowSetupField = value;
                    this.RaisePropertyChanged("AllowSetup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COASegReferences {
            get {
                return this.COASegReferencesField;
            }
            set {
                if ((object.ReferenceEquals(this.COASegReferencesField, value) != true)) {
                    this.COASegReferencesField = value;
                    this.RaisePropertyChanged("COASegReferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalendarID {
            get {
                return this.CalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarIDField, value) != true)) {
                    this.CalendarIDField = value;
                    this.RaisePropertyChanged("CalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEnterIndirectTime {
            get {
                return this.CanEnterIndirectTimeField;
            }
            set {
                if ((this.CanEnterIndirectTimeField.Equals(value) != true)) {
                    this.CanEnterIndirectTimeField = value;
                    this.RaisePropertyChanged("CanEnterIndirectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEnterProductionTime {
            get {
                return this.CanEnterProductionTimeField;
            }
            set {
                if ((this.CanEnterProductionTimeField.Equals(value) != true)) {
                    this.CanEnterProductionTimeField = value;
                    this.RaisePropertyChanged("CanEnterProductionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEnterProjectTime {
            get {
                return this.CanEnterProjectTimeField;
            }
            set {
                if ((this.CanEnterProjectTimeField.Equals(value) != true)) {
                    this.CanEnterProjectTimeField = value;
                    this.RaisePropertyChanged("CanEnterProjectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEnterServiceTime {
            get {
                return this.CanEnterServiceTimeField;
            }
            set {
                if ((this.CanEnterServiceTimeField.Equals(value) != true)) {
                    this.CanEnterServiceTimeField = value;
                    this.RaisePropertyChanged("CanEnterServiceTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanEnterSetupTime {
            get {
                return this.CanEnterSetupTimeField;
            }
            set {
                if ((this.CanEnterSetupTimeField.Equals(value) != true)) {
                    this.CanEnterSetupTimeField = value;
                    this.RaisePropertyChanged("CanEnterSetupTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanOverrideAllocations {
            get {
                return this.CanOverrideAllocationsField;
            }
            set {
                if ((this.CanOverrideAllocationsField.Equals(value) != true)) {
                    this.CanOverrideAllocationsField = value;
                    this.RaisePropertyChanged("CanOverrideAllocations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanOverrideJob {
            get {
                return this.CanOverrideJobField;
            }
            set {
                if ((this.CanOverrideJobField.Equals(value) != true)) {
                    this.CanOverrideJobField = value;
                    this.RaisePropertyChanged("CanOverrideJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanReportNCQty {
            get {
                return this.CanReportNCQtyField;
            }
            set {
                if ((this.CanReportNCQtyField.Equals(value) != true)) {
                    this.CanReportNCQtyField = value;
                    this.RaisePropertyChanged("CanReportNCQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanReportQty {
            get {
                return this.CanReportQtyField;
            }
            set {
                if ((this.CanReportQtyField.Equals(value) != true)) {
                    this.CanReportQtyField = value;
                    this.RaisePropertyChanged("CanReportQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanReportScrapQty {
            get {
                return this.CanReportScrapQtyField;
            }
            set {
                if ((this.CanReportScrapQtyField.Equals(value) != true)) {
                    this.CanReportScrapQtyField = value;
                    this.RaisePropertyChanged("CanReportScrapQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanRequestMaterial {
            get {
                return this.CanRequestMaterialField;
            }
            set {
                if ((this.CanRequestMaterialField.Equals(value) != true)) {
                    this.CanRequestMaterialField = value;
                    this.RaisePropertyChanged("CanRequestMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CnvEmpID {
            get {
                return this.CnvEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CnvEmpIDField, value) != true)) {
                    this.CnvEmpIDField = value;
                    this.RaisePropertyChanged("CnvEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CompanySendToFSA {
            get {
                return this.CompanySendToFSAField;
            }
            set {
                if ((this.CompanySendToFSAField.Equals(value) != true)) {
                    this.CompanySendToFSAField = value;
                    this.RaisePropertyChanged("CompanySendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractEmp {
            get {
                return this.ContractEmpField;
            }
            set {
                if ((this.ContractEmpField.Equals(value) != true)) {
                    this.ContractEmpField = value;
                    this.RaisePropertyChanged("ContractEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryNum {
            get {
                return this.CountryNumField;
            }
            set {
                if ((this.CountryNumField.Equals(value) != true)) {
                    this.CountryNumField = value;
                    this.RaisePropertyChanged("CountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryNumDescription {
            get {
                return this.CountryNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNumDescriptionField, value) != true)) {
                    this.CountryNumDescriptionField = value;
                    this.RaisePropertyChanged("CountryNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DcdUserID {
            get {
                return this.DcdUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DcdUserIDField, value) != true)) {
                    this.DcdUserIDField = value;
                    this.RaisePropertyChanged("DcdUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultClaimCurrencyCode {
            get {
                return this.DefaultClaimCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultClaimCurrencyCodeField, value) != true)) {
                    this.DefaultClaimCurrencyCodeField = value;
                    this.RaisePropertyChanged("DefaultClaimCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultExpCurrencyCode {
            get {
                return this.DefaultExpCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultExpCurrencyCodeField, value) != true)) {
                    this.DefaultExpCurrencyCodeField = value;
                    this.RaisePropertyChanged("DefaultExpCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultExpenseCode {
            get {
                return this.DefaultExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultExpenseCodeField, value) != true)) {
                    this.DefaultExpenseCodeField = value;
                    this.RaisePropertyChanged("DefaultExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultIndirectCode {
            get {
                return this.DefaultIndirectCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultIndirectCodeField, value) != true)) {
                    this.DefaultIndirectCodeField = value;
                    this.RaisePropertyChanged("DefaultIndirectCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefaultLaborHrs {
            get {
                return this.DefaultLaborHrsField;
            }
            set {
                if ((this.DefaultLaborHrsField.Equals(value) != true)) {
                    this.DefaultLaborHrsField = value;
                    this.RaisePropertyChanged("DefaultLaborHrs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultLaborTypePseudo {
            get {
                return this.DefaultLaborTypePseudoField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultLaborTypePseudoField, value) != true)) {
                    this.DefaultLaborTypePseudoField = value;
                    this.RaisePropertyChanged("DefaultLaborTypePseudo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultPMUID {
            get {
                return this.DefaultPMUIDField;
            }
            set {
                if ((this.DefaultPMUIDField.Equals(value) != true)) {
                    this.DefaultPMUIDField = value;
                    this.RaisePropertyChanged("DefaultPMUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultResourceGrpID {
            get {
                return this.DefaultResourceGrpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultResourceGrpIDField, value) != true)) {
                    this.DefaultResourceGrpIDField = value;
                    this.RaisePropertyChanged("DefaultResourceGrpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultResourceID {
            get {
                return this.DefaultResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultResourceIDField, value) != true)) {
                    this.DefaultResourceIDField = value;
                    this.RaisePropertyChanged("DefaultResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DefaultTaxIncluded {
            get {
                return this.DefaultTaxIncludedField;
            }
            set {
                if ((this.DefaultTaxIncludedField.Equals(value) != true)) {
                    this.DefaultTaxIncludedField = value;
                    this.RaisePropertyChanged("DefaultTaxIncluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultTaxRegionCode {
            get {
                return this.DefaultTaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTaxRegionCodeField, value) != true)) {
                    this.DefaultTaxRegionCodeField = value;
                    this.RaisePropertyChanged("DefaultTaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultTimeTypCd {
            get {
                return this.DefaultTimeTypCdField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultTimeTypCdField, value) != true)) {
                    this.DefaultTimeTypCdField = value;
                    this.RaisePropertyChanged("DefaultTimeTypCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentDescription {
            get {
                return this.DepartmentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentDescriptionField, value) != true)) {
                    this.DepartmentDescriptionField = value;
                    this.RaisePropertyChanged("DepartmentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DepartureDate {
            get {
                return this.DepartureDateField;
            }
            set {
                if ((this.DepartureDateField.Equals(value) != true)) {
                    this.DepartureDateField = value;
                    this.RaisePropertyChanged("DepartureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisallowTimeEntry {
            get {
                return this.DisallowTimeEntryField;
            }
            set {
                if ((this.DisallowTimeEntryField.Equals(value) != true)) {
                    this.DisallowTimeEntryField = value;
                    this.RaisePropertyChanged("DisallowTimeEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmgContact {
            get {
                return this.EmgContactField;
            }
            set {
                if ((object.ReferenceEquals(this.EmgContactField, value) != true)) {
                    this.EmgContactField = value;
                    this.RaisePropertyChanged("EmgContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmgPhone {
            get {
                return this.EmgPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.EmgPhoneField, value) != true)) {
                    this.EmgPhoneField = value;
                    this.RaisePropertyChanged("EmgPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpStatus {
            get {
                return this.EmpStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpStatusField, value) != true)) {
                    this.EmpStatusField = value;
                    this.RaisePropertyChanged("EmpStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableExpenseSupplier {
            get {
                return this.EnableExpenseSupplierField;
            }
            set {
                if ((this.EnableExpenseSupplierField.Equals(value) != true)) {
                    this.EnableExpenseSupplierField = value;
                    this.RaisePropertyChanged("EnableExpenseSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EnrollmentDate {
            get {
                return this.EnrollmentDateField;
            }
            set {
                if ((this.EnrollmentDateField.Equals(value) != true)) {
                    this.EnrollmentDateField = value;
                    this.RaisePropertyChanged("EnrollmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseAdvReqAllowed {
            get {
                return this.ExpenseAdvReqAllowedField;
            }
            set {
                if ((this.ExpenseAdvReqAllowedField.Equals(value) != true)) {
                    this.ExpenseAdvReqAllowedField = value;
                    this.RaisePropertyChanged("ExpenseAdvReqAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseAdvReqAutoApprove {
            get {
                return this.ExpenseAdvReqAutoApproveField;
            }
            set {
                if ((this.ExpenseAdvReqAutoApproveField.Equals(value) != true)) {
                    this.ExpenseAdvReqAutoApproveField = value;
                    this.RaisePropertyChanged("ExpenseAdvReqAutoApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseAdvReqWFGroupID {
            get {
                return this.ExpenseAdvReqWFGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseAdvReqWFGroupIDField, value) != true)) {
                    this.ExpenseAdvReqWFGroupIDField = value;
                    this.RaisePropertyChanged("ExpenseAdvReqWFGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseAutoApprove {
            get {
                return this.ExpenseAutoApproveField;
            }
            set {
                if ((this.ExpenseAutoApproveField.Equals(value) != true)) {
                    this.ExpenseAutoApproveField = value;
                    this.RaisePropertyChanged("ExpenseAutoApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCodeDescription {
            get {
                return this.ExpenseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeDescriptionField, value) != true)) {
                    this.ExpenseCodeDescriptionField = value;
                    this.RaisePropertyChanged("ExpenseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseDescription {
            get {
                return this.ExpenseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseDescriptionField, value) != true)) {
                    this.ExpenseDescriptionField = value;
                    this.RaisePropertyChanged("ExpenseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseDisableCreate {
            get {
                return this.ExpenseDisableCreateField;
            }
            set {
                if ((this.ExpenseDisableCreateField.Equals(value) != true)) {
                    this.ExpenseDisableCreateField = value;
                    this.RaisePropertyChanged("ExpenseDisableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseEntryAllowed {
            get {
                return this.ExpenseEntryAllowedField;
            }
            set {
                if ((this.ExpenseEntryAllowedField.Equals(value) != true)) {
                    this.ExpenseEntryAllowedField = value;
                    this.RaisePropertyChanged("ExpenseEntryAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseRestrictEntry {
            get {
                return this.ExpenseRestrictEntryField;
            }
            set {
                if ((this.ExpenseRestrictEntryField.Equals(value) != true)) {
                    this.ExpenseRestrictEntryField = value;
                    this.RaisePropertyChanged("ExpenseRestrictEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpenseVendorNum {
            get {
                return this.ExpenseVendorNumField;
            }
            set {
                if ((this.ExpenseVendorNumField.Equals(value) != true)) {
                    this.ExpenseVendorNumField = value;
                    this.RaisePropertyChanged("ExpenseVendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumAddress1 {
            get {
                return this.ExpenseVendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumAddress1Field, value) != true)) {
                    this.ExpenseVendorNumAddress1Field = value;
                    this.RaisePropertyChanged("ExpenseVendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumAddress2 {
            get {
                return this.ExpenseVendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumAddress2Field, value) != true)) {
                    this.ExpenseVendorNumAddress2Field = value;
                    this.RaisePropertyChanged("ExpenseVendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumAddress3 {
            get {
                return this.ExpenseVendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumAddress3Field, value) != true)) {
                    this.ExpenseVendorNumAddress3Field = value;
                    this.RaisePropertyChanged("ExpenseVendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumCity {
            get {
                return this.ExpenseVendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumCityField, value) != true)) {
                    this.ExpenseVendorNumCityField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumCountry {
            get {
                return this.ExpenseVendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumCountryField, value) != true)) {
                    this.ExpenseVendorNumCountryField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumCurrencyCode {
            get {
                return this.ExpenseVendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumCurrencyCodeField, value) != true)) {
                    this.ExpenseVendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumDefaultFOB {
            get {
                return this.ExpenseVendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumDefaultFOBField, value) != true)) {
                    this.ExpenseVendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumName {
            get {
                return this.ExpenseVendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumNameField, value) != true)) {
                    this.ExpenseVendorNumNameField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumState {
            get {
                return this.ExpenseVendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumStateField, value) != true)) {
                    this.ExpenseVendorNumStateField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumTermsCode {
            get {
                return this.ExpenseVendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumTermsCodeField, value) != true)) {
                    this.ExpenseVendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumVendorID {
            get {
                return this.ExpenseVendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumVendorIDField, value) != true)) {
                    this.ExpenseVendorNumVendorIDField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseVendorNumZIP {
            get {
                return this.ExpenseVendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseVendorNumZIPField, value) != true)) {
                    this.ExpenseVendorNumZIPField = value;
                    this.RaisePropertyChanged("ExpenseVendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseWFGroupID {
            get {
                return this.ExpenseWFGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseWFGroupIDField, value) != true)) {
                    this.ExpenseWFGroupIDField = value;
                    this.RaisePropertyChanged("ExpenseWFGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalMES {
            get {
                return this.ExternalMESField;
            }
            set {
                if ((this.ExternalMESField.Equals(value) != true)) {
                    this.ExternalMESField = value;
                    this.RaisePropertyChanged("ExternalMES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExternalMESLastSync {
            get {
                return this.ExternalMESLastSyncField;
            }
            set {
                if ((this.ExternalMESLastSyncField.Equals(value) != true)) {
                    this.ExternalMESLastSyncField = value;
                    this.RaisePropertyChanged("ExternalMESLastSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalMESSyncRequired {
            get {
                return this.ExternalMESSyncRequiredField;
            }
            set {
                if ((this.ExternalMESSyncRequiredField.Equals(value) != true)) {
                    this.ExternalMESSyncRequiredField = value;
                    this.RaisePropertyChanged("ExternalMESSyncRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FoundPayroll {
            get {
                return this.FoundPayrollField;
            }
            set {
                if ((this.FoundPayrollField.Equals(value) != true)) {
                    this.FoundPayrollField = value;
                    this.RaisePropertyChanged("FoundPayroll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FoundPayrollUserAllowed {
            get {
                return this.FoundPayrollUserAllowedField;
            }
            set {
                if ((this.FoundPayrollUserAllowedField.Equals(value) != true)) {
                    this.FoundPayrollUserAllowedField = value;
                    this.RaisePropertyChanged("FoundPayrollUserAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HCMEnabledAt {
            get {
                return this.HCMEnabledAtField;
            }
            set {
                if ((object.ReferenceEquals(this.HCMEnabledAtField, value) != true)) {
                    this.HCMEnabledAtField = value;
                    this.RaisePropertyChanged("HCMEnabledAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDDocument {
            get {
                return this.IDDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.IDDocumentField, value) != true)) {
                    this.IDDocumentField = value;
                    this.RaisePropertyChanged("IDDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageID {
            get {
                return this.ImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIDField, value) != true)) {
                    this.ImageIDField = value;
                    this.RaisePropertyChanged("ImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHCMAllowedByEmp {
            get {
                return this.IsHCMAllowedByEmpField;
            }
            set {
                if ((this.IsHCMAllowedByEmpField.Equals(value) != true)) {
                    this.IsHCMAllowedByEmpField = value;
                    this.RaisePropertyChanged("IsHCMAllowedByEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDept {
            get {
                return this.JCDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptField, value) != true)) {
                    this.JCDeptField = value;
                    this.RaisePropertyChanged("JCDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDeptDescription {
            get {
                return this.JCDeptDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptDescriptionField, value) != true)) {
                    this.JCDeptDescriptionField = value;
                    this.RaisePropertyChanged("JCDeptDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LaborRate {
            get {
                return this.LaborRateField;
            }
            set {
                if ((this.LaborRateField.Equals(value) != true)) {
                    this.LaborRateField = value;
                    this.RaisePropertyChanged("LaborRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineDescription {
            get {
                return this.MachineDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineDescriptionField, value) != true)) {
                    this.MachineDescriptionField = value;
                    this.RaisePropertyChanged("MachineDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MaterialHandler {
            get {
                return this.MaterialHandlerField;
            }
            set {
                if ((this.MaterialHandlerField.Equals(value) != true)) {
                    this.MaterialHandlerField = value;
                    this.RaisePropertyChanged("MaterialHandler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileResourceID {
            get {
                return this.MobileResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileResourceIDField, value) != true)) {
                    this.MobileResourceIDField = value;
                    this.RaisePropertyChanged("MobileResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileUserPassword {
            get {
                return this.MobileUserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileUserPasswordField, value) != true)) {
                    this.MobileUserPasswordField = value;
                    this.RaisePropertyChanged("MobileUserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PRSetupReq {
            get {
                return this.PRSetupReqField;
            }
            set {
                if ((this.PRSetupReqField.Equals(value) != true)) {
                    this.PRSetupReqField = value;
                    this.RaisePropertyChanged("PRSetupReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Payroll {
            get {
                return this.PayrollField;
            }
            set {
                if ((this.PayrollField.Equals(value) != true)) {
                    this.PayrollField = value;
                    this.RaisePropertyChanged("Payroll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayrollValuesForHCM {
            get {
                return this.PayrollValuesForHCMField;
            }
            set {
                if ((object.ReferenceEquals(this.PayrollValuesForHCMField, value) != true)) {
                    this.PayrollValuesForHCMField = value;
                    this.RaisePropertyChanged("PayrollValuesForHCM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayrollValuesForHCMDsp {
            get {
                return this.PayrollValuesForHCMDspField;
            }
            set {
                if ((object.ReferenceEquals(this.PayrollValuesForHCMDspField, value) != true)) {
                    this.PayrollValuesForHCMDspField = value;
                    this.RaisePropertyChanged("PayrollValuesForHCMDsp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PerConID {
            get {
                return this.PerConIDField;
            }
            set {
                if ((this.PerConIDField.Equals(value) != true)) {
                    this.PerConIDField = value;
                    this.RaisePropertyChanged("PerConID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerConName {
            get {
                return this.PerConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PerConNameField, value) != true)) {
                    this.PerConNameField = value;
                    this.RaisePropertyChanged("PerConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitAttributeSqc {
            get {
                return this.PermitAttributeSqcField;
            }
            set {
                if ((this.PermitAttributeSqcField.Equals(value) != true)) {
                    this.PermitAttributeSqcField = value;
                    this.RaisePropertyChanged("PermitAttributeSqc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitCalibration {
            get {
                return this.PermitCalibrationField;
            }
            set {
                if ((this.PermitCalibrationField.Equals(value) != true)) {
                    this.PermitCalibrationField = value;
                    this.RaisePropertyChanged("PermitCalibration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitCavities {
            get {
                return this.PermitCavitiesField;
            }
            set {
                if ((this.PermitCavitiesField.Equals(value) != true)) {
                    this.PermitCavitiesField = value;
                    this.RaisePropertyChanged("PermitCavities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitDown {
            get {
                return this.PermitDownField;
            }
            set {
                if ((this.PermitDownField.Equals(value) != true)) {
                    this.PermitDownField = value;
                    this.RaisePropertyChanged("PermitDown");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitHelp {
            get {
                return this.PermitHelpField;
            }
            set {
                if ((this.PermitHelpField.Equals(value) != true)) {
                    this.PermitHelpField = value;
                    this.RaisePropertyChanged("PermitHelp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitJobControl {
            get {
                return this.PermitJobControlField;
            }
            set {
                if ((this.PermitJobControlField.Equals(value) != true)) {
                    this.PermitJobControlField = value;
                    this.RaisePropertyChanged("PermitJobControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitLanguage {
            get {
                return this.PermitLanguageField;
            }
            set {
                if ((this.PermitLanguageField.Equals(value) != true)) {
                    this.PermitLanguageField = value;
                    this.RaisePropertyChanged("PermitLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitMachinePm {
            get {
                return this.PermitMachinePmField;
            }
            set {
                if ((this.PermitMachinePmField.Equals(value) != true)) {
                    this.PermitMachinePmField = value;
                    this.RaisePropertyChanged("PermitMachinePm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitManualSqc {
            get {
                return this.PermitManualSqcField;
            }
            set {
                if ((this.PermitManualSqcField.Equals(value) != true)) {
                    this.PermitManualSqcField = value;
                    this.RaisePropertyChanged("PermitManualSqc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitMaterialLot {
            get {
                return this.PermitMaterialLotField;
            }
            set {
                if ((this.PermitMaterialLotField.Equals(value) != true)) {
                    this.PermitMaterialLotField = value;
                    this.RaisePropertyChanged("PermitMaterialLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitNextJobControl {
            get {
                return this.PermitNextJobControlField;
            }
            set {
                if ((this.PermitNextJobControlField.Equals(value) != true)) {
                    this.PermitNextJobControlField = value;
                    this.RaisePropertyChanged("PermitNextJobControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitPercentRegrind {
            get {
                return this.PermitPercentRegrindField;
            }
            set {
                if ((this.PermitPercentRegrindField.Equals(value) != true)) {
                    this.PermitPercentRegrindField = value;
                    this.RaisePropertyChanged("PermitPercentRegrind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitPreferences {
            get {
                return this.PermitPreferencesField;
            }
            set {
                if ((this.PermitPreferencesField.Equals(value) != true)) {
                    this.PermitPreferencesField = value;
                    this.RaisePropertyChanged("PermitPreferences");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitSaveProfile {
            get {
                return this.PermitSaveProfileField;
            }
            set {
                if ((this.PermitSaveProfileField.Equals(value) != true)) {
                    this.PermitSaveProfileField = value;
                    this.RaisePropertyChanged("PermitSaveProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitScrap {
            get {
                return this.PermitScrapField;
            }
            set {
                if ((this.PermitScrapField.Equals(value) != true)) {
                    this.PermitScrapField = value;
                    this.RaisePropertyChanged("PermitScrap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitSetupMaterial {
            get {
                return this.PermitSetupMaterialField;
            }
            set {
                if ((this.PermitSetupMaterialField.Equals(value) != true)) {
                    this.PermitSetupMaterialField = value;
                    this.RaisePropertyChanged("PermitSetupMaterial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitToolPm {
            get {
                return this.PermitToolPmField;
            }
            set {
                if ((this.PermitToolPmField.Equals(value) != true)) {
                    this.PermitToolPmField = value;
                    this.RaisePropertyChanged("PermitToolPm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitVariableSqc {
            get {
                return this.PermitVariableSqcField;
            }
            set {
                if ((this.PermitVariableSqcField.Equals(value) != true)) {
                    this.PermitVariableSqcField = value;
                    this.RaisePropertyChanged("PermitVariableSqc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFile {
            get {
                return this.PhotoFileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFileField, value) != true)) {
                    this.PhotoFileField = value;
                    this.RaisePropertyChanged("PhotoFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFilePath {
            get {
                return this.PhotoFilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFilePathField, value) != true)) {
                    this.PhotoFilePathField = value;
                    this.RaisePropertyChanged("PhotoFilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgInboundAllowed {
            get {
                return this.PkgInboundAllowedField;
            }
            set {
                if ((this.PkgInboundAllowedField.Equals(value) != true)) {
                    this.PkgInboundAllowedField = value;
                    this.RaisePropertyChanged("PkgInboundAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgInventoryAllowed {
            get {
                return this.PkgInventoryAllowedField;
            }
            set {
                if ((this.PkgInventoryAllowedField.Equals(value) != true)) {
                    this.PkgInventoryAllowedField = value;
                    this.RaisePropertyChanged("PkgInventoryAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgManufacturingAllowed {
            get {
                return this.PkgManufacturingAllowedField;
            }
            set {
                if ((this.PkgManufacturingAllowedField.Equals(value) != true)) {
                    this.PkgManufacturingAllowedField = value;
                    this.RaisePropertyChanged("PkgManufacturingAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgMasterMixedPrint {
            get {
                return this.PkgMasterMixedPrintField;
            }
            set {
                if ((this.PkgMasterMixedPrintField.Equals(value) != true)) {
                    this.PkgMasterMixedPrintField = value;
                    this.RaisePropertyChanged("PkgMasterMixedPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgOutboundAllowed {
            get {
                return this.PkgOutboundAllowedField;
            }
            set {
                if ((this.PkgOutboundAllowedField.Equals(value) != true)) {
                    this.PkgOutboundAllowedField = value;
                    this.RaisePropertyChanged("PkgOutboundAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgQualityAllowed {
            get {
                return this.PkgQualityAllowedField;
            }
            set {
                if ((this.PkgQualityAllowedField.Equals(value) != true)) {
                    this.PkgQualityAllowedField = value;
                    this.RaisePropertyChanged("PkgQualityAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgSuppressPrintMessages {
            get {
                return this.PkgSuppressPrintMessagesField;
            }
            set {
                if ((this.PkgSuppressPrintMessagesField.Equals(value) != true)) {
                    this.PkgSuppressPrintMessagesField = value;
                    this.RaisePropertyChanged("PkgSuppressPrintMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProductionWorker {
            get {
                return this.ProductionWorkerField;
            }
            set {
                if ((this.ProductionWorkerField.Equals(value) != true)) {
                    this.ProductionWorkerField = value;
                    this.RaisePropertyChanged("ProductionWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGroupDescription {
            get {
                return this.ResourceGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGroupDescriptionField, value) != true)) {
                    this.ResourceGroupDescriptionField = value;
                    this.RaisePropertyChanged("ResourceGroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGrpID {
            get {
                return this.ResourceGrpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGrpIDField, value) != true)) {
                    this.ResourceGrpIDField = value;
                    this.RaisePropertyChanged("ResourceGrpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendToFSA {
            get {
                return this.SendToFSAField;
            }
            set {
                if ((this.SendToFSAField.Equals(value) != true)) {
                    this.SendToFSAField = value;
                    this.RaisePropertyChanged("SendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServTech {
            get {
                return this.ServTechField;
            }
            set {
                if ((this.ServTechField.Equals(value) != true)) {
                    this.ServTechField = value;
                    this.RaisePropertyChanged("ServTech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SetShopLoad {
            get {
                return this.SetShopLoadField;
            }
            set {
                if ((this.SetShopLoadField.Equals(value) != true)) {
                    this.SetShopLoadField = value;
                    this.RaisePropertyChanged("SetShopLoad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftDescription {
            get {
                return this.ShiftDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftDescriptionField, value) != true)) {
                    this.ShiftDescriptionField = value;
                    this.RaisePropertyChanged("ShiftDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftEndTime {
            get {
                return this.ShiftEndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftEndTimeField, value) != true)) {
                    this.ShiftEndTimeField = value;
                    this.RaisePropertyChanged("ShiftEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftStartTime {
            get {
                return this.ShiftStartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftStartTimeField, value) != true)) {
                    this.ShiftStartTimeField = value;
                    this.RaisePropertyChanged("ShiftStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipRecv {
            get {
                return this.ShipRecvField;
            }
            set {
                if ((this.ShipRecvField.Equals(value) != true)) {
                    this.ShipRecvField = value;
                    this.RaisePropertyChanged("ShipRecv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShopSupervisor {
            get {
                return this.ShopSupervisorField;
            }
            set {
                if ((this.ShopSupervisorField.Equals(value) != true)) {
                    this.ShopSupervisorField = value;
                    this.RaisePropertyChanged("ShopSupervisor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupervisorID {
            get {
                return this.SupervisorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorIDField, value) != true)) {
                    this.SupervisorIDField = value;
                    this.RaisePropertyChanged("SupervisorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupervisorName {
            get {
                return this.SupervisorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorNameField, value) != true)) {
                    this.SupervisorNameField = value;
                    this.RaisePropertyChanged("SupervisorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncAddressToPerCon {
            get {
                return this.SyncAddressToPerConField;
            }
            set {
                if ((this.SyncAddressToPerConField.Equals(value) != true)) {
                    this.SyncAddressToPerConField = value;
                    this.RaisePropertyChanged("SyncAddressToPerCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncEmailToPerCon {
            get {
                return this.SyncEmailToPerConField;
            }
            set {
                if ((this.SyncEmailToPerConField.Equals(value) != true)) {
                    this.SyncEmailToPerConField = value;
                    this.RaisePropertyChanged("SyncEmailToPerCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncNameToPerCon {
            get {
                return this.SyncNameToPerConField;
            }
            set {
                if ((this.SyncNameToPerConField.Equals(value) != true)) {
                    this.SyncNameToPerConField = value;
                    this.RaisePropertyChanged("SyncNameToPerCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SyncPhoneToPerCon {
            get {
                return this.SyncPhoneToPerConField;
            }
            set {
                if ((this.SyncPhoneToPerConField.Equals(value) != true)) {
                    this.SyncPhoneToPerConField = value;
                    this.RaisePropertyChanged("SyncPhoneToPerCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeAutoApprove {
            get {
                return this.TimeAutoApproveField;
            }
            set {
                if ((this.TimeAutoApproveField.Equals(value) != true)) {
                    this.TimeAutoApproveField = value;
                    this.RaisePropertyChanged("TimeAutoApprove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeDisableCreate {
            get {
                return this.TimeDisableCreateField;
            }
            set {
                if ((this.TimeDisableCreateField.Equals(value) != true)) {
                    this.TimeDisableCreateField = value;
                    this.RaisePropertyChanged("TimeDisableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeRestrictEntry {
            get {
                return this.TimeRestrictEntryField;
            }
            set {
                if ((this.TimeRestrictEntryField.Equals(value) != true)) {
                    this.TimeRestrictEntryField = value;
                    this.RaisePropertyChanged("TimeRestrictEntry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeWFGroupID {
            get {
                return this.TimeWFGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeWFGroupIDField, value) != true)) {
                    this.TimeWFGroupIDField = value;
                    this.RaisePropertyChanged("TimeWFGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserIDName {
            get {
                return this.UserIDNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDNameField, value) != true)) {
                    this.UserIDNameField = value;
                    this.RaisePropertyChanged("UserIDName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserNameInJDF {
            get {
                return this.UserNameInJDFField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameInJDFField, value) != true)) {
                    this.UserNameInJDFField = value;
                    this.RaisePropertyChanged("UserNameInJDF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WarehouseManager {
            get {
                return this.WarehouseManagerField;
            }
            set {
                if ((this.WarehouseManagerField.Equals(value) != true)) {
                    this.WarehouseManagerField = value;
                    this.RaisePropertyChanged("WarehouseManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpBasicAttchRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpCalRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpCalRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalendarIDDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpCalRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FromEffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ToEffectiveDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalendarID {
            get {
                return this.CalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarIDField, value) != true)) {
                    this.CalendarIDField = value;
                    this.RaisePropertyChanged("CalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalendarIDDescription {
            get {
                return this.CalendarIDDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarIDDescriptionField, value) != true)) {
                    this.CalendarIDDescriptionField = value;
                    this.RaisePropertyChanged("CalendarIDDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpCalRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FromEffectiveDate {
            get {
                return this.FromEffectiveDateField;
            }
            set {
                if ((this.FromEffectiveDateField.Equals(value) != true)) {
                    this.FromEffectiveDateField = value;
                    this.RaisePropertyChanged("FromEffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ToEffectiveDate {
            get {
                return this.ToEffectiveDateField;
            }
            set {
                if ((this.ToEffectiveDateField.Equals(value) != true)) {
                    this.ToEffectiveDateField = value;
                    this.RaisePropertyChanged("ToEffectiveDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpLabExpRateRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpLabExpRateRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateMultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpLabExpRateRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicName {
            get {
                return this.EmpBasicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicNameField, value) != true)) {
                    this.EmpBasicNameField = value;
                    this.RaisePropertyChanged("EmpBasicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedRate {
            get {
                return this.FixedRateField;
            }
            set {
                if ((this.FixedRateField.Equals(value) != true)) {
                    this.FixedRateField = value;
                    this.RaisePropertyChanged("FixedRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RateMultiplier {
            get {
                return this.RateMultiplierField;
            }
            set {
                if ((this.RateMultiplierField.Equals(value) != true)) {
                    this.RateMultiplierField = value;
                    this.RaisePropertyChanged("RateMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateType {
            get {
                return this.RateTypeField;
            }
            set {
                if ((this.RateTypeField.Equals(value) != true)) {
                    this.RateTypeField = value;
                    this.RaisePropertyChanged("RateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpRoleRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpRoleRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpenseApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCdRoleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeApproverField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicFirstName {
            get {
                return this.EmpBasicFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicFirstNameField, value) != true)) {
                    this.EmpBasicFirstNameField = value;
                    this.RaisePropertyChanged("EmpBasicFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicLastName {
            get {
                return this.EmpBasicLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicLastNameField, value) != true)) {
                    this.EmpBasicLastNameField = value;
                    this.RaisePropertyChanged("EmpBasicLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicName {
            get {
                return this.EmpBasicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicNameField, value) != true)) {
                    this.EmpBasicNameField = value;
                    this.RaisePropertyChanged("EmpBasicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExpenseApprover {
            get {
                return this.ExpenseApproverField;
            }
            set {
                if ((this.ExpenseApproverField.Equals(value) != true)) {
                    this.ExpenseApproverField = value;
                    this.RaisePropertyChanged("ExpenseApprover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCd {
            get {
                return this.RoleCdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCdField, value) != true)) {
                    this.RoleCdField = value;
                    this.RaisePropertyChanged("RoleCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCdRoleDescription {
            get {
                return this.RoleCdRoleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCdRoleDescriptionField, value) != true)) {
                    this.RoleCdRoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleCdRoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeApprover {
            get {
                return this.TimeApproverField;
            }
            set {
                if ((this.TimeApproverField.Equals(value) != true)) {
                    this.TimeApproverField = value;
                    this.RaisePropertyChanged("TimeApprover");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpRoleRtRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpRoleRtRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpBasicNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RateEffDteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RateEndDteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCdRoleDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeTypCdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeTypCdDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpRoleRtRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrDesc {
            get {
                return this.CurrencyCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrDescField, value) != true)) {
                    this.CurrencyCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrName {
            get {
                return this.CurrencyCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrNameField, value) != true)) {
                    this.CurrencyCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrSymbol {
            get {
                return this.CurrencyCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrSymbolField, value) != true)) {
                    this.CurrencyCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCurrencyID {
            get {
                return this.CurrencyCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCurrencyIDField, value) != true)) {
                    this.CurrencyCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDocumentDesc {
            get {
                return this.CurrencyDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDocumentDescField, value) != true)) {
                    this.CurrencyDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicFirstName {
            get {
                return this.EmpBasicFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicFirstNameField, value) != true)) {
                    this.EmpBasicFirstNameField = value;
                    this.RaisePropertyChanged("EmpBasicFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicLastName {
            get {
                return this.EmpBasicLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicLastNameField, value) != true)) {
                    this.EmpBasicLastNameField = value;
                    this.RaisePropertyChanged("EmpBasicLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpBasicName {
            get {
                return this.EmpBasicNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpBasicNameField, value) != true)) {
                    this.EmpBasicNameField = value;
                    this.RaisePropertyChanged("EmpBasicName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RateEffDte {
            get {
                return this.RateEffDteField;
            }
            set {
                if ((this.RateEffDteField.Equals(value) != true)) {
                    this.RateEffDteField = value;
                    this.RaisePropertyChanged("RateEffDte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RateEndDte {
            get {
                return this.RateEndDteField;
            }
            set {
                if ((this.RateEndDteField.Equals(value) != true)) {
                    this.RateEndDteField = value;
                    this.RaisePropertyChanged("RateEndDte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCd {
            get {
                return this.RoleCdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCdField, value) != true)) {
                    this.RoleCdField = value;
                    this.RaisePropertyChanged("RoleCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCdRoleDescription {
            get {
                return this.RoleCdRoleDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCdRoleDescriptionField, value) != true)) {
                    this.RoleCdRoleDescriptionField = value;
                    this.RaisePropertyChanged("RoleCdRoleDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seq {
            get {
                return this.SeqField;
            }
            set {
                if ((this.SeqField.Equals(value) != true)) {
                    this.SeqField = value;
                    this.RaisePropertyChanged("Seq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeTypCd {
            get {
                return this.TimeTypCdField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeTypCdField, value) != true)) {
                    this.TimeTypCdField = value;
                    this.RaisePropertyChanged("TimeTypCd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeTypCdDescription {
            get {
                return this.TimeTypCdDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeTypCdDescriptionField, value) != true)) {
                    this.TimeTypCdDescriptionField = value;
                    this.RaisePropertyChanged("TimeTypCdDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EntityGLCRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAcctIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CashDeskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChargeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EntityGLCRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeductionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLCntrlTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GLControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalEntityGLCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GlobalLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExternalCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsFilteredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OprTypeCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PIStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerConNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReclassCodeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesCatIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TINField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxTblIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAcctID {
            get {
                return this.BankAcctIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAcctIDField, value) != true)) {
                    this.BankAcctIDField = value;
                    this.RaisePropertyChanged("BankAcctID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFeeID {
            get {
                return this.BankFeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFeeIDField, value) != true)) {
                    this.BankFeeIDField = value;
                    this.RaisePropertyChanged("BankFeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessEntity {
            get {
                return this.BusinessEntityField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessEntityField, value) != true)) {
                    this.BusinessEntityField = value;
                    this.RaisePropertyChanged("BusinessEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CashDeskID {
            get {
                return this.CashDeskIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CashDeskIDField, value) != true)) {
                    this.CashDeskIDField = value;
                    this.RaisePropertyChanged("CashDeskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChargeCode {
            get {
                return this.ChargeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeCodeField, value) != true)) {
                    this.ChargeCodeField = value;
                    this.RaisePropertyChanged("ChargeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassCode {
            get {
                return this.ClassCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassCodeField, value) != true)) {
                    this.ClassCodeField = value;
                    this.RaisePropertyChanged("ClassCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassIDField, value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EntityGLCRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeductionID {
            get {
                return this.DeductionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DeductionIDField, value) != true)) {
                    this.DeductionIDField = value;
                    this.RaisePropertyChanged("DeductionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseCode {
            get {
                return this.ExpenseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseCodeField, value) != true)) {
                    this.ExpenseCodeField = value;
                    this.RaisePropertyChanged("ExpenseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpenseTypeCode {
            get {
                return this.ExpenseTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseTypeCodeField, value) != true)) {
                    this.ExpenseTypeCodeField = value;
                    this.RaisePropertyChanged("ExpenseTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtCompanyID {
            get {
                return this.ExtCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtCompanyIDField, value) != true)) {
                    this.ExtCompanyIDField = value;
                    this.RaisePropertyChanged("ExtCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtSystemID {
            get {
                return this.ExtSystemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtSystemIDField, value) != true)) {
                    this.ExtSystemIDField = value;
                    this.RaisePropertyChanged("ExtSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPlant {
            get {
                return this.FromPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPlantField, value) != true)) {
                    this.FromPlantField = value;
                    this.RaisePropertyChanged("FromPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlDescription {
            get {
                return this.GLCntrlDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlDescriptionField, value) != true)) {
                    this.GLCntrlDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLCntrlTypeDescription {
            get {
                return this.GLCntrlTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GLCntrlTypeDescriptionField, value) != true)) {
                    this.GLCntrlTypeDescriptionField = value;
                    this.RaisePropertyChanged("GLCntrlTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlCode {
            get {
                return this.GLControlCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlCodeField, value) != true)) {
                    this.GLControlCodeField = value;
                    this.RaisePropertyChanged("GLControlCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GLControlType {
            get {
                return this.GLControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GLControlTypeField, value) != true)) {
                    this.GLControlTypeField = value;
                    this.RaisePropertyChanged("GLControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalEntityGLC {
            get {
                return this.GlobalEntityGLCField;
            }
            set {
                if ((this.GlobalEntityGLCField.Equals(value) != true)) {
                    this.GlobalEntityGLCField = value;
                    this.RaisePropertyChanged("GlobalEntityGLC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GlobalLock {
            get {
                return this.GlobalLockField;
            }
            set {
                if ((this.GlobalLockField.Equals(value) != true)) {
                    this.GlobalLockField = value;
                    this.RaisePropertyChanged("GlobalLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadNum {
            get {
                return this.HeadNumField;
            }
            set {
                if ((this.HeadNumField.Equals(value) != true)) {
                    this.HeadNumField = value;
                    this.RaisePropertyChanged("HeadNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExternalCompany {
            get {
                return this.IsExternalCompanyField;
            }
            set {
                if ((this.IsExternalCompanyField.Equals(value) != true)) {
                    this.IsExternalCompanyField = value;
                    this.RaisePropertyChanged("IsExternalCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFiltered {
            get {
                return this.IsFilteredField;
            }
            set {
                if ((this.IsFilteredField.Equals(value) != true)) {
                    this.IsFilteredField = value;
                    this.RaisePropertyChanged("IsFiltered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDept {
            get {
                return this.JCDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptField, value) != true)) {
                    this.JCDeptField = value;
                    this.RaisePropertyChanged("JCDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key1 {
            get {
                return this.Key1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key1Field, value) != true)) {
                    this.Key1Field = value;
                    this.RaisePropertyChanged("Key1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key2 {
            get {
                return this.Key2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key2Field, value) != true)) {
                    this.Key2Field = value;
                    this.RaisePropertyChanged("Key2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key3 {
            get {
                return this.Key3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key3Field, value) != true)) {
                    this.Key3Field = value;
                    this.RaisePropertyChanged("Key3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key4 {
            get {
                return this.Key4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key4Field, value) != true)) {
                    this.Key4Field = value;
                    this.RaisePropertyChanged("Key4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key5 {
            get {
                return this.Key5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key5Field, value) != true)) {
                    this.Key5Field = value;
                    this.RaisePropertyChanged("Key5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key6 {
            get {
                return this.Key6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Key6Field, value) != true)) {
                    this.Key6Field = value;
                    this.RaisePropertyChanged("Key6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OprTypeCode {
            get {
                return this.OprTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OprTypeCodeField, value) != true)) {
                    this.OprTypeCodeField = value;
                    this.RaisePropertyChanged("OprTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PIStatus {
            get {
                return this.PIStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PIStatusField, value) != true)) {
                    this.PIStatusField = value;
                    this.RaisePropertyChanged("PIStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayTypeID {
            get {
                return this.PayTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PayTypeIDField, value) != true)) {
                    this.PayTypeIDField = value;
                    this.RaisePropertyChanged("PayTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerConName {
            get {
                return this.PerConNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PerConNameField, value) != true)) {
                    this.PerConNameField = value;
                    this.RaisePropertyChanged("PerConName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdCode {
            get {
                return this.ProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdCodeField, value) != true)) {
                    this.ProdCodeField = value;
                    this.RaisePropertyChanged("ProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurchCode {
            get {
                return this.PurchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchCodeField, value) != true)) {
                    this.PurchCodeField = value;
                    this.RaisePropertyChanged("PurchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonTypeField, value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReclassCodeID {
            get {
                return this.ReclassCodeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ReclassCodeIDField, value) != true)) {
                    this.ReclassCodeIDField = value;
                    this.RaisePropertyChanged("ReclassCodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesCatID {
            get {
                return this.SalesCatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesCatIDField, value) != true)) {
                    this.SalesCatIDField = value;
                    this.RaisePropertyChanged("SalesCatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TIN {
            get {
                return this.TINField;
            }
            set {
                if ((object.ReferenceEquals(this.TINField, value) != true)) {
                    this.TINField = value;
                    this.RaisePropertyChanged("TIN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxTblID {
            get {
                return this.TaxTblIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxTblIDField, value) != true)) {
                    this.TaxTblIDField = value;
                    this.RaisePropertyChanged("TaxTblID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPlant {
            get {
                return this.ToPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPlantField, value) != true)) {
                    this.ToPlantField = value;
                    this.RaisePropertyChanged("ToPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferMethod {
            get {
                return this.TransferMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferMethodField, value) != true)) {
                    this.TransferMethodField = value;
                    this.RaisePropertyChanged("TransferMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeIDField, value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartnerRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.PartnerRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspSearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartnerNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.PartnerRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspSearchID {
            get {
                return this.DspSearchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DspSearchIDField, value) != true)) {
                    this.DspSearchIDField = value;
                    this.RaisePropertyChanged("DspSearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerID {
            get {
                return this.PartnerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerIDField, value) != true)) {
                    this.PartnerIDField = value;
                    this.RaisePropertyChanged("PartnerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerNum {
            get {
                return this.PartnerNumField;
            }
            set {
                if ((this.PartnerNumField.Equals(value) != true)) {
                    this.PartnerNumField = value;
                    this.RaisePropertyChanged("PartnerNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartnerType {
            get {
                return this.PartnerTypeField;
            }
            set {
                if ((this.PartnerTypeField.Equals(value) != true)) {
                    this.PartnerTypeField = value;
                    this.RaisePropertyChanged("PartnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchID {
            get {
                return this.SearchIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchIDField, value) != true)) {
                    this.SearchIDField = value;
                    this.RaisePropertyChanged("SearchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceCalRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ResourceCalRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.ResourceCalRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour06Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour07Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour08Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour09Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour21Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour22Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour23Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProdHour24Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGrpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecialDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.ResourceCalRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionLabel {
            get {
                return this.ExceptionLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionLabelField, value) != true)) {
                    this.ExceptionLabelField = value;
                    this.RaisePropertyChanged("ExceptionLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour01 {
            get {
                return this.ProdHour01Field;
            }
            set {
                if ((this.ProdHour01Field.Equals(value) != true)) {
                    this.ProdHour01Field = value;
                    this.RaisePropertyChanged("ProdHour01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour02 {
            get {
                return this.ProdHour02Field;
            }
            set {
                if ((this.ProdHour02Field.Equals(value) != true)) {
                    this.ProdHour02Field = value;
                    this.RaisePropertyChanged("ProdHour02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour03 {
            get {
                return this.ProdHour03Field;
            }
            set {
                if ((this.ProdHour03Field.Equals(value) != true)) {
                    this.ProdHour03Field = value;
                    this.RaisePropertyChanged("ProdHour03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour04 {
            get {
                return this.ProdHour04Field;
            }
            set {
                if ((this.ProdHour04Field.Equals(value) != true)) {
                    this.ProdHour04Field = value;
                    this.RaisePropertyChanged("ProdHour04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour05 {
            get {
                return this.ProdHour05Field;
            }
            set {
                if ((this.ProdHour05Field.Equals(value) != true)) {
                    this.ProdHour05Field = value;
                    this.RaisePropertyChanged("ProdHour05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour06 {
            get {
                return this.ProdHour06Field;
            }
            set {
                if ((this.ProdHour06Field.Equals(value) != true)) {
                    this.ProdHour06Field = value;
                    this.RaisePropertyChanged("ProdHour06");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour07 {
            get {
                return this.ProdHour07Field;
            }
            set {
                if ((this.ProdHour07Field.Equals(value) != true)) {
                    this.ProdHour07Field = value;
                    this.RaisePropertyChanged("ProdHour07");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour08 {
            get {
                return this.ProdHour08Field;
            }
            set {
                if ((this.ProdHour08Field.Equals(value) != true)) {
                    this.ProdHour08Field = value;
                    this.RaisePropertyChanged("ProdHour08");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour09 {
            get {
                return this.ProdHour09Field;
            }
            set {
                if ((this.ProdHour09Field.Equals(value) != true)) {
                    this.ProdHour09Field = value;
                    this.RaisePropertyChanged("ProdHour09");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour10 {
            get {
                return this.ProdHour10Field;
            }
            set {
                if ((this.ProdHour10Field.Equals(value) != true)) {
                    this.ProdHour10Field = value;
                    this.RaisePropertyChanged("ProdHour10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour11 {
            get {
                return this.ProdHour11Field;
            }
            set {
                if ((this.ProdHour11Field.Equals(value) != true)) {
                    this.ProdHour11Field = value;
                    this.RaisePropertyChanged("ProdHour11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour12 {
            get {
                return this.ProdHour12Field;
            }
            set {
                if ((this.ProdHour12Field.Equals(value) != true)) {
                    this.ProdHour12Field = value;
                    this.RaisePropertyChanged("ProdHour12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour13 {
            get {
                return this.ProdHour13Field;
            }
            set {
                if ((this.ProdHour13Field.Equals(value) != true)) {
                    this.ProdHour13Field = value;
                    this.RaisePropertyChanged("ProdHour13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour14 {
            get {
                return this.ProdHour14Field;
            }
            set {
                if ((this.ProdHour14Field.Equals(value) != true)) {
                    this.ProdHour14Field = value;
                    this.RaisePropertyChanged("ProdHour14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour15 {
            get {
                return this.ProdHour15Field;
            }
            set {
                if ((this.ProdHour15Field.Equals(value) != true)) {
                    this.ProdHour15Field = value;
                    this.RaisePropertyChanged("ProdHour15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour16 {
            get {
                return this.ProdHour16Field;
            }
            set {
                if ((this.ProdHour16Field.Equals(value) != true)) {
                    this.ProdHour16Field = value;
                    this.RaisePropertyChanged("ProdHour16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour17 {
            get {
                return this.ProdHour17Field;
            }
            set {
                if ((this.ProdHour17Field.Equals(value) != true)) {
                    this.ProdHour17Field = value;
                    this.RaisePropertyChanged("ProdHour17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour18 {
            get {
                return this.ProdHour18Field;
            }
            set {
                if ((this.ProdHour18Field.Equals(value) != true)) {
                    this.ProdHour18Field = value;
                    this.RaisePropertyChanged("ProdHour18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour19 {
            get {
                return this.ProdHour19Field;
            }
            set {
                if ((this.ProdHour19Field.Equals(value) != true)) {
                    this.ProdHour19Field = value;
                    this.RaisePropertyChanged("ProdHour19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour20 {
            get {
                return this.ProdHour20Field;
            }
            set {
                if ((this.ProdHour20Field.Equals(value) != true)) {
                    this.ProdHour20Field = value;
                    this.RaisePropertyChanged("ProdHour20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour21 {
            get {
                return this.ProdHour21Field;
            }
            set {
                if ((this.ProdHour21Field.Equals(value) != true)) {
                    this.ProdHour21Field = value;
                    this.RaisePropertyChanged("ProdHour21");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour22 {
            get {
                return this.ProdHour22Field;
            }
            set {
                if ((this.ProdHour22Field.Equals(value) != true)) {
                    this.ProdHour22Field = value;
                    this.RaisePropertyChanged("ProdHour22");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour23 {
            get {
                return this.ProdHour23Field;
            }
            set {
                if ((this.ProdHour23Field.Equals(value) != true)) {
                    this.ProdHour23Field = value;
                    this.RaisePropertyChanged("ProdHour23");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProdHour24 {
            get {
                return this.ProdHour24Field;
            }
            set {
                if ((this.ProdHour24Field.Equals(value) != true)) {
                    this.ProdHour24Field = value;
                    this.RaisePropertyChanged("ProdHour24");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGrpID {
            get {
                return this.ResourceGrpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGrpIDField, value) != true)) {
                    this.ResourceGrpIDField = value;
                    this.RaisePropertyChanged("ResourceGrpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecialDay {
            get {
                return this.SpecialDayField;
            }
            set {
                if ((this.SpecialDayField.Equals(value) != true)) {
                    this.SpecialDayField = value;
                    this.RaisePropertyChanged("SpecialDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class EmpBasicListRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DcdUserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JCDeptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LaborRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PRSetupReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGroupDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGrpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServTechField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShopSupervisorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupervisorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupervisorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WarehouseManagerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DcdUserID {
            get {
                return this.DcdUserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DcdUserIDField, value) != true)) {
                    this.DcdUserIDField = value;
                    this.RaisePropertyChanged("DcdUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpStatus {
            get {
                return this.EmpStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpStatusField, value) != true)) {
                    this.EmpStatusField = value;
                    this.RaisePropertyChanged("EmpStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JCDept {
            get {
                return this.JCDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.JCDeptField, value) != true)) {
                    this.JCDeptField = value;
                    this.RaisePropertyChanged("JCDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LaborRate {
            get {
                return this.LaborRateField;
            }
            set {
                if ((this.LaborRateField.Equals(value) != true)) {
                    this.LaborRateField = value;
                    this.RaisePropertyChanged("LaborRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PRSetupReq {
            get {
                return this.PRSetupReqField;
            }
            set {
                if ((this.PRSetupReqField.Equals(value) != true)) {
                    this.PRSetupReqField = value;
                    this.RaisePropertyChanged("PRSetupReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoFile {
            get {
                return this.PhotoFileField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoFileField, value) != true)) {
                    this.PhotoFileField = value;
                    this.RaisePropertyChanged("PhotoFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGroupDescription {
            get {
                return this.ResourceGroupDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGroupDescriptionField, value) != true)) {
                    this.ResourceGroupDescriptionField = value;
                    this.RaisePropertyChanged("ResourceGroupDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGrpID {
            get {
                return this.ResourceGrpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGrpIDField, value) != true)) {
                    this.ResourceGrpIDField = value;
                    this.RaisePropertyChanged("ResourceGrpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServTech {
            get {
                return this.ServTechField;
            }
            set {
                if ((this.ServTechField.Equals(value) != true)) {
                    this.ServTechField = value;
                    this.RaisePropertyChanged("ServTech");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Shift {
            get {
                return this.ShiftField;
            }
            set {
                if ((this.ShiftField.Equals(value) != true)) {
                    this.ShiftField = value;
                    this.RaisePropertyChanged("Shift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftDescription {
            get {
                return this.ShiftDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftDescriptionField, value) != true)) {
                    this.ShiftDescriptionField = value;
                    this.RaisePropertyChanged("ShiftDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShopSupervisor {
            get {
                return this.ShopSupervisorField;
            }
            set {
                if ((this.ShopSupervisorField.Equals(value) != true)) {
                    this.ShopSupervisorField = value;
                    this.RaisePropertyChanged("ShopSupervisor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupervisorID {
            get {
                return this.SupervisorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorIDField, value) != true)) {
                    this.SupervisorIDField = value;
                    this.RaisePropertyChanged("SupervisorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupervisorName {
            get {
                return this.SupervisorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupervisorNameField, value) != true)) {
                    this.SupervisorNameField = value;
                    this.RaisePropertyChanged("SupervisorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WarehouseManager {
            get {
                return this.WarehouseManagerField;
            }
            set {
                if ((this.WarehouseManagerField.Equals(value) != true)) {
                    this.WarehouseManagerField = value;
                    this.RaisePropertyChanged("WarehouseManager");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicWAS.Epicor.EmpBasicSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpBasicRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleInitial = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address2 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZIP = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmgPhone = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shift = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborRate = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payroll = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRSetupReq = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpStatus = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhotoFile = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDept = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmgContact = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServTech = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMailAddress = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DcdUserID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductionWorker = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialHandler = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShopSupervisor = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanReportQty = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanOverrideJob = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanRequestMaterial = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanReportScrapQty = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanReportNCQty = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipRecv = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CnvEmpID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseManager = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanOverrideAllocations = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowDirLbr = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractEmp = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGrpID = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeWFGroupID = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseEntryAllowed = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseWFGroupID = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNum = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerConID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncNameToPerCon = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncAddressToPerCon = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncPhoneToPerCon = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SyncEmailToPerCon = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanEnterIndirectTime = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanEnterProductionTime = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanEnterProjectTime = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanEnterServiceTime = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CanEnterSetupTime = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeAutoApprove = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseAutoApprove = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileUserPassword = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowIndirect = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowProduction = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowProject = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowService = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowSetup = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultLaborTypePseudo = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultTimeTypCd = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultIndirectCode = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultExpenseCode = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultResourceGrpID = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultResourceID = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultLaborHrs = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultExpCurrencyCode = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultClaimCurrencyCode = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultPMUID = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultTaxRegionCode = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultTaxIncluded = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseAdvReqAllowed = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseAdvReqWFGroupID = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseAdvReqAutoApprove = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MobileResourceID = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowAsAltRemitTo = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameInJDF = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalMES = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitScrap = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitDown = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitHelp = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitJobControl = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitNextJobControl = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitManualSqc = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitVariableSqc = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitAttributeSqc = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitMaterialLot = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitSetupMaterial = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitCavities = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitPercentRegrind = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitSaveProfile = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitCalibration = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitMachinePm = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitToolPm = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitLanguage = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PermitPreferences = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisallowTimeEntry = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgInboundAllowed = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgOutboundAllowed = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgInventoryAllowed = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgManufacturingAllowed = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgQualityAllowed = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImageID = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgMasterMixedPrint = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSuppressPrintMessages = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayrollValuesForHCM = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToFSA = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalMESSyncRequired = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalMESLastSync = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDDocument = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BirthDate = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sex = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Department = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnrollmentDate = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartureDate = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlertFlag = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartmentDescription = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableExpenseSupplier = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseDescription = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseDisableCreate = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseRestrictEntry = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FoundPayroll = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FoundPayrollUserAllowed = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HCMEnabledAt = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsHCMAllowedByEmp = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayrollValuesForHCMDsp = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerConName = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhotoFilePath = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetShopLoad = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShiftEndTime = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShiftStartTime = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorName = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeDisableCreate = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeRestrictEntry = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserIDName = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarID = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COASegReferences = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanySendToFSA = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryNumDescription = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCodeDescription = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumName = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumCity = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumTermsCode = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumAddress3 = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumDefaultFOB = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumCurrencyCode = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumZIP = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumVendorID = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumAddress2 = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumAddress1 = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumCountry = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseVendorNumState = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDeptDescription = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MachineDescription = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGroupDescription = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShiftDescription = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 167,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpBasicAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpCalRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpCalRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromEffectiveDate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToEffectiveDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarIDDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 10,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpLabExpRateRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpLabExpRateRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateMultiplier = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedRate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpRoleRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpRoleRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleCd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeApprover = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseApprover = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicFirstName = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicLastName = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleCdRoleDescription = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpRoleRtRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpRoleRtRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleCd = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateEffDte = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTypCd = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rate = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateEndDte = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Seq = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrencyID = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrSymbol = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrDesc = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyDocumentDesc = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCurrName = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicFirstName = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicName = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpBasicLastName = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleCdRoleDescription = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTypCdDescription = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 23,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityGLCRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EntityGLCRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key1 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key2 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key3 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key4 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key5 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Key6 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLControlCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BusinessEntity = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCompanyID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsExternalCompany = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalEntityGLC = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GlobalLock = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankAcctID = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BankFeeID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChargeCode = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassCode = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClassID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeductionID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseCode = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtSystemID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPlant = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeadNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDept = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayTypeID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerConName = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PIStatus = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdCode = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurchCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonType = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesCatID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shift = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTblID = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPlant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferMethod = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TypeID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseTypeCode = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsFiltered = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprTypeCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CashDeskID = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TIN = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReclassCodeID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlDescription = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLCntrlTypeDescription = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 67,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartnerRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerType = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SearchID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsActive = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartnerID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspSearchID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResourceCalRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ResourceCalRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGrpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecialDay = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour01 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour02 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour03 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour04 = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour05 = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour06 = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour07 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour08 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour09 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour10 = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour11 = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour12 = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour13 = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour14 = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour15 = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour16 = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour17 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour18 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour19 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour20 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour21 = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour22 = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour23 = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProdHour24 = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExceptionLabel = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 33,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="EmpBasicListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="EmpBasicListRow")]
    [System.SerializableAttribute()]
    public class EmpBasicListTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.EmpBasicListRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmpBasicListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum EmpBasicListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiddleInitial = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastName = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Phone = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shift = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborRate = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRSetupReq = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpStatus = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhotoFile = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JCDept = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServTech = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DcdUserID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShopSupervisor = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseManager = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGrpID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupervisorName = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShiftDescription = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGroupDescription = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 25,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:EmpBasic", ConfigurationName="Epicor.EmpBasicSvc.EmpBasicSvcContract")]
    public interface EmpBasicSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetClientFileName", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetClientFileNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetClientFileNameEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetClientFileName(string IP_ServerFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetClientFileName", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetClientFileNameResponse")]
        System.Threading.Tasks.Task<string> GetClientFileNameAsync(string IP_ServerFileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Mins2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Mins2IntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Mins2IntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        int Mins2Int(string vTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Mins2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Mins2IntResponse")]
        System.Threading.Tasks.Task<int> Mins2IntAsync(string vTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Hours2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Hours2IntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Hours2IntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        int Hours2Int(string vTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Hours2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Hours2IntResponse")]
        System.Threading.Tasks.Task<int> Hours2IntAsync(string vTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Date2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Date2IntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Date2IntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        int Date2Int(string vBegTime, string vEndTime, System.Nullable<System.DateTime> vDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Date2Int", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/Date2IntResponse")]
        System.Threading.Tasks.Task<int> Date2IntAsync(string vBegTime, string vEndTime, System.Nullable<System.DateTime> vDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetCodeDescList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetCodeDescList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckShift", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckShiftResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckShiftEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        string CheckShift(string ipEmpID, int ipLaborShift);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckShift", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckShiftResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        System.Threading.Tasks.Task<string> CheckShiftAsync(string ipEmpID, int ipLaborShift);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockIn", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockInResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockInEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string ClockIn(string employeeID, int shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockIn", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockInResponse")]
        System.Threading.Tasks.Task<string> ClockInAsync(string employeeID, int shift);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockOut", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockOutResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockOutEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.ClockOutResponse ClockOut(EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockOut", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ClockOutResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.ClockOutResponse> ClockOutAsync(EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CustomizeResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CustomizeResourceCalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CustomizeResourceCalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalResponse CustomizeResourceCal(EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CustomizeResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CustomizeResourceCalResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalResponse> CustomizeResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckClockInStatus", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckClockInStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckClockInStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusResponse CheckClockInStatus(EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckClockInStatus", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/CheckClockInStatusResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusResponse> CheckClockInStatusAsync(EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDForTE", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDForTEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDForTEEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetByIDForTE(string inEmpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDForTE", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDForTEResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetByIDForTEAsync(string inEmpID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetDefaultEmpID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetDefaultEmpIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetDefaultEmpIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="defaultEmpID")]
        string GetDefaultEmpID();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetDefaultEmpID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetDefaultEmpIDResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="defaultEmpID")]
        System.Threading.Tasks.Task<string> GetDefaultEmpIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListExpEmployees", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListExpEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListExpEmployeesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesResponse GetListExpEmployees(EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListExpEmployees", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListExpEmployeesResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesResponse> GetListExpEmployeesAsync(EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListForTE", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListForTEResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListForTEEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetListForTEResponse GetListForTE(EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListForTE", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListForTEResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListForTEResponse> GetListForTEAsync(EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetPerConData", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetPerConDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetPerConDataEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetPerConDataResponse GetPerConData(EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetPerConData", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetPerConDataResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetPerConDataResponse> GetPerConDataAsync(EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsFromList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsFromListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsFromListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsFromList(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsFromList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsFromListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetRowsFromListAsync(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsWhoIsNotHere", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsWhoIsNotHereResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsWhoIsNotHereEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereResponse GetRowsWhoIsNotHere(EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsWhoIsNotHere", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsWhoIsNotHereResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereResponse> GetRowsWhoIsNotHereAsync(EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCalendarID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCalendarIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCalendarIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDResponse OnChangeCalendarID(EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCalendarID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCalendarIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDResponse> OnChangeCalendarIDAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCurrencyCode", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCurrencyCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCurrencyCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeResponse OnChangeCurrencyCode(EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCurrencyCode", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeCurrencyCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeResponse> OnChangeCurrencyCodeAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAllowed", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAllowedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAllowedEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedResponse OnChangeExpenseAllowed(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAllowed", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAllowedResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedResponse> OnChangeExpenseAllowedAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAutoApprove", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAutoApproveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAutoApproveEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveResponse OnChangeExpenseAutoApprove(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAutoApprove", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseAutoApproveResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveResponse> OnChangeExpenseAutoApproveAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseVendor", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseVendorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseVendorEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorResponse OnChangeExpenseVendor(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseVendor", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeExpenseVendorResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorResponse> OnChangeExpenseVendorAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEffectiveDate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEffectiveDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEffectiveDateEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateResponse OnChangeRateEffectiveDate(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEffectiveDate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEffectiveDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateResponse> OnChangeRateEffectiveDateAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEndDate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEndDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEndDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateResponse OnChangeRateEndDate(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEndDate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRateEndDateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateResponse> OnChangeRateEndDateAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResource", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceResponse OnChangeResource(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResource", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceResponse> OnChangeResourceAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceGrp", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceGrpResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceGrpEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpResponse OnChangeResourceGrp(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceGrp", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeResourceGrpResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpResponse> OnChangeResourceGrpAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRoleCd", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRoleCdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRoleCdEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdResponse OnChangeRoleCd(EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRoleCd", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeRoleCdResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdResponse> OnChangeRoleCdAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeAutoApprove", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeAutoApproveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeAutoApproveEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveResponse OnChangeTimeAutoApprove(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeAutoApprove", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeAutoApproveResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveResponse> OnChangeTimeAutoApproveAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeTypeCode", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeTypeCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeTypeCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeResponse OnChangeTimeTypeCode(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeTypeCode", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/OnChangeTimeTypeCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeResponse> OnChangeTimeTypeCodeAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResourceCalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResourceCalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalResponse UpdateResourceCal(EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResourceCalResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalResponse> UpdateResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/FromEffDateOverlaps", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/FromEffDateOverlapsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/FromEffDateOverlapsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool FromEffDateOverlaps(string employeeID, System.Nullable<System.DateTime> effDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/FromEffDateOverlaps", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/FromEffDateOverlapsResponse")]
        System.Threading.Tasks.Task<bool> FromEffDateOverlapsAsync(string employeeID, System.Nullable<System.DateTime> effDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetEmpStatusCodeDescList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetEmpStatusCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetEmpStatusCodeDescListEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetEmpStatusCodeDescList(string TableName, string FieldName, bool FoundPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetEmpStatusCodeDescList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetEmpStatusCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetEmpStatusCodeDescListAsync(string TableName, string FieldName, bool FoundPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/getValidCompanyName", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/getValidCompanyNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/getValidCompanyNameEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameResponse getValidCompanyName(EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/getValidCompanyName", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/getValidCompanyNameResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameResponse> getValidCompanyNameAsync(EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetIfCurrentSiteHasExternalMES", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetIfCurrentSiteHasExternalMESResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetIfCurrentSiteHasExternalMESEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetIfCurrentSiteHasExternalMES();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetIfCurrentSiteHasExternalMES", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetIfCurrentSiteHasExternalMESResponse")]
        System.Threading.Tasks.Task<bool> GetIfCurrentSiteHasExternalMESAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ModifySearchIDs", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ModifySearchIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ModifySearchIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsResponse ModifySearchIDs(EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/ModifySearchIDs", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/ModifySearchIDsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsResponse> ModifySearchIDsAsync(EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasic", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicResponse GetNewEmpBasic(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasic", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicResponse> GetNewEmpBasicAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicAttch", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchResponse GetNewEmpBasicAttch(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicAttch", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpBasicAttchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchResponse> GetNewEmpBasicAttchAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpLabExpRate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpLabExpRateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpLabExpRateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateResponse GetNewEmpLabExpRate(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpLabExpRate", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpLabExpRateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateResponse> GetNewEmpLabExpRateAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpCalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpCalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalResponse GetNewEmpCal(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpCalResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalResponse> GetNewEmpCalAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewPartner", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewPartnerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewPartnerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerResponse GetNewPartner(EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewPartner", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewPartnerResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerResponse> GetNewPartnerAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewResourceCalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewResourceCalEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalResponse GetNewResourceCal(EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewResourceCal", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewResourceCalResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalResponse> GetNewResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRole", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleResponse GetNewEmpRole(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRole", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleResponse> GetNewEmpRoleAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEntityGLCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEntityGLCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCResponse GetNewEntityGLC(EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEntityGLC", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEntityGLCResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleRt", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleRtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleRtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtResponse GetNewEmpRoleRt(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleRt", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetNewEmpRoleRtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtResponse> GetNewEmpRoleRtAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/DeleteByID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(string empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/DeleteByID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(string empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetByID(string empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetByIDAsync(string empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetListResponse GetList(EpicWAS.Epicor.EmpBasicSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetList", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.EmpBasicSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRows", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.GetRowsResponse GetRows(EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRows", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowID", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Update", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.UpdateResponse Update(EpicWAS.Epicor.EmpBasicSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/Update", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateExt", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.EmpBasicSvc.EpicorFaultDetail), Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.EmpBasicSvc.UpdateExtResponse UpdateExt(EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateExt", ReplyAction="Erp:BO:EmpBasic/EmpBasicSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClockOut", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class ClockOutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string employeeID;
        
        public ClockOutRequest() {
        }
        
        public ClockOutRequest(string employeeID) {
            this.employeeID = employeeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClockOutResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class ClockOutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string employeeID;
        
        public ClockOutResponse() {
        }
        
        public ClockOutResponse(string employeeID) {
            this.employeeID = employeeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CustomizeResourceCal", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class CustomizeResourceCalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipEmpID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public System.Nullable<System.DateTime> ipDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public CustomizeResourceCalRequest() {
        }
        
        public CustomizeResourceCalRequest(string ipEmpID, System.Nullable<System.DateTime> ipDate, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipEmpID = ipEmpID;
            this.ipDate = ipDate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CustomizeResourceCalResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class CustomizeResourceCalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public CustomizeResourceCalResponse() {
        }
        
        public CustomizeResourceCalResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckClockInStatus", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class CheckClockInStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string empID;
        
        public CheckClockInStatusRequest() {
        }
        
        public CheckClockInStatusRequest(string empID) {
            this.empID = empID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckClockInStatusResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class CheckClockInStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset CheckClockInStatusResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool clockIn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int shift;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=3)]
        public bool downtime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=4)]
        public string clockInTimeStr;
        
        public CheckClockInStatusResponse() {
        }
        
        public CheckClockInStatusResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset CheckClockInStatusResult, bool clockIn, int shift, bool downtime, string clockInTimeStr) {
            this.CheckClockInStatusResult = CheckClockInStatusResult;
            this.clockIn = clockIn;
            this.shift = shift;
            this.downtime = downtime;
            this.clockInTimeStr = clockInTimeStr;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListExpEmployees", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListExpEmployeesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int absolutePage;
        
        public GetListExpEmployeesRequest() {
        }
        
        public GetListExpEmployeesRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListExpEmployeesResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListExpEmployeesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListExpEmployeesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool morePages;
        
        public GetListExpEmployeesResponse() {
        }
        
        public GetListExpEmployeesResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListExpEmployeesResult, bool morePages) {
            this.GetListExpEmployeesResult = GetListExpEmployeesResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListForTE", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListForTERequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int absolutePage;
        
        public GetListForTERequest() {
        }
        
        public GetListForTERequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListForTEResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListForTEResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListForTEResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool morePages;
        
        public GetListForTEResponse() {
        }
        
        public GetListForTEResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListForTEResult, bool morePages) {
            this.GetListForTEResult = GetListForTEResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPerConData", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetPerConDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public int PerConID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetPerConDataRequest() {
        }
        
        public GetPerConDataRequest(int PerConID, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.PerConID = PerConID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPerConDataResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetPerConDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetPerConDataResponse() {
        }
        
        public GetPerConDataResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsWhoIsNotHere", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetRowsWhoIsNotHereRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string whereClauseEmpBasic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string whereClauseEmpBasicAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=3)]
        public int absolutePage;
        
        public GetRowsWhoIsNotHereRequest() {
        }
        
        public GetRowsWhoIsNotHereRequest(string whereClauseEmpBasic, string whereClauseEmpBasicAttch, int pageSize, int absolutePage) {
            this.whereClauseEmpBasic = whereClauseEmpBasic;
            this.whereClauseEmpBasicAttch = whereClauseEmpBasicAttch;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsWhoIsNotHereResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetRowsWhoIsNotHereResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsWhoIsNotHereResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool morePages;
        
        public GetRowsWhoIsNotHereResponse() {
        }
        
        public GetRowsWhoIsNotHereResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsWhoIsNotHereResult, bool morePages) {
            this.GetRowsWhoIsNotHereResult = GetRowsWhoIsNotHereResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCalendarID", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeCalendarIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipCalendarID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeCalendarIDRequest() {
        }
        
        public OnChangeCalendarIDRequest(string ipCalendarID, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipCalendarID = ipCalendarID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCalendarIDResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeCalendarIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeCalendarIDResponse() {
        }
        
        public OnChangeCalendarIDResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCurrencyCode", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeCurrencyCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipCurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeCurrencyCodeRequest() {
        }
        
        public OnChangeCurrencyCodeRequest(string ipCurrencyCode, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipCurrencyCode = ipCurrencyCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeCurrencyCodeResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeCurrencyCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeCurrencyCodeResponse() {
        }
        
        public OnChangeCurrencyCodeResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseAllowed", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseAllowedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public bool allowExpenses;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseAllowedRequest() {
        }
        
        public OnChangeExpenseAllowedRequest(bool allowExpenses, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.allowExpenses = allowExpenses;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseAllowedResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseAllowedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseAllowedResponse() {
        }
        
        public OnChangeExpenseAllowedResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseAutoApprove", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseAutoApproveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public bool proposedExpenseAutoApprove;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseAutoApproveRequest() {
        }
        
        public OnChangeExpenseAutoApproveRequest(bool proposedExpenseAutoApprove, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.proposedExpenseAutoApprove = proposedExpenseAutoApprove;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseAutoApproveResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseAutoApproveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseAutoApproveResponse() {
        }
        
        public OnChangeExpenseAutoApproveResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseVendor", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseVendorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipVendorID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseVendorRequest() {
        }
        
        public OnChangeExpenseVendorRequest(string ipVendorID, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipVendorID = ipVendorID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeExpenseVendorResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeExpenseVendorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeExpenseVendorResponse() {
        }
        
        public OnChangeExpenseVendorResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateEffectiveDate", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRateEffectiveDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public System.DateTime ipEffRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRateEffectiveDateRequest() {
        }
        
        public OnChangeRateEffectiveDateRequest(System.DateTime ipEffRate, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipEffRate = ipEffRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateEffectiveDateResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRateEffectiveDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRateEffectiveDateResponse() {
        }
        
        public OnChangeRateEffectiveDateResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateEndDate", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRateEndDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public System.DateTime ipEndRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRateEndDateRequest() {
        }
        
        public OnChangeRateEndDateRequest(System.DateTime ipEndRate, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipEndRate = ipEndRate;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRateEndDateResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRateEndDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRateEndDateResponse() {
        }
        
        public OnChangeRateEndDateResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResource", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeResourceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipResource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeResourceRequest() {
        }
        
        public OnChangeResourceRequest(string ipResource, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipResource = ipResource;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResourceResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeResourceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string resourceMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeResourceResponse() {
        }
        
        public OnChangeResourceResponse(string resourceMsg, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.resourceMsg = resourceMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResourceGrp", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeResourceGrpRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipResourceGrp;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeResourceGrpRequest() {
        }
        
        public OnChangeResourceGrpRequest(string ipResourceGrp, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipResourceGrp = ipResourceGrp;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResourceGrpResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeResourceGrpResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string resourceMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeResourceGrpResponse() {
        }
        
        public OnChangeResourceGrpResponse(string resourceMsg, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.resourceMsg = resourceMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRoleCd", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRoleCdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipRoleCd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRoleCdRequest() {
        }
        
        public OnChangeRoleCdRequest(string ipRoleCd, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipRoleCd = ipRoleCd;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeRoleCdResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeRoleCdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeRoleCdResponse() {
        }
        
        public OnChangeRoleCdResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTimeAutoApprove", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeTimeAutoApproveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public bool proposedTimeAutoApprove;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeTimeAutoApproveRequest() {
        }
        
        public OnChangeTimeAutoApproveRequest(bool proposedTimeAutoApprove, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.proposedTimeAutoApprove = proposedTimeAutoApprove;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTimeAutoApproveResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeTimeAutoApproveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeTimeAutoApproveResponse() {
        }
        
        public OnChangeTimeAutoApproveResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTimeTypeCode", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeTimeTypeCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string ipTimeTypeCd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeTimeTypeCodeRequest() {
        }
        
        public OnChangeTimeTypeCodeRequest(string ipTimeTypeCd, EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ipTimeTypeCd = ipTimeTypeCd;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTimeTypeCodeResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class OnChangeTimeTypeCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public OnChangeTimeTypeCodeResponse() {
        }
        
        public OnChangeTimeTypeCodeResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResourceCal", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateResourceCalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public UpdateResourceCalRequest() {
        }
        
        public UpdateResourceCalRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResourceCalResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateResourceCalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public UpdateResourceCalResponse() {
        }
        
        public UpdateResourceCalResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidCompanyName", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class getValidCompanyNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string proposedCompany;
        
        public getValidCompanyNameRequest() {
        }
        
        public getValidCompanyNameRequest(string proposedCompany) {
            this.proposedCompany = proposedCompany;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidCompanyNameResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class getValidCompanyNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string getValidCompanyNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string errorMessage;
        
        public getValidCompanyNameResponse() {
        }
        
        public getValidCompanyNameResponse(string getValidCompanyNameResult, string errorMessage) {
            this.getValidCompanyNameResult = getValidCompanyNameResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySearchIDs", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class ModifySearchIDsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public ModifySearchIDsRequest() {
        }
        
        public ModifySearchIDsRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ModifySearchIDsResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class ModifySearchIDsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public ModifySearchIDsResponse() {
        }
        
        public ModifySearchIDsResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpBasic", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpBasicRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpBasicRequest() {
        }
        
        public GetNewEmpBasicRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpBasicResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpBasicResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpBasicResponse() {
        }
        
        public GetNewEmpBasicResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpBasicAttch", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpBasicAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string empID;
        
        public GetNewEmpBasicAttchRequest() {
        }
        
        public GetNewEmpBasicAttchRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            this.ds = ds;
            this.empID = empID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpBasicAttchResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpBasicAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpBasicAttchResponse() {
        }
        
        public GetNewEmpBasicAttchResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpLabExpRate", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpLabExpRateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string empID;
        
        public GetNewEmpLabExpRateRequest() {
        }
        
        public GetNewEmpLabExpRateRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            this.ds = ds;
            this.empID = empID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpLabExpRateResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpLabExpRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpLabExpRateResponse() {
        }
        
        public GetNewEmpLabExpRateResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpCal", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpCalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string empID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public string calendarID;
        
        public GetNewEmpCalRequest() {
        }
        
        public GetNewEmpCalRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID, string calendarID) {
            this.ds = ds;
            this.empID = empID;
            this.calendarID = calendarID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpCalResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpCalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpCalResponse() {
        }
        
        public GetNewEmpCalResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartner", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewPartnerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public int partnerNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int partnerType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=3)]
        public string partnerID;
        
        public GetNewPartnerRequest() {
        }
        
        public GetNewPartnerRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, int partnerNum, int partnerType, string partnerID) {
            this.ds = ds;
            this.partnerNum = partnerNum;
            this.partnerType = partnerType;
            this.partnerID = partnerID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPartnerResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewPartnerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewPartnerResponse() {
        }
        
        public GetNewPartnerResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewResourceCal", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewResourceCalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string resourceGrpID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public string resourceID;
        
        public GetNewResourceCalRequest() {
        }
        
        public GetNewResourceCalRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string resourceGrpID, string resourceID) {
            this.ds = ds;
            this.resourceGrpID = resourceGrpID;
            this.resourceID = resourceID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewResourceCalResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewResourceCalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewResourceCalResponse() {
        }
        
        public GetNewResourceCalResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpRole", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpRoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string empID;
        
        public GetNewEmpRoleRequest() {
        }
        
        public GetNewEmpRoleRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            this.ds = ds;
            this.empID = empID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpRoleResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpRoleResponse() {
        }
        
        public GetNewEmpRoleResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLC", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEntityGLCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public string key1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=3)]
        public string key2;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=4)]
        public string key3;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=5)]
        public string key4;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=6)]
        public string key5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=7)]
        public string key6;
        
        public GetNewEntityGLCRequest() {
        }
        
        public GetNewEntityGLCRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.key1 = key1;
            this.key2 = key2;
            this.key3 = key3;
            this.key4 = key4;
            this.key5 = key5;
            this.key6 = key6;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEntityGLCResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEntityGLCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEntityGLCResponse() {
        }
        
        public GetNewEntityGLCResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpRoleRt", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpRoleRtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string empID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public string roleCd;
        
        public GetNewEmpRoleRtRequest() {
        }
        
        public GetNewEmpRoleRtRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID, string roleCd) {
            this.ds = ds;
            this.empID = empID;
            this.roleCd = roleCd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewEmpRoleRtResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetNewEmpRoleRtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public GetNewEmpRoleRtResponse() {
        }
        
        public GetNewEmpRoleRtResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public string whereClauseEmpBasic;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public string whereClauseEmpBasicAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public string whereClauseEmpLabExpRate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=3)]
        public string whereClauseEmpCal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=4)]
        public string whereClausePartner;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=5)]
        public string whereClauseResourceCal;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=6)]
        public string whereClauseEmpRole;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=7)]
        public string whereClauseEntityGLC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=8)]
        public string whereClauseEmpRoleRt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=9)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=10)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(string whereClauseEmpBasic, string whereClauseEmpBasicAttch, string whereClauseEmpLabExpRate, string whereClauseEmpCal, string whereClausePartner, string whereClauseResourceCal, string whereClauseEmpRole, string whereClauseEntityGLC, string whereClauseEmpRoleRt, int pageSize, int absolutePage) {
            this.whereClauseEmpBasic = whereClauseEmpBasic;
            this.whereClauseEmpBasicAttch = whereClauseEmpBasicAttch;
            this.whereClauseEmpLabExpRate = whereClauseEmpLabExpRate;
            this.whereClauseEmpCal = whereClauseEmpCal;
            this.whereClausePartner = whereClausePartner;
            this.whereClauseResourceCal = whereClauseResourceCal;
            this.whereClauseEmpRole = whereClauseEmpRole;
            this.whereClauseEntityGLC = whereClauseEntityGLC;
            this.whereClauseEmpRoleRt = whereClauseEmpRoleRt;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:EmpBasic", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=0)]
        public EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=1)]
        public EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:EmpBasic", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTableset UpdateExtResult, EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EmpBasicSvcContractChannel : EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpBasicSvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract>, EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract {
        
        public EmpBasicSvcContractClient() {
        }
        
        public EmpBasicSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpBasicSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpBasicSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpBasicSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetClientFileName(string IP_ServerFileName) {
            return base.Channel.GetClientFileName(IP_ServerFileName);
        }
        
        public System.Threading.Tasks.Task<string> GetClientFileNameAsync(string IP_ServerFileName) {
            return base.Channel.GetClientFileNameAsync(IP_ServerFileName);
        }
        
        public int Mins2Int(string vTime) {
            return base.Channel.Mins2Int(vTime);
        }
        
        public System.Threading.Tasks.Task<int> Mins2IntAsync(string vTime) {
            return base.Channel.Mins2IntAsync(vTime);
        }
        
        public int Hours2Int(string vTime) {
            return base.Channel.Hours2Int(vTime);
        }
        
        public System.Threading.Tasks.Task<int> Hours2IntAsync(string vTime) {
            return base.Channel.Hours2IntAsync(vTime);
        }
        
        public int Date2Int(string vBegTime, string vEndTime, System.Nullable<System.DateTime> vDate) {
            return base.Channel.Date2Int(vBegTime, vEndTime, vDate);
        }
        
        public System.Threading.Tasks.Task<int> Date2IntAsync(string vBegTime, string vEndTime, System.Nullable<System.DateTime> vDate) {
            return base.Channel.Date2IntAsync(vBegTime, vEndTime, vDate);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        public string CheckShift(string ipEmpID, int ipLaborShift) {
            return base.Channel.CheckShift(ipEmpID, ipLaborShift);
        }
        
        public System.Threading.Tasks.Task<string> CheckShiftAsync(string ipEmpID, int ipLaborShift) {
            return base.Channel.CheckShiftAsync(ipEmpID, ipLaborShift);
        }
        
        public string ClockIn(string employeeID, int shift) {
            return base.Channel.ClockIn(employeeID, shift);
        }
        
        public System.Threading.Tasks.Task<string> ClockInAsync(string employeeID, int shift) {
            return base.Channel.ClockInAsync(employeeID, shift);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.ClockOutResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.ClockOut(EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest request) {
            return base.Channel.ClockOut(request);
        }
        
        public void ClockOut(ref string employeeID) {
            EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest();
            inValue.employeeID = employeeID;
            EpicWAS.Epicor.EmpBasicSvc.ClockOutResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).ClockOut(inValue);
            employeeID = retVal.employeeID;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.ClockOutResponse> ClockOutAsync(EpicWAS.Epicor.EmpBasicSvc.ClockOutRequest request) {
            return base.Channel.ClockOutAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.CustomizeResourceCal(EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest request) {
            return base.Channel.CustomizeResourceCal(request);
        }
        
        public void CustomizeResourceCal(string ipEmpID, System.Nullable<System.DateTime> ipDate, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest();
            inValue.ipEmpID = ipEmpID;
            inValue.ipDate = ipDate;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).CustomizeResourceCal(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalResponse> CustomizeResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.CustomizeResourceCalRequest request) {
            return base.Channel.CustomizeResourceCalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.CheckClockInStatus(EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest request) {
            return base.Channel.CheckClockInStatus(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset CheckClockInStatus(string empID, out bool clockIn, out int shift, out bool downtime, out string clockInTimeStr) {
            EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest();
            inValue.empID = empID;
            EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).CheckClockInStatus(inValue);
            clockIn = retVal.clockIn;
            shift = retVal.shift;
            downtime = retVal.downtime;
            clockInTimeStr = retVal.clockInTimeStr;
            return retVal.CheckClockInStatusResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusResponse> CheckClockInStatusAsync(EpicWAS.Epicor.EmpBasicSvc.CheckClockInStatusRequest request) {
            return base.Channel.CheckClockInStatusAsync(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetByIDForTE(string inEmpID) {
            return base.Channel.GetByIDForTE(inEmpID);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetByIDForTEAsync(string inEmpID) {
            return base.Channel.GetByIDForTEAsync(inEmpID);
        }
        
        public string GetDefaultEmpID() {
            return base.Channel.GetDefaultEmpID();
        }
        
        public System.Threading.Tasks.Task<string> GetDefaultEmpIDAsync() {
            return base.Channel.GetDefaultEmpIDAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetListExpEmployees(EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest request) {
            return base.Channel.GetListExpEmployees(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListExpEmployees(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetListExpEmployees(inValue);
            morePages = retVal.morePages;
            return retVal.GetListExpEmployeesResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesResponse> GetListExpEmployeesAsync(EpicWAS.Epicor.EmpBasicSvc.GetListExpEmployeesRequest request) {
            return base.Channel.GetListExpEmployeesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetListForTEResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetListForTE(EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest request) {
            return base.Channel.GetListForTE(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetListForTE(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.EmpBasicSvc.GetListForTEResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetListForTE(inValue);
            morePages = retVal.morePages;
            return retVal.GetListForTEResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListForTEResponse> GetListForTEAsync(EpicWAS.Epicor.EmpBasicSvc.GetListForTERequest request) {
            return base.Channel.GetListForTEAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetPerConDataResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetPerConData(EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest request) {
            return base.Channel.GetPerConData(request);
        }
        
        public void GetPerConData(int PerConID, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest();
            inValue.PerConID = PerConID;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.GetPerConDataResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetPerConData(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetPerConDataResponse> GetPerConDataAsync(EpicWAS.Epicor.EmpBasicSvc.GetPerConDataRequest request) {
            return base.Channel.GetPerConDataAsync(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsFromList(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset ds) {
            return base.Channel.GetRowsFromList(ds);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetRowsFromListAsync(EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset ds) {
            return base.Channel.GetRowsFromListAsync(ds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetRowsWhoIsNotHere(EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest request) {
            return base.Channel.GetRowsWhoIsNotHere(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRowsWhoIsNotHere(string whereClauseEmpBasic, string whereClauseEmpBasicAttch, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest();
            inValue.whereClauseEmpBasic = whereClauseEmpBasic;
            inValue.whereClauseEmpBasicAttch = whereClauseEmpBasicAttch;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetRowsWhoIsNotHere(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsWhoIsNotHereResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereResponse> GetRowsWhoIsNotHereAsync(EpicWAS.Epicor.EmpBasicSvc.GetRowsWhoIsNotHereRequest request) {
            return base.Channel.GetRowsWhoIsNotHereAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeCalendarID(EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest request) {
            return base.Channel.OnChangeCalendarID(request);
        }
        
        public void OnChangeCalendarID(string ipCalendarID, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest();
            inValue.ipCalendarID = ipCalendarID;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeCalendarID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDResponse> OnChangeCalendarIDAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeCalendarIDRequest request) {
            return base.Channel.OnChangeCalendarIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeCurrencyCode(EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest request) {
            return base.Channel.OnChangeCurrencyCode(request);
        }
        
        public void OnChangeCurrencyCode(string ipCurrencyCode, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest();
            inValue.ipCurrencyCode = ipCurrencyCode;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeCurrencyCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeResponse> OnChangeCurrencyCodeAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeCurrencyCodeRequest request) {
            return base.Channel.OnChangeCurrencyCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeExpenseAllowed(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest request) {
            return base.Channel.OnChangeExpenseAllowed(request);
        }
        
        public void OnChangeExpenseAllowed(bool allowExpenses, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest();
            inValue.allowExpenses = allowExpenses;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeExpenseAllowed(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedResponse> OnChangeExpenseAllowedAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAllowedRequest request) {
            return base.Channel.OnChangeExpenseAllowedAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeExpenseAutoApprove(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest request) {
            return base.Channel.OnChangeExpenseAutoApprove(request);
        }
        
        public void OnChangeExpenseAutoApprove(bool proposedExpenseAutoApprove, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest();
            inValue.proposedExpenseAutoApprove = proposedExpenseAutoApprove;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeExpenseAutoApprove(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveResponse> OnChangeExpenseAutoApproveAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseAutoApproveRequest request) {
            return base.Channel.OnChangeExpenseAutoApproveAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeExpenseVendor(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest request) {
            return base.Channel.OnChangeExpenseVendor(request);
        }
        
        public void OnChangeExpenseVendor(string ipVendorID, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest();
            inValue.ipVendorID = ipVendorID;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeExpenseVendor(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorResponse> OnChangeExpenseVendorAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeExpenseVendorRequest request) {
            return base.Channel.OnChangeExpenseVendorAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeRateEffectiveDate(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest request) {
            return base.Channel.OnChangeRateEffectiveDate(request);
        }
        
        public void OnChangeRateEffectiveDate(System.DateTime ipEffRate, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest();
            inValue.ipEffRate = ipEffRate;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeRateEffectiveDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateResponse> OnChangeRateEffectiveDateAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEffectiveDateRequest request) {
            return base.Channel.OnChangeRateEffectiveDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeRateEndDate(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest request) {
            return base.Channel.OnChangeRateEndDate(request);
        }
        
        public void OnChangeRateEndDate(System.DateTime ipEndRate, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest();
            inValue.ipEndRate = ipEndRate;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeRateEndDate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateResponse> OnChangeRateEndDateAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRateEndDateRequest request) {
            return base.Channel.OnChangeRateEndDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeResource(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest request) {
            return base.Channel.OnChangeResource(request);
        }
        
        public string OnChangeResource(string ipResource, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest();
            inValue.ipResource = ipResource;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeResource(inValue);
            ds = retVal.ds;
            return retVal.resourceMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceResponse> OnChangeResourceAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceRequest request) {
            return base.Channel.OnChangeResourceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeResourceGrp(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest request) {
            return base.Channel.OnChangeResourceGrp(request);
        }
        
        public string OnChangeResourceGrp(string ipResourceGrp, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest();
            inValue.ipResourceGrp = ipResourceGrp;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeResourceGrp(inValue);
            ds = retVal.ds;
            return retVal.resourceMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpResponse> OnChangeResourceGrpAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeResourceGrpRequest request) {
            return base.Channel.OnChangeResourceGrpAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeRoleCd(EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest request) {
            return base.Channel.OnChangeRoleCd(request);
        }
        
        public void OnChangeRoleCd(string ipRoleCd, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest();
            inValue.ipRoleCd = ipRoleCd;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeRoleCd(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdResponse> OnChangeRoleCdAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeRoleCdRequest request) {
            return base.Channel.OnChangeRoleCdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeTimeAutoApprove(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest request) {
            return base.Channel.OnChangeTimeAutoApprove(request);
        }
        
        public void OnChangeTimeAutoApprove(bool proposedTimeAutoApprove, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest();
            inValue.proposedTimeAutoApprove = proposedTimeAutoApprove;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeTimeAutoApprove(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveResponse> OnChangeTimeAutoApproveAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeAutoApproveRequest request) {
            return base.Channel.OnChangeTimeAutoApproveAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.OnChangeTimeTypeCode(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest request) {
            return base.Channel.OnChangeTimeTypeCode(request);
        }
        
        public void OnChangeTimeTypeCode(string ipTimeTypeCd, ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest();
            inValue.ipTimeTypeCd = ipTimeTypeCd;
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).OnChangeTimeTypeCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeResponse> OnChangeTimeTypeCodeAsync(EpicWAS.Epicor.EmpBasicSvc.OnChangeTimeTypeCodeRequest request) {
            return base.Channel.OnChangeTimeTypeCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.UpdateResourceCal(EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest request) {
            return base.Channel.UpdateResourceCal(request);
        }
        
        public void UpdateResourceCal(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).UpdateResourceCal(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalResponse> UpdateResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateResourceCalRequest request) {
            return base.Channel.UpdateResourceCalAsync(request);
        }
        
        public bool FromEffDateOverlaps(string employeeID, System.Nullable<System.DateTime> effDate) {
            return base.Channel.FromEffDateOverlaps(employeeID, effDate);
        }
        
        public System.Threading.Tasks.Task<bool> FromEffDateOverlapsAsync(string employeeID, System.Nullable<System.DateTime> effDate) {
            return base.Channel.FromEffDateOverlapsAsync(employeeID, effDate);
        }
        
        public string GetEmpStatusCodeDescList(string TableName, string FieldName, bool FoundPayroll) {
            return base.Channel.GetEmpStatusCodeDescList(TableName, FieldName, FoundPayroll);
        }
        
        public System.Threading.Tasks.Task<string> GetEmpStatusCodeDescListAsync(string TableName, string FieldName, bool FoundPayroll) {
            return base.Channel.GetEmpStatusCodeDescListAsync(TableName, FieldName, FoundPayroll);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.getValidCompanyName(EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest request) {
            return base.Channel.getValidCompanyName(request);
        }
        
        public string getValidCompanyName(string proposedCompany, out string errorMessage) {
            EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest();
            inValue.proposedCompany = proposedCompany;
            EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).getValidCompanyName(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.getValidCompanyNameResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameResponse> getValidCompanyNameAsync(EpicWAS.Epicor.EmpBasicSvc.getValidCompanyNameRequest request) {
            return base.Channel.getValidCompanyNameAsync(request);
        }
        
        public bool GetIfCurrentSiteHasExternalMES() {
            return base.Channel.GetIfCurrentSiteHasExternalMES();
        }
        
        public System.Threading.Tasks.Task<bool> GetIfCurrentSiteHasExternalMESAsync() {
            return base.Channel.GetIfCurrentSiteHasExternalMESAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.ModifySearchIDs(EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest request) {
            return base.Channel.ModifySearchIDs(request);
        }
        
        public void ModifySearchIDs(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).ModifySearchIDs(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsResponse> ModifySearchIDsAsync(EpicWAS.Epicor.EmpBasicSvc.ModifySearchIDsRequest request) {
            return base.Channel.ModifySearchIDsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpBasic(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest request) {
            return base.Channel.GetNewEmpBasic(request);
        }
        
        public void GetNewEmpBasic(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpBasic(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicResponse> GetNewEmpBasicAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicRequest request) {
            return base.Channel.GetNewEmpBasicAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpBasicAttch(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest request) {
            return base.Channel.GetNewEmpBasicAttch(request);
        }
        
        public void GetNewEmpBasicAttch(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest();
            inValue.ds = ds;
            inValue.empID = empID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpBasicAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchResponse> GetNewEmpBasicAttchAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpBasicAttchRequest request) {
            return base.Channel.GetNewEmpBasicAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpLabExpRate(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest request) {
            return base.Channel.GetNewEmpLabExpRate(request);
        }
        
        public void GetNewEmpLabExpRate(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest();
            inValue.ds = ds;
            inValue.empID = empID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpLabExpRate(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateResponse> GetNewEmpLabExpRateAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpLabExpRateRequest request) {
            return base.Channel.GetNewEmpLabExpRateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpCal(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest request) {
            return base.Channel.GetNewEmpCal(request);
        }
        
        public void GetNewEmpCal(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID, string calendarID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest();
            inValue.ds = ds;
            inValue.empID = empID;
            inValue.calendarID = calendarID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpCal(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalResponse> GetNewEmpCalAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpCalRequest request) {
            return base.Channel.GetNewEmpCalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewPartner(EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest request) {
            return base.Channel.GetNewPartner(request);
        }
        
        public void GetNewPartner(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, int partnerNum, int partnerType, string partnerID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest();
            inValue.ds = ds;
            inValue.partnerNum = partnerNum;
            inValue.partnerType = partnerType;
            inValue.partnerID = partnerID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewPartner(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerResponse> GetNewPartnerAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewPartnerRequest request) {
            return base.Channel.GetNewPartnerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewResourceCal(EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest request) {
            return base.Channel.GetNewResourceCal(request);
        }
        
        public void GetNewResourceCal(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string resourceGrpID, string resourceID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest();
            inValue.ds = ds;
            inValue.resourceGrpID = resourceGrpID;
            inValue.resourceID = resourceID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewResourceCal(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalResponse> GetNewResourceCalAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewResourceCalRequest request) {
            return base.Channel.GetNewResourceCalAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpRole(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest request) {
            return base.Channel.GetNewEmpRole(request);
        }
        
        public void GetNewEmpRole(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest();
            inValue.ds = ds;
            inValue.empID = empID;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpRole(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleResponse> GetNewEmpRoleAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRequest request) {
            return base.Channel.GetNewEmpRoleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEntityGLC(EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLC(request);
        }
        
        public void GetNewEntityGLC(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string relatedToFile, string key1, string key2, string key3, string key4, string key5, string key6) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.key1 = key1;
            inValue.key2 = key2;
            inValue.key3 = key3;
            inValue.key4 = key4;
            inValue.key5 = key5;
            inValue.key6 = key6;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEntityGLC(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCResponse> GetNewEntityGLCAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEntityGLCRequest request) {
            return base.Channel.GetNewEntityGLCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetNewEmpRoleRt(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest request) {
            return base.Channel.GetNewEmpRoleRt(request);
        }
        
        public void GetNewEmpRoleRt(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds, string empID, string roleCd) {
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest();
            inValue.ds = ds;
            inValue.empID = empID;
            inValue.roleCd = roleCd;
            EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetNewEmpRoleRt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtResponse> GetNewEmpRoleRtAsync(EpicWAS.Epicor.EmpBasicSvc.GetNewEmpRoleRtRequest request) {
            return base.Channel.GetNewEmpRoleRtAsync(request);
        }
        
        public void DeleteByID(string empID) {
            base.Channel.DeleteByID(empID);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(string empID) {
            return base.Channel.DeleteByIDAsync(empID);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetByID(string empID) {
            return base.Channel.GetByID(empID);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetByIDAsync(string empID) {
            return base.Channel.GetByIDAsync(empID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetListResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetList(EpicWAS.Epicor.EmpBasicSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.EmpBasicSvc.GetListRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.EmpBasicSvc.GetListResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.EmpBasicSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.GetRowsResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.GetRows(EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetRows(string whereClauseEmpBasic, string whereClauseEmpBasicAttch, string whereClauseEmpLabExpRate, string whereClauseEmpCal, string whereClausePartner, string whereClauseResourceCal, string whereClauseEmpRole, string whereClauseEntityGLC, string whereClauseEmpRoleRt, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest();
            inValue.whereClauseEmpBasic = whereClauseEmpBasic;
            inValue.whereClauseEmpBasicAttch = whereClauseEmpBasicAttch;
            inValue.whereClauseEmpLabExpRate = whereClauseEmpLabExpRate;
            inValue.whereClauseEmpCal = whereClauseEmpCal;
            inValue.whereClausePartner = whereClausePartner;
            inValue.whereClauseResourceCal = whereClauseResourceCal;
            inValue.whereClauseEmpRole = whereClauseEmpRole;
            inValue.whereClauseEntityGLC = whereClauseEntityGLC;
            inValue.whereClauseEmpRoleRt = whereClauseEmpRoleRt;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.EmpBasicSvc.GetRowsResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.EmpBasicSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.UpdateResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.Update(EpicWAS.Epicor.EmpBasicSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicWAS.Epicor.EmpBasicSvc.EmpBasicTableset ds) {
            EpicWAS.Epicor.EmpBasicSvc.UpdateRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.UpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.EmpBasicSvc.UpdateResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.EmpBasicSvc.UpdateExtResponse EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract.UpdateExt(EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicWAS.Epicor.EmpBasicSvc.BOUpdErrorTableset UpdateExt(ref EpicWAS.Epicor.EmpBasicSvc.UpdExtEmpBasicTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest inValue = new EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicWAS.Epicor.EmpBasicSvc.UpdateExtResponse retVal = ((EpicWAS.Epicor.EmpBasicSvc.EmpBasicSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.EmpBasicSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.EmpBasicSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
    }
}
