//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.ReportQtySvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicWAS.Epicor.ReportQtySvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReportQtyTableset : EpicWAS.Epicor.ReportQtySvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyTable ReportQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipTable ReportQtyEquipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyPartTable ReportQtyPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTable ReportQty {
            get {
                return this.ReportQtyField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportQtyField, value) != true)) {
                    this.ReportQtyField = value;
                    this.RaisePropertyChanged("ReportQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipTable ReportQtyEquip {
            get {
                return this.ReportQtyEquipField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportQtyEquipField, value) != true)) {
                    this.ReportQtyEquipField = value;
                    this.RaisePropertyChanged("ReportQtyEquip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyPartTable ReportQtyPart {
            get {
                return this.ReportQtyPartField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportQtyPartField, value) != true)) {
                    this.ReportQtyPartField = value;
                    this.RaisePropertyChanged("ReportQtyPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.ReportQtySvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReportQtyTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReportQtyRow")]
    [System.SerializableAttribute()]
    public class ReportQtyTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.ReportQtyRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReportQtyEquipTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReportQtyEquipRow")]
    [System.SerializableAttribute()]
    public class ReportQtyEquipTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReportQtyPartTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReportQtyPartRow")]
    [System.SerializableAttribute()]
    public class ReportQtyPartTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.SNFormatRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyPartTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorExceptionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.IceRow))]
    public partial class ExtensionRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.ReportQtySvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReportQtyRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblySeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClockInDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClockinTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CompletedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompletedQtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCurrentQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableNextOprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrintTagsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableReqOprTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRequestMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NextAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NextOprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OprDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OprSeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutputBinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutputWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrevQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintPCIDContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequestMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGrpDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceGrpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceIDDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagInputBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagInputWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TagTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblySeqDescription {
            get {
                return this.AssemblySeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblySeqDescriptionField, value) != true)) {
                    this.AssemblySeqDescriptionField = value;
                    this.RaisePropertyChanged("AssemblySeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClockInDate {
            get {
                return this.ClockInDateField;
            }
            set {
                if ((this.ClockInDateField.Equals(value) != true)) {
                    this.ClockInDateField = value;
                    this.RaisePropertyChanged("ClockInDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClockinTime {
            get {
                return this.ClockinTimeField;
            }
            set {
                if ((this.ClockinTimeField.Equals(value) != true)) {
                    this.ClockinTimeField = value;
                    this.RaisePropertyChanged("ClockinTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CompletedQty {
            get {
                return this.CompletedQtyField;
            }
            set {
                if ((this.CompletedQtyField.Equals(value) != true)) {
                    this.CompletedQtyField = value;
                    this.RaisePropertyChanged("CompletedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompletedQtyUOM {
            get {
                return this.CompletedQtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.CompletedQtyUOMField, value) != true)) {
                    this.CompletedQtyUOMField = value;
                    this.RaisePropertyChanged("CompletedQtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentQty {
            get {
                return this.CurrentQtyField;
            }
            set {
                if ((this.CurrentQtyField.Equals(value) != true)) {
                    this.CurrentQtyField = value;
                    this.RaisePropertyChanged("CurrentQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentUOM {
            get {
                return this.CurrentUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUOMField, value) != true)) {
                    this.CurrentUOMField = value;
                    this.RaisePropertyChanged("CurrentUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCurrentQty {
            get {
                return this.EnableCurrentQtyField;
            }
            set {
                if ((this.EnableCurrentQtyField.Equals(value) != true)) {
                    this.EnableCurrentQtyField = value;
                    this.RaisePropertyChanged("EnableCurrentQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInspection {
            get {
                return this.EnableInspectionField;
            }
            set {
                if ((this.EnableInspectionField.Equals(value) != true)) {
                    this.EnableInspectionField = value;
                    this.RaisePropertyChanged("EnableInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableLot {
            get {
                return this.EnableLotField;
            }
            set {
                if ((this.EnableLotField.Equals(value) != true)) {
                    this.EnableLotField = value;
                    this.RaisePropertyChanged("EnableLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableNextOprSeq {
            get {
                return this.EnableNextOprSeqField;
            }
            set {
                if ((this.EnableNextOprSeqField.Equals(value) != true)) {
                    this.EnableNextOprSeqField = value;
                    this.RaisePropertyChanged("EnableNextOprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePCID {
            get {
                return this.EnablePCIDField;
            }
            set {
                if ((this.EnablePCIDField.Equals(value) != true)) {
                    this.EnablePCIDField = value;
                    this.RaisePropertyChanged("EnablePCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrintTagsList {
            get {
                return this.EnablePrintTagsListField;
            }
            set {
                if ((this.EnablePrintTagsListField.Equals(value) != true)) {
                    this.EnablePrintTagsListField = value;
                    this.RaisePropertyChanged("EnablePrintTagsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableReqOprTag {
            get {
                return this.EnableReqOprTagField;
            }
            set {
                if ((this.EnableReqOprTagField.Equals(value) != true)) {
                    this.EnableReqOprTagField = value;
                    this.RaisePropertyChanged("EnableReqOprTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRequestMove {
            get {
                return this.EnableRequestMoveField;
            }
            set {
                if ((this.EnableRequestMoveField.Equals(value) != true)) {
                    this.EnableRequestMoveField = value;
                    this.RaisePropertyChanged("EnableRequestMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSN {
            get {
                return this.EnableSNField;
            }
            set {
                if ((this.EnableSNField.Equals(value) != true)) {
                    this.EnableSNField = value;
                    this.RaisePropertyChanged("EnableSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextAssemblySeq {
            get {
                return this.NextAssemblySeqField;
            }
            set {
                if ((this.NextAssemblySeqField.Equals(value) != true)) {
                    this.NextAssemblySeqField = value;
                    this.RaisePropertyChanged("NextAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextOprSeq {
            get {
                return this.NextOprSeqField;
            }
            set {
                if ((this.NextOprSeqField.Equals(value) != true)) {
                    this.NextOprSeqField = value;
                    this.RaisePropertyChanged("NextOprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OprDescription {
            get {
                return this.OprDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OprDescriptionField, value) != true)) {
                    this.OprDescriptionField = value;
                    this.RaisePropertyChanged("OprDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OprSeq {
            get {
                return this.OprSeqField;
            }
            set {
                if ((this.OprSeqField.Equals(value) != true)) {
                    this.OprSeqField = value;
                    this.RaisePropertyChanged("OprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OprSeqDescription {
            get {
                return this.OprSeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OprSeqDescriptionField, value) != true)) {
                    this.OprSeqDescriptionField = value;
                    this.RaisePropertyChanged("OprSeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputBin {
            get {
                return this.OutputBinField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputBinField, value) != true)) {
                    this.OutputBinField = value;
                    this.RaisePropertyChanged("OutputBin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputWarehouse {
            get {
                return this.OutputWarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputWarehouseField, value) != true)) {
                    this.OutputWarehouseField = value;
                    this.RaisePropertyChanged("OutputWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrevQty {
            get {
                return this.PrevQtyField;
            }
            set {
                if ((this.PrevQtyField.Equals(value) != true)) {
                    this.PrevQtyField = value;
                    this.RaisePropertyChanged("PrevQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevUOM {
            get {
                return this.PrevUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevUOMField, value) != true)) {
                    this.PrevUOMField = value;
                    this.RaisePropertyChanged("PrevUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrintPCIDContents {
            get {
                return this.PrintPCIDContentsField;
            }
            set {
                if ((this.PrintPCIDContentsField.Equals(value) != true)) {
                    this.PrintPCIDContentsField = value;
                    this.RaisePropertyChanged("PrintPCIDContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestMove {
            get {
                return this.RequestMoveField;
            }
            set {
                if ((this.RequestMoveField.Equals(value) != true)) {
                    this.RequestMoveField = value;
                    this.RaisePropertyChanged("RequestMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGrpDesc {
            get {
                return this.ResourceGrpDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGrpDescField, value) != true)) {
                    this.ResourceGrpDescField = value;
                    this.RaisePropertyChanged("ResourceGrpDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceGrpID {
            get {
                return this.ResourceGrpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceGrpIDField, value) != true)) {
                    this.ResourceGrpIDField = value;
                    this.RaisePropertyChanged("ResourceGrpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceID {
            get {
                return this.ResourceIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDField, value) != true)) {
                    this.ResourceIDField = value;
                    this.RaisePropertyChanged("ResourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceIDDesc {
            get {
                return this.ResourceIDDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceIDDescField, value) != true)) {
                    this.ResourceIDDescField = value;
                    this.RaisePropertyChanged("ResourceIDDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagDescription {
            get {
                return this.TagDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TagDescriptionField, value) != true)) {
                    this.TagDescriptionField = value;
                    this.RaisePropertyChanged("TagDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagIUM {
            get {
                return this.TagIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.TagIUMField, value) != true)) {
                    this.TagIUMField = value;
                    this.RaisePropertyChanged("TagIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagInputBinNum {
            get {
                return this.TagInputBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TagInputBinNumField, value) != true)) {
                    this.TagInputBinNumField = value;
                    this.RaisePropertyChanged("TagInputBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagInputWhse {
            get {
                return this.TagInputWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.TagInputWhseField, value) != true)) {
                    this.TagInputWhseField = value;
                    this.RaisePropertyChanged("TagInputWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagPart {
            get {
                return this.TagPartField;
            }
            set {
                if ((object.ReferenceEquals(this.TagPartField, value) != true)) {
                    this.TagPartField = value;
                    this.RaisePropertyChanged("TagPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagRevisionNum {
            get {
                return this.TagRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TagRevisionNumField, value) != true)) {
                    this.TagRevisionNumField = value;
                    this.RaisePropertyChanged("TagRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagType {
            get {
                return this.TagTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TagTypeField, value) != true)) {
                    this.TagTypeField = value;
                    this.RaisePropertyChanged("TagType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalQty {
            get {
                return this.TotalQtyField;
            }
            set {
                if ((this.TotalQtyField.Equals(value) != true)) {
                    this.TotalQtyField = value;
                    this.RaisePropertyChanged("TotalQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalUOM {
            get {
                return this.TotalUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalUOMField, value) != true)) {
                    this.TotalUOMField = value;
                    this.RaisePropertyChanged("TotalUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyEquipRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReportQtyEquipRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentMeterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborDtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborHedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaborMeterOptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeterUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyEquipRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentMeter {
            get {
                return this.CurrentMeterField;
            }
            set {
                if ((this.CurrentMeterField.Equals(value) != true)) {
                    this.CurrentMeterField = value;
                    this.RaisePropertyChanged("CurrentMeter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipID {
            get {
                return this.EquipIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipIDField, value) != true)) {
                    this.EquipIDField = value;
                    this.RaisePropertyChanged("EquipID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborDtlSeq {
            get {
                return this.LaborDtlSeqField;
            }
            set {
                if ((this.LaborDtlSeqField.Equals(value) != true)) {
                    this.LaborDtlSeqField = value;
                    this.RaisePropertyChanged("LaborDtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborHedSeq {
            get {
                return this.LaborHedSeqField;
            }
            set {
                if ((this.LaborHedSeqField.Equals(value) != true)) {
                    this.LaborHedSeqField = value;
                    this.RaisePropertyChanged("LaborHedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaborMeterOpt {
            get {
                return this.LaborMeterOptField;
            }
            set {
                if ((object.ReferenceEquals(this.LaborMeterOptField, value) != true)) {
                    this.LaborMeterOptField = value;
                    this.RaisePropertyChanged("LaborMeterOpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeterUOM {
            get {
                return this.MeterUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.MeterUOMField, value) != true)) {
                    this.MeterUOMField = value;
                    this.RaisePropertyChanged("MeterUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyPartRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReportQtyPartRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PrevQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrevUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequestMoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyPartRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentQty {
            get {
                return this.CurrentQtyField;
            }
            set {
                if ((this.CurrentQtyField.Equals(value) != true)) {
                    this.CurrentQtyField = value;
                    this.RaisePropertyChanged("CurrentQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentUOM {
            get {
                return this.CurrentUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUOMField, value) != true)) {
                    this.CurrentUOMField = value;
                    this.RaisePropertyChanged("CurrentUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PrevQty {
            get {
                return this.PrevQtyField;
            }
            set {
                if ((this.PrevQtyField.Equals(value) != true)) {
                    this.PrevQtyField = value;
                    this.RaisePropertyChanged("PrevQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrevUOM {
            get {
                return this.PrevUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PrevUOMField, value) != true)) {
                    this.PrevUOMField = value;
                    this.RaisePropertyChanged("PrevUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestMove {
            get {
                return this.RequestMoveField;
            }
            set {
                if ((this.RequestMoveField.Equals(value) != true)) {
                    this.RequestMoveField = value;
                    this.RaisePropertyChanged("RequestMove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalQty {
            get {
                return this.TotalQtyField;
            }
            set {
                if ((this.TotalQtyField.Equals(value) != true)) {
                    this.TotalQtyField = value;
                    this.RaisePropertyChanged("TotalQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalUOM {
            get {
                return this.TotalUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalUOMField, value) != true)) {
                    this.TotalUOMField = value;
                    this.RaisePropertyChanged("TotalUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicWAS.Epicor.ReportQtySvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ReportQtyRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalQty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextAssemblySeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextOprSeq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGrpDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprDescription = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceGrpID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestMove = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableReqOprTag = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagType = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagPart = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagRevisionNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagDescription = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagIUM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagInputWhse = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TagInputBinNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevQty = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResourceIDDesc = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableCurrentQty = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableRequestMove = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentUOM = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevUOM = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalUOM = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableInspection = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSN = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrintTagsList = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClockInDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClockinTime = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableNextOprSeq = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompletedQty = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompletedQtyUOM = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePCID = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutputBin = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutputWarehouse = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableLot = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintPCIDContents = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeqDescription = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprSeqDescription = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 48,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyEquipRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ReportQtyEquipRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EquipID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentMeter = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hours = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MeterUOM = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Qty = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborDtlSeq = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborHedSeq = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborMeterOpt = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 11,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQtyPartRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ReportQtyPartRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentQty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevQty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalQty = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestMove = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentUOM = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrevUOM = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalUOM = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:ReportQty", ConfigurationName="Epicor.ReportQtySvc.ReportQtySvcContract")]
    public interface ReportQtySvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/CheckInspResults", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/CheckInspResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/CheckInspResultsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="inspectionOK")]
        bool CheckInspResults(string ipJobNum, int ipAssemblySeq, int ipOprSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/CheckInspResults", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/CheckInspResultsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="inspectionOK")]
        System.Threading.Tasks.Task<bool> CheckInspResultsAsync(string ipJobNum, int ipAssemblySeq, int ipOprSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/DeleteLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/DeleteLaborEquipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/DeleteLaborEquipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipResponse DeleteLaborEquip(EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/DeleteLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/DeleteLaborEquipResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipResponse> DeleteLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetNewLaborEquipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewLaborEquipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipResponse GetNewLaborEquip(EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetNewLaborEquipResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipResponse> GetNewLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewReportQty", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetNewReportQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewReportQtyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset GetNewReportQty(string empID, int DtlLaborHedSeq, int DtlLaborDtlSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetNewReportQty", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetNewReportQtyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset> GetNewReportQtyAsync(string empID, int DtlLaborHedSeq, int DtlLaborDtlSeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeAsmSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeAsmSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeAsmSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqResponse OnChangeAsmSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeAsmSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeAsmSeqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqResponse> OnChangeAsmSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeEquipID", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeEquipIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeEquipIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDResponse OnChangeEquipID(EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeEquipID", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeEquipIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDResponse> OnChangeEquipIDAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeJobNum", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeJobNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeJobNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumResponse OnChangeJobNum(EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeJobNum", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeJobNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumResponse> OnChangeJobNumAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeNextOprSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeNextOprSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeNextOprSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqResponse OnChangeNextOprSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeNextOprSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeNextOprSeqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqResponse> OnChangeNextOprSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeOprSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeOprSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeOprSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqResponse OnChangeOprSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeOprSeq", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeOprSeqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqResponse> OnChangeOprSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangePCID", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangePCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangePCIDResponse OnChangePCID(EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangePCID", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangePCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangePCIDResponse> OnChangePCIDAsync(EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeResource", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeResourceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeResourceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.OnChangeResourceResponse OnChangeResource(EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeResource", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/OnChangeResourceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeResourceResponse> OnChangeResourceAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ReportQuantity", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ReportQuantityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/ReportQuantityEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.ReportQuantityResponse ReportQuantity(EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ReportQuantity", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ReportQuantityResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ReportQuantityResponse> ReportQuantityAsync(EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/UpdateLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/UpdateLaborEquipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/UpdateLaborEquipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipResponse UpdateLaborEquip(EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/UpdateLaborEquip", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/UpdateLaborEquipResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipResponse> UpdateLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSerialBeforeSelect", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSerialBeforeSelectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSerialBeforeSelectEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectResponse ValidateSerialBeforeSelect(EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSerialBeforeSelect", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSerialBeforeSelectResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectResponse> ValidateSerialBeforeSelectAsync(EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetSelectSerialNumbersParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/GetSelectSerialNumbersParamsEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsResponse GetSelectSerialNumbersParams(EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/GetSelectSerialNumbersParamsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsResponse> GetSelectSerialNumbersParamsAsync(EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSN", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReportQtySvc.EpicorFaultDetail), Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReportQtySvc.ValidateSNResponse ValidateSN(EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSN", ReplyAction="Erp:BO:ReportQty/ReportQtySvcContract/ValidateSNResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteLaborEquip", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class DeleteLaborEquipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string empID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public string equipID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public int hedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=3)]
        public int dtlSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=4)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public DeleteLaborEquipRequest() {
        }
        
        public DeleteLaborEquipRequest(string empID, string equipID, int hedSeq, int dtlSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.empID = empID;
            this.equipID = equipID;
            this.hedSeq = hedSeq;
            this.dtlSeq = dtlSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteLaborEquipResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class DeleteLaborEquipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public DeleteLaborEquipResponse() {
        }
        
        public DeleteLaborEquipResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewLaborEquip", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class GetNewLaborEquipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string empID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public GetNewLaborEquipRequest() {
        }
        
        public GetNewLaborEquipRequest(string empID, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.empID = empID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewLaborEquipResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class GetNewLaborEquipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public GetNewLaborEquipResponse() {
        }
        
        public GetNewLaborEquipResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAsmSeq", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeAsmSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public int assemblySeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeAsmSeqRequest() {
        }
        
        public OnChangeAsmSeqRequest(int assemblySeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.assemblySeq = assemblySeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAsmSeqResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeAsmSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeAsmSeqResponse() {
        }
        
        public OnChangeAsmSeqResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeEquipID", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeEquipIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string equipID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public int DtlLaborHedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public int DtlLaborDtlSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=3)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeEquipIDRequest() {
        }
        
        public OnChangeEquipIDRequest(string equipID, int DtlLaborHedSeq, int DtlLaborDtlSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.equipID = equipID;
            this.DtlLaborHedSeq = DtlLaborHedSeq;
            this.DtlLaborDtlSeq = DtlLaborDtlSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeEquipIDResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeEquipIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeEquipIDResponse() {
        }
        
        public OnChangeEquipIDResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNum", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeJobNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string jobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeJobNumRequest() {
        }
        
        public OnChangeJobNumRequest(string jobNum, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.jobNum = jobNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNumResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeJobNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeJobNumResponse() {
        }
        
        public OnChangeJobNumResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeNextOprSeq", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeNextOprSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public int nextOprSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeNextOprSeqRequest() {
        }
        
        public OnChangeNextOprSeqRequest(int nextOprSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.nextOprSeq = nextOprSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeNextOprSeqResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeNextOprSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeNextOprSeqResponse() {
        }
        
        public OnChangeNextOprSeqResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOprSeq", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeOprSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public int oprSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeOprSeqRequest() {
        }
        
        public OnChangeOprSeqRequest(int oprSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.oprSeq = oprSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOprSeqResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeOprSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeOprSeqResponse() {
        }
        
        public OnChangeOprSeqResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCID", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangePCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangePCIDRequest() {
        }
        
        public OnChangePCIDRequest(string pcid, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.pcid = pcid;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangePCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangePCIDResponse() {
        }
        
        public OnChangePCIDResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResource", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeResourceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string resourceID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeResourceRequest() {
        }
        
        public OnChangeResourceRequest(string resourceID, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.resourceID = resourceID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeResourceResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class OnChangeResourceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public OnChangeResourceResponse() {
        }
        
        public OnChangeResourceResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReportQuantity", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ReportQuantityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public int hedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public int dtlSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public ReportQuantityRequest() {
        }
        
        public ReportQuantityRequest(int hedSeq, int dtlSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.hedSeq = hedSeq;
            this.dtlSeq = dtlSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReportQuantityResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ReportQuantityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string opMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public ReportQuantityResponse() {
        }
        
        public ReportQuantityResponse(string opMessage, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.opMessage = opMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateLaborEquip", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class UpdateLaborEquipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public string empID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public string equipID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public int hedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=3)]
        public int dtlSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=4)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public UpdateLaborEquipRequest() {
        }
        
        public UpdateLaborEquipRequest(string empID, string equipID, int hedSeq, int dtlSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.empID = empID;
            this.equipID = equipID;
            this.hedSeq = hedSeq;
            this.dtlSeq = dtlSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateLaborEquipResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class UpdateLaborEquipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public UpdateLaborEquipResponse() {
        }
        
        public UpdateLaborEquipResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSerialBeforeSelect", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ValidateSerialBeforeSelectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public int dtlLaborHedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public int dtlLaborDtlSeq;
        
        public ValidateSerialBeforeSelectRequest() {
        }
        
        public ValidateSerialBeforeSelectRequest(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, int dtlLaborHedSeq, int dtlLaborDtlSeq) {
            this.ds = ds;
            this.dtlLaborHedSeq = dtlLaborHedSeq;
            this.dtlLaborDtlSeq = dtlLaborDtlSeq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSerialBeforeSelectResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ValidateSerialBeforeSelectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public string notEnoughSerials;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public decimal totSNReq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=3)]
        public decimal totNewSNReq;
        
        public ValidateSerialBeforeSelectResponse() {
        }
        
        public ValidateSerialBeforeSelectResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, string notEnoughSerials, decimal totSNReq, decimal totNewSNReq) {
            this.ds = ds;
            this.notEnoughSerials = notEnoughSerials;
            this.totSNReq = totSNReq;
            this.totNewSNReq = totNewSNReq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSelectSerialNumbersParams", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class GetSelectSerialNumbersParamsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public int hedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public int dtlSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public GetSelectSerialNumbersParamsRequest() {
        }
        
        public GetSelectSerialNumbersParamsRequest(int hedSeq, int dtlSeq, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.hedSeq = hedSeq;
            this.dtlSeq = dtlSeq;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSelectSerialNumbersParamsResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class GetSelectSerialNumbersParamsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParamsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        public GetSelectSerialNumbersParamsResponse() {
        }
        
        public GetSelectSerialNumbersParamsResponse(EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParamsResult, EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            this.GetSelectSerialNumbersParamsResult = GetSelectSerialNumbersParamsResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSN", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ValidateSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=2)]
        public int hedSeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=3)]
        public int dtlSeq;
        
        public ValidateSNRequest() {
        }
        
        public ValidateSNRequest(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, string serialNumber, int hedSeq, int dtlSeq) {
            this.ds = ds;
            this.serialNumber = serialNumber;
            this.hedSeq = hedSeq;
            this.dtlSeq = dtlSeq;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNResponse", WrapperNamespace="Erp:BO:ReportQty", IsWrapped=true)]
    public partial class ValidateSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=0)]
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReportQty", Order=1)]
        public bool isVoided;
        
        public ValidateSNResponse() {
        }
        
        public ValidateSNResponse(EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, bool isVoided) {
            this.ds = ds;
            this.isVoided = isVoided;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReportQtySvcContractChannel : EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportQtySvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract>, EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract {
        
        public ReportQtySvcContractClient() {
        }
        
        public ReportQtySvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportQtySvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportQtySvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportQtySvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CheckInspResults(string ipJobNum, int ipAssemblySeq, int ipOprSeq) {
            return base.Channel.CheckInspResults(ipJobNum, ipAssemblySeq, ipOprSeq);
        }
        
        public System.Threading.Tasks.Task<bool> CheckInspResultsAsync(string ipJobNum, int ipAssemblySeq, int ipOprSeq) {
            return base.Channel.CheckInspResultsAsync(ipJobNum, ipAssemblySeq, ipOprSeq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.DeleteLaborEquip(EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest request) {
            return base.Channel.DeleteLaborEquip(request);
        }
        
        public void DeleteLaborEquip(string empID, string equipID, int hedSeq, int dtlSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest inValue = new EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest();
            inValue.empID = empID;
            inValue.equipID = equipID;
            inValue.hedSeq = hedSeq;
            inValue.dtlSeq = dtlSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).DeleteLaborEquip(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipResponse> DeleteLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.DeleteLaborEquipRequest request) {
            return base.Channel.DeleteLaborEquipAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.GetNewLaborEquip(EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest request) {
            return base.Channel.GetNewLaborEquip(request);
        }
        
        public void GetNewLaborEquip(string empID, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest inValue = new EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest();
            inValue.empID = empID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).GetNewLaborEquip(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipResponse> GetNewLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.GetNewLaborEquipRequest request) {
            return base.Channel.GetNewLaborEquipAsync(request);
        }
        
        public EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset GetNewReportQty(string empID, int DtlLaborHedSeq, int DtlLaborDtlSeq) {
            return base.Channel.GetNewReportQty(empID, DtlLaborHedSeq, DtlLaborDtlSeq);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset> GetNewReportQtyAsync(string empID, int DtlLaborHedSeq, int DtlLaborDtlSeq) {
            return base.Channel.GetNewReportQtyAsync(empID, DtlLaborHedSeq, DtlLaborDtlSeq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeAsmSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest request) {
            return base.Channel.OnChangeAsmSeq(request);
        }
        
        public void OnChangeAsmSeq(int assemblySeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest();
            inValue.assemblySeq = assemblySeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeAsmSeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqResponse> OnChangeAsmSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeAsmSeqRequest request) {
            return base.Channel.OnChangeAsmSeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeEquipID(EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest request) {
            return base.Channel.OnChangeEquipID(request);
        }
        
        public void OnChangeEquipID(string equipID, int DtlLaborHedSeq, int DtlLaborDtlSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest();
            inValue.equipID = equipID;
            inValue.DtlLaborHedSeq = DtlLaborHedSeq;
            inValue.DtlLaborDtlSeq = DtlLaborDtlSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeEquipID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDResponse> OnChangeEquipIDAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeEquipIDRequest request) {
            return base.Channel.OnChangeEquipIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeJobNum(EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest request) {
            return base.Channel.OnChangeJobNum(request);
        }
        
        public void OnChangeJobNum(string jobNum, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest();
            inValue.jobNum = jobNum;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeJobNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumResponse> OnChangeJobNumAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeJobNumRequest request) {
            return base.Channel.OnChangeJobNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeNextOprSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest request) {
            return base.Channel.OnChangeNextOprSeq(request);
        }
        
        public void OnChangeNextOprSeq(int nextOprSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest();
            inValue.nextOprSeq = nextOprSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeNextOprSeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqResponse> OnChangeNextOprSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeNextOprSeqRequest request) {
            return base.Channel.OnChangeNextOprSeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeOprSeq(EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest request) {
            return base.Channel.OnChangeOprSeq(request);
        }
        
        public void OnChangeOprSeq(int oprSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest();
            inValue.oprSeq = oprSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeOprSeq(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqResponse> OnChangeOprSeqAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeOprSeqRequest request) {
            return base.Channel.OnChangeOprSeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangePCIDResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangePCID(EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest request) {
            return base.Channel.OnChangePCID(request);
        }
        
        public void OnChangePCID(string pcid, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest();
            inValue.pcid = pcid;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangePCIDResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangePCID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangePCIDResponse> OnChangePCIDAsync(EpicWAS.Epicor.ReportQtySvc.OnChangePCIDRequest request) {
            return base.Channel.OnChangePCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.OnChangeResourceResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.OnChangeResource(EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest request) {
            return base.Channel.OnChangeResource(request);
        }
        
        public void OnChangeResource(string resourceID, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest inValue = new EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest();
            inValue.resourceID = resourceID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.OnChangeResourceResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).OnChangeResource(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.OnChangeResourceResponse> OnChangeResourceAsync(EpicWAS.Epicor.ReportQtySvc.OnChangeResourceRequest request) {
            return base.Channel.OnChangeResourceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.ReportQuantityResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.ReportQuantity(EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest request) {
            return base.Channel.ReportQuantity(request);
        }
        
        public string ReportQuantity(int hedSeq, int dtlSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest inValue = new EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest();
            inValue.hedSeq = hedSeq;
            inValue.dtlSeq = dtlSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.ReportQuantityResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).ReportQuantity(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ReportQuantityResponse> ReportQuantityAsync(EpicWAS.Epicor.ReportQtySvc.ReportQuantityRequest request) {
            return base.Channel.ReportQuantityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.UpdateLaborEquip(EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest request) {
            return base.Channel.UpdateLaborEquip(request);
        }
        
        public void UpdateLaborEquip(string empID, string equipID, int hedSeq, int dtlSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest inValue = new EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest();
            inValue.empID = empID;
            inValue.equipID = equipID;
            inValue.hedSeq = hedSeq;
            inValue.dtlSeq = dtlSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).UpdateLaborEquip(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipResponse> UpdateLaborEquipAsync(EpicWAS.Epicor.ReportQtySvc.UpdateLaborEquipRequest request) {
            return base.Channel.UpdateLaborEquipAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.ValidateSerialBeforeSelect(EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest request) {
            return base.Channel.ValidateSerialBeforeSelect(request);
        }
        
        public string ValidateSerialBeforeSelect(ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, int dtlLaborHedSeq, int dtlLaborDtlSeq, out decimal totSNReq, out decimal totNewSNReq) {
            EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest inValue = new EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest();
            inValue.ds = ds;
            inValue.dtlLaborHedSeq = dtlLaborHedSeq;
            inValue.dtlLaborDtlSeq = dtlLaborDtlSeq;
            EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).ValidateSerialBeforeSelect(inValue);
            ds = retVal.ds;
            totSNReq = retVal.totSNReq;
            totNewSNReq = retVal.totNewSNReq;
            return retVal.notEnoughSerials;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectResponse> ValidateSerialBeforeSelectAsync(EpicWAS.Epicor.ReportQtySvc.ValidateSerialBeforeSelectRequest request) {
            return base.Channel.ValidateSerialBeforeSelectAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.GetSelectSerialNumbersParams(EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest request) {
            return base.Channel.GetSelectSerialNumbersParams(request);
        }
        
        public EpicWAS.Epicor.ReportQtySvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(int hedSeq, int dtlSeq, ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds) {
            EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest inValue = new EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest();
            inValue.hedSeq = hedSeq;
            inValue.dtlSeq = dtlSeq;
            inValue.ds = ds;
            EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).GetSelectSerialNumbersParams(inValue);
            ds = retVal.ds;
            return retVal.GetSelectSerialNumbersParamsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsResponse> GetSelectSerialNumbersParamsAsync(EpicWAS.Epicor.ReportQtySvc.GetSelectSerialNumbersParamsRequest request) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReportQtySvc.ValidateSNResponse EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract.ValidateSN(EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest request) {
            return base.Channel.ValidateSN(request);
        }
        
        public bool ValidateSN(ref EpicWAS.Epicor.ReportQtySvc.ReportQtyTableset ds, string serialNumber, int hedSeq, int dtlSeq) {
            EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest inValue = new EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest();
            inValue.ds = ds;
            inValue.serialNumber = serialNumber;
            inValue.hedSeq = hedSeq;
            inValue.dtlSeq = dtlSeq;
            EpicWAS.Epicor.ReportQtySvc.ValidateSNResponse retVal = ((EpicWAS.Epicor.ReportQtySvc.ReportQtySvcContract)(this)).ValidateSN(inValue);
            ds = retVal.ds;
            return retVal.isVoided;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReportQtySvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.ReportQtySvc.ValidateSNRequest request) {
            return base.Channel.ValidateSNAsync(request);
        }
    }
}
