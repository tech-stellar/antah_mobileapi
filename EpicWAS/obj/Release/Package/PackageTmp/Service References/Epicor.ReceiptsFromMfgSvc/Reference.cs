//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.ReceiptsFromMfgSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiptsFromMfgTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReceiptsFromMfgTableset : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranTable PartTranField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderTable PkgControlHeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemTable PkgControlItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranTable PartTran {
            get {
                return this.PartTranField;
            }
            set {
                if ((object.ReferenceEquals(this.PartTranField, value) != true)) {
                    this.PartTranField = value;
                    this.RaisePropertyChanged("PartTran");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderTable PkgControlHeader {
            get {
                return this.PkgControlHeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlHeaderField, value) != true)) {
                    this.PkgControlHeaderField = value;
                    this.RaisePropertyChanged("PkgControlHeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemTable PkgControlItem {
            get {
                return this.PkgControlItemField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlItemField, value) != true)) {
                    this.PkgControlItemField = value;
                    this.RaisePropertyChanged("PkgControlItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiptsFromMfgJobAsmblTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReceiptsFromMfgJobAsmblTableset : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTable ReceiptsFromMfgJobAsmblField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTable ReceiptsFromMfgJobAsmbl {
            get {
                return this.ReceiptsFromMfgJobAsmblField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptsFromMfgJobAsmblField, value) != true)) {
                    this.ReceiptsFromMfgJobAsmblField = value;
                    this.RaisePropertyChanged("ReceiptsFromMfgJobAsmbl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedReceiptsJobAsmblTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedReceiptsJobAsmblTableset : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblTable SelectedJobAsmblField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblTable SelectedJobAsmbl {
            get {
                return this.SelectedJobAsmblField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedJobAsmblField, value) != true)) {
                    this.SelectedJobAsmblField = value;
                    this.RaisePropertyChanged("SelectedJobAsmbl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedReceiptsPCIDTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedReceiptsPCIDTableset : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsTable PCIDReceiptsParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedTable PCIDReceiptsSelectedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsTable PCIDReceiptsParams {
            get {
                return this.PCIDReceiptsParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDReceiptsParamsField, value) != true)) {
                    this.PCIDReceiptsParamsField = value;
                    this.RaisePropertyChanged("PCIDReceiptsParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedTable PCIDReceiptsSelected {
            get {
                return this.PCIDReceiptsSelectedField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDReceiptsSelectedField, value) != true)) {
                    this.PCIDReceiptsSelectedField = value;
                    this.RaisePropertyChanged("PCIDReceiptsSelected");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PCIDReceiptsParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PCIDReceiptsParamsRow")]
    [System.SerializableAttribute()]
    public class PCIDReceiptsParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PCIDReceiptsSelectedTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PCIDReceiptsSelectedRow")]
    [System.SerializableAttribute()]
    public class PCIDReceiptsSelectedTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorExceptionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRowColumnOrder))]
    public partial class ExtensionRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PCIDReceiptsParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PCIDReceiptsParamsRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableReceiveAllPCIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Plant2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Plant2NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreviousPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableReceiveAllPCIDs {
            get {
                return this.EnableReceiveAllPCIDsField;
            }
            set {
                if ((this.EnableReceiveAllPCIDsField.Equals(value) != true)) {
                    this.EnableReceiveAllPCIDsField = value;
                    this.RaisePropertyChanged("EnableReceiveAllPCIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant2 {
            get {
                return this.Plant2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Plant2Field, value) != true)) {
                    this.Plant2Field = value;
                    this.RaisePropertyChanged("Plant2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant2Name {
            get {
                return this.Plant2NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Plant2NameField, value) != true)) {
                    this.Plant2NameField = value;
                    this.RaisePropertyChanged("Plant2Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreviousPCID {
            get {
                return this.PreviousPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviousPCIDField, value) != true)) {
                    this.PreviousPCIDField = value;
                    this.RaisePropertyChanged("PreviousPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranReference {
            get {
                return this.TranReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranReferenceField, value) != true)) {
                    this.TranReferenceField = value;
                    this.RaisePropertyChanged("TranReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouseCode {
            get {
                return this.WareHouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouseCodeField, value) != true)) {
                    this.WareHouseCodeField = value;
                    this.RaisePropertyChanged("WareHouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseDescription {
            get {
                return this.WarehouseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseDescriptionField, value) != true)) {
                    this.WarehouseDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PCIDReceiptsSelectedRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PCIDReceiptsSelectedRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ActTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActTransUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplyJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackLotsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ActTranQty {
            get {
                return this.ActTranQtyField;
            }
            set {
                if ((this.ActTranQtyField.Equals(value) != true)) {
                    this.ActTranQtyField = value;
                    this.RaisePropertyChanged("ActTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActTransUOM {
            get {
                return this.ActTransUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ActTransUOMField, value) != true)) {
                    this.ActTransUOMField = value;
                    this.RaisePropertyChanged("ActTransUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PCIDReceiptsSelectedRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplyJobNum {
            get {
                return this.SupplyJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyJobNumField, value) != true)) {
                    this.SupplyJobNumField = value;
                    this.RaisePropertyChanged("SupplyJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackLots {
            get {
                return this.TrackLotsField;
            }
            set {
                if ((this.TrackLotsField.Equals(value) != true)) {
                    this.TrackLotsField = value;
                    this.RaisePropertyChanged("TrackLots");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationOption {
            get {
                return this.GenerationOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationOptionField, value) != true)) {
                    this.GenerationOptionField = value;
                    this.RaisePropertyChanged("GenerationOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartTranRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PartTranRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ABTUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ActTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActTransUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdditionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AfterSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlBurdenUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlLabUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AltSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AsOfDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AsOfSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeq2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblySeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssetNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoReverseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BaseCostMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BegBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BegLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BegMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BegMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BegSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BeginQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNum2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CCMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CCYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool COSPostingReqdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CallLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CallNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostMethodDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CycleSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DIMDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DMRNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DMRNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUM2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCode2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeDimCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactor2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableFieldPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispSysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisposalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DropShipPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EpicorFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtLbrCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlBurCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlBurdenCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlLabCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlMtlCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtMtlSubCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtNonRecoverableCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtSubCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIFOActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FIFODateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FIFOSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FIFOSubSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSACallCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAEquipmentInstallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAEquipmentPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderResourceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAWarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalCalendarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiscalYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiscalYearSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromBinDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromWareHouseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FullPhysicalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal GLTranAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> GLTranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GLTransField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvAdjReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvAdjSrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InventoryTransField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvtyUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvtyUOM2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IssuedCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobMtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNum2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeq2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal JobSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JournalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JournalNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LCFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberPrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberReadOnlyFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalNumberYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoanFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNum2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MYImportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatNumLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MscNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlBurdenUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlLabUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlLbrUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlMtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MtlQueueRowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlSubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MtlUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultiEndPartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NonConfIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ODCUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OtherDivValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverRideCostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PBInvNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PCIDCollapseCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLinePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineVenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal POReceiptQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal POUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionAsmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionJHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionSPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartLotPartLotDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumAsmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumJHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Plant2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PlantCostValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlantTranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PostedToGLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ProjProcessedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyAvailToCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QtyBearingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyCompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMADispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMALineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMAReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReconcileNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RevSysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevSysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevTranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevertIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RevertStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumRevDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumRevShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SalvageQtyToDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialNoTempTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubUnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ThisTranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TranAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TranDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TranQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TranRefTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeDisplayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VarTargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorPPNumPrimPConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNumZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouse2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WareHouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dummyKeyFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ABTUID {
            get {
                return this.ABTUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ABTUIDField, value) != true)) {
                    this.ABTUIDField = value;
                    this.RaisePropertyChanged("ABTUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ActTranQty {
            get {
                return this.ActTranQtyField;
            }
            set {
                if ((this.ActTranQtyField.Equals(value) != true)) {
                    this.ActTranQtyField = value;
                    this.RaisePropertyChanged("ActTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActTransUOM {
            get {
                return this.ActTransUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ActTransUOMField, value) != true)) {
                    this.ActTransUOMField = value;
                    this.RaisePropertyChanged("ActTransUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionNum {
            get {
                return this.ActionNumField;
            }
            set {
                if ((this.ActionNumField.Equals(value) != true)) {
                    this.ActionNumField = value;
                    this.RaisePropertyChanged("ActionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdditionNum {
            get {
                return this.AdditionNumField;
            }
            set {
                if ((this.AdditionNumField.Equals(value) != true)) {
                    this.AdditionNumField = value;
                    this.RaisePropertyChanged("AdditionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterBurUnitCost {
            get {
                return this.AfterBurUnitCostField;
            }
            set {
                if ((this.AfterBurUnitCostField.Equals(value) != true)) {
                    this.AfterBurUnitCostField = value;
                    this.RaisePropertyChanged("AfterBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterLbrUnitCost {
            get {
                return this.AfterLbrUnitCostField;
            }
            set {
                if ((this.AfterLbrUnitCostField.Equals(value) != true)) {
                    this.AfterLbrUnitCostField = value;
                    this.RaisePropertyChanged("AfterLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterMtlBurUnitCost {
            get {
                return this.AfterMtlBurUnitCostField;
            }
            set {
                if ((this.AfterMtlBurUnitCostField.Equals(value) != true)) {
                    this.AfterMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("AfterMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterMtlUnitCost {
            get {
                return this.AfterMtlUnitCostField;
            }
            set {
                if ((this.AfterMtlUnitCostField.Equals(value) != true)) {
                    this.AfterMtlUnitCostField = value;
                    this.RaisePropertyChanged("AfterMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterQty {
            get {
                return this.AfterQtyField;
            }
            set {
                if ((this.AfterQtyField.Equals(value) != true)) {
                    this.AfterQtyField = value;
                    this.RaisePropertyChanged("AfterQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AfterSubUnitCost {
            get {
                return this.AfterSubUnitCostField;
            }
            set {
                if ((this.AfterSubUnitCostField.Equals(value) != true)) {
                    this.AfterSubUnitCostField = value;
                    this.RaisePropertyChanged("AfterSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltBurUnitCost {
            get {
                return this.AltBurUnitCostField;
            }
            set {
                if ((this.AltBurUnitCostField.Equals(value) != true)) {
                    this.AltBurUnitCostField = value;
                    this.RaisePropertyChanged("AltBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltExtCost {
            get {
                return this.AltExtCostField;
            }
            set {
                if ((this.AltExtCostField.Equals(value) != true)) {
                    this.AltExtCostField = value;
                    this.RaisePropertyChanged("AltExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltLbrUnitCost {
            get {
                return this.AltLbrUnitCostField;
            }
            set {
                if ((this.AltLbrUnitCostField.Equals(value) != true)) {
                    this.AltLbrUnitCostField = value;
                    this.RaisePropertyChanged("AltLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlBurUnitCost {
            get {
                return this.AltMtlBurUnitCostField;
            }
            set {
                if ((this.AltMtlBurUnitCostField.Equals(value) != true)) {
                    this.AltMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlBurdenUnitCost {
            get {
                return this.AltMtlBurdenUnitCostField;
            }
            set {
                if ((this.AltMtlBurdenUnitCostField.Equals(value) != true)) {
                    this.AltMtlBurdenUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlBurdenUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlLabUnitCost {
            get {
                return this.AltMtlLabUnitCostField;
            }
            set {
                if ((this.AltMtlLabUnitCostField.Equals(value) != true)) {
                    this.AltMtlLabUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlLabUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlMtlUnitCost {
            get {
                return this.AltMtlMtlUnitCostField;
            }
            set {
                if ((this.AltMtlMtlUnitCostField.Equals(value) != true)) {
                    this.AltMtlMtlUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlSubUnitCost {
            get {
                return this.AltMtlSubUnitCostField;
            }
            set {
                if ((this.AltMtlSubUnitCostField.Equals(value) != true)) {
                    this.AltMtlSubUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltMtlUnitCost {
            get {
                return this.AltMtlUnitCostField;
            }
            set {
                if ((this.AltMtlUnitCostField.Equals(value) != true)) {
                    this.AltMtlUnitCostField = value;
                    this.RaisePropertyChanged("AltMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AltSubUnitCost {
            get {
                return this.AltSubUnitCostField;
            }
            set {
                if ((this.AltSubUnitCostField.Equals(value) != true)) {
                    this.AltSubUnitCostField = value;
                    this.RaisePropertyChanged("AltSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AsOfDate {
            get {
                return this.AsOfDateField;
            }
            set {
                if ((this.AsOfDateField.Equals(value) != true)) {
                    this.AsOfDateField = value;
                    this.RaisePropertyChanged("AsOfDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AsOfSeq {
            get {
                return this.AsOfSeqField;
            }
            set {
                if ((this.AsOfSeqField.Equals(value) != true)) {
                    this.AsOfSeqField = value;
                    this.RaisePropertyChanged("AsOfSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq2 {
            get {
                return this.AssemblySeq2Field;
            }
            set {
                if ((this.AssemblySeq2Field.Equals(value) != true)) {
                    this.AssemblySeq2Field = value;
                    this.RaisePropertyChanged("AssemblySeq2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblySeqDescription {
            get {
                return this.AssemblySeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblySeqDescriptionField, value) != true)) {
                    this.AssemblySeqDescriptionField = value;
                    this.RaisePropertyChanged("AssemblySeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetNum {
            get {
                return this.AssetNumField;
            }
            set {
                if ((object.ReferenceEquals(this.AssetNumField, value) != true)) {
                    this.AssetNumField = value;
                    this.RaisePropertyChanged("AssetNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoReverse {
            get {
                return this.AutoReverseField;
            }
            set {
                if ((this.AutoReverseField.Equals(value) != true)) {
                    this.AutoReverseField = value;
                    this.RaisePropertyChanged("AutoReverse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BaseCostMethod {
            get {
                return this.BaseCostMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseCostMethodField, value) != true)) {
                    this.BaseCostMethodField = value;
                    this.RaisePropertyChanged("BaseCostMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BegBurUnitCost {
            get {
                return this.BegBurUnitCostField;
            }
            set {
                if ((this.BegBurUnitCostField.Equals(value) != true)) {
                    this.BegBurUnitCostField = value;
                    this.RaisePropertyChanged("BegBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BegLbrUnitCost {
            get {
                return this.BegLbrUnitCostField;
            }
            set {
                if ((this.BegLbrUnitCostField.Equals(value) != true)) {
                    this.BegLbrUnitCostField = value;
                    this.RaisePropertyChanged("BegLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BegMtlBurUnitCost {
            get {
                return this.BegMtlBurUnitCostField;
            }
            set {
                if ((this.BegMtlBurUnitCostField.Equals(value) != true)) {
                    this.BegMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("BegMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BegMtlUnitCost {
            get {
                return this.BegMtlUnitCostField;
            }
            set {
                if ((this.BegMtlUnitCostField.Equals(value) != true)) {
                    this.BegMtlUnitCostField = value;
                    this.RaisePropertyChanged("BegMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BegSubUnitCost {
            get {
                return this.BegSubUnitCostField;
            }
            set {
                if ((this.BegSubUnitCostField.Equals(value) != true)) {
                    this.BegSubUnitCostField = value;
                    this.RaisePropertyChanged("BegSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BeginQty {
            get {
                return this.BeginQtyField;
            }
            set {
                if ((this.BeginQtyField.Equals(value) != true)) {
                    this.BeginQtyField = value;
                    this.RaisePropertyChanged("BeginQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum2 {
            get {
                return this.BinNum2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BinNum2Field, value) != true)) {
                    this.BinNum2Field = value;
                    this.RaisePropertyChanged("BinNum2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinType {
            get {
                return this.BinTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BinTypeField, value) != true)) {
                    this.BinTypeField = value;
                    this.RaisePropertyChanged("BinType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BurUnitCost {
            get {
                return this.BurUnitCostField;
            }
            set {
                if ((this.BurUnitCostField.Equals(value) != true)) {
                    this.BurUnitCostField = value;
                    this.RaisePropertyChanged("BurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CCMonth {
            get {
                return this.CCMonthField;
            }
            set {
                if ((this.CCMonthField.Equals(value) != true)) {
                    this.CCMonthField = value;
                    this.RaisePropertyChanged("CCMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CCYear {
            get {
                return this.CCYearField;
            }
            set {
                if ((this.CCYearField.Equals(value) != true)) {
                    this.CCYearField = value;
                    this.RaisePropertyChanged("CCYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COSPostingReqd {
            get {
                return this.COSPostingReqdField;
            }
            set {
                if ((this.COSPostingReqdField.Equals(value) != true)) {
                    this.COSPostingReqdField = value;
                    this.RaisePropertyChanged("COSPostingReqd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallCode {
            get {
                return this.CallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CallCodeField, value) != true)) {
                    this.CallCodeField = value;
                    this.RaisePropertyChanged("CallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallLine {
            get {
                return this.CallLineField;
            }
            set {
                if ((this.CallLineField.Equals(value) != true)) {
                    this.CallLineField = value;
                    this.RaisePropertyChanged("CallLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CallLineLineDesc {
            get {
                return this.CallLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CallLineLineDescField, value) != true)) {
                    this.CallLineLineDescField = value;
                    this.RaisePropertyChanged("CallLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CallNum {
            get {
                return this.CallNumField;
            }
            set {
                if ((this.CallNumField.Equals(value) != true)) {
                    this.CallNumField = value;
                    this.RaisePropertyChanged("CallNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostID {
            get {
                return this.CostIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CostIDField, value) != true)) {
                    this.CostIDField = value;
                    this.RaisePropertyChanged("CostID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostMethod {
            get {
                return this.CostMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CostMethodField, value) != true)) {
                    this.CostMethodField = value;
                    this.RaisePropertyChanged("CostMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostMethodDisplay {
            get {
                return this.CostMethodDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.CostMethodDisplayField, value) != true)) {
                    this.CostMethodDisplayField = value;
                    this.RaisePropertyChanged("CostMethodDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Costed {
            get {
                return this.CostedField;
            }
            set {
                if ((this.CostedField.Equals(value) != true)) {
                    this.CostedField = value;
                    this.RaisePropertyChanged("Costed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CycleSeq {
            get {
                return this.CycleSeqField;
            }
            set {
                if ((this.CycleSeqField.Equals(value) != true)) {
                    this.CycleSeqField = value;
                    this.RaisePropertyChanged("CycleSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DIMDescription {
            get {
                return this.DIMDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DIMDescriptionField, value) != true)) {
                    this.DIMDescriptionField = value;
                    this.RaisePropertyChanged("DIMDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DMRNum {
            get {
                return this.DMRNumField;
            }
            set {
                if ((this.DMRNumField.Equals(value) != true)) {
                    this.DMRNumField = value;
                    this.RaisePropertyChanged("DMRNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DMRNumPartDescription {
            get {
                return this.DMRNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DMRNumPartDescriptionField, value) != true)) {
                    this.DMRNumPartDescriptionField = value;
                    this.RaisePropertyChanged("DMRNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM2 {
            get {
                return this.DUM2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DUM2Field, value) != true)) {
                    this.DUM2Field = value;
                    this.RaisePropertyChanged("DUM2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode2 {
            get {
                return this.DimCode2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DimCode2Field, value) != true)) {
                    this.DimCode2Field = value;
                    this.RaisePropertyChanged("DimCode2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCodeDimCodeDescription {
            get {
                return this.DimCodeDimCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeDimCodeDescriptionField, value) != true)) {
                    this.DimCodeDimCodeDescriptionField = value;
                    this.RaisePropertyChanged("DimCodeDimCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor2 {
            get {
                return this.DimConvFactor2Field;
            }
            set {
                if ((this.DimConvFactor2Field.Equals(value) != true)) {
                    this.DimConvFactor2Field = value;
                    this.RaisePropertyChanged("DimConvFactor2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableFieldPart {
            get {
                return this.DisableFieldPartField;
            }
            set {
                if ((this.DisableFieldPartField.Equals(value) != true)) {
                    this.DisableFieldPartField = value;
                    this.RaisePropertyChanged("DisableFieldPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispSysTime {
            get {
                return this.DispSysTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.DispSysTimeField, value) != true)) {
                    this.DispSysTimeField = value;
                    this.RaisePropertyChanged("DispSysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispUOM {
            get {
                return this.DispUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.DispUOMField, value) != true)) {
                    this.DispUOMField = value;
                    this.RaisePropertyChanged("DispUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisposalNum {
            get {
                return this.DisposalNumField;
            }
            set {
                if ((this.DisposalNumField.Equals(value) != true)) {
                    this.DisposalNumField = value;
                    this.RaisePropertyChanged("DisposalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DropShipPackSlip {
            get {
                return this.DropShipPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.DropShipPackSlipField, value) != true)) {
                    this.DropShipPackSlipField = value;
                    this.RaisePropertyChanged("DropShipPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpID {
            get {
                return this.EmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpIDField, value) != true)) {
                    this.EmpIDField = value;
                    this.RaisePropertyChanged("EmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSerialNumbers {
            get {
                return this.EnableSerialNumbersField;
            }
            set {
                if ((this.EnableSerialNumbersField.Equals(value) != true)) {
                    this.EnableSerialNumbersField = value;
                    this.RaisePropertyChanged("EnableSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EpicorFSA {
            get {
                return this.EpicorFSAField;
            }
            set {
                if ((this.EpicorFSAField.Equals(value) != true)) {
                    this.EpicorFSAField = value;
                    this.RaisePropertyChanged("EpicorFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtBurCost {
            get {
                return this.ExtBurCostField;
            }
            set {
                if ((this.ExtBurCostField.Equals(value) != true)) {
                    this.ExtBurCostField = value;
                    this.RaisePropertyChanged("ExtBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtCost {
            get {
                return this.ExtCostField;
            }
            set {
                if ((this.ExtCostField.Equals(value) != true)) {
                    this.ExtCostField = value;
                    this.RaisePropertyChanged("ExtCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtLbrCost {
            get {
                return this.ExtLbrCostField;
            }
            set {
                if ((this.ExtLbrCostField.Equals(value) != true)) {
                    this.ExtLbrCostField = value;
                    this.RaisePropertyChanged("ExtLbrCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlBurCost {
            get {
                return this.ExtMtlBurCostField;
            }
            set {
                if ((this.ExtMtlBurCostField.Equals(value) != true)) {
                    this.ExtMtlBurCostField = value;
                    this.RaisePropertyChanged("ExtMtlBurCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlBurdenCost {
            get {
                return this.ExtMtlBurdenCostField;
            }
            set {
                if ((this.ExtMtlBurdenCostField.Equals(value) != true)) {
                    this.ExtMtlBurdenCostField = value;
                    this.RaisePropertyChanged("ExtMtlBurdenCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlCost {
            get {
                return this.ExtMtlCostField;
            }
            set {
                if ((this.ExtMtlCostField.Equals(value) != true)) {
                    this.ExtMtlCostField = value;
                    this.RaisePropertyChanged("ExtMtlCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlLabCost {
            get {
                return this.ExtMtlLabCostField;
            }
            set {
                if ((this.ExtMtlLabCostField.Equals(value) != true)) {
                    this.ExtMtlLabCostField = value;
                    this.RaisePropertyChanged("ExtMtlLabCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlMtlCost {
            get {
                return this.ExtMtlMtlCostField;
            }
            set {
                if ((this.ExtMtlMtlCostField.Equals(value) != true)) {
                    this.ExtMtlMtlCostField = value;
                    this.RaisePropertyChanged("ExtMtlMtlCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtMtlSubCost {
            get {
                return this.ExtMtlSubCostField;
            }
            set {
                if ((this.ExtMtlSubCostField.Equals(value) != true)) {
                    this.ExtMtlSubCostField = value;
                    this.RaisePropertyChanged("ExtMtlSubCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtNonRecoverableCost {
            get {
                return this.ExtNonRecoverableCostField;
            }
            set {
                if ((this.ExtNonRecoverableCostField.Equals(value) != true)) {
                    this.ExtNonRecoverableCostField = value;
                    this.RaisePropertyChanged("ExtNonRecoverableCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtSubCost {
            get {
                return this.ExtSubCostField;
            }
            set {
                if ((this.ExtSubCostField.Equals(value) != true)) {
                    this.ExtSubCostField = value;
                    this.RaisePropertyChanged("ExtSubCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIFOAction {
            get {
                return this.FIFOActionField;
            }
            set {
                if ((object.ReferenceEquals(this.FIFOActionField, value) != true)) {
                    this.FIFOActionField = value;
                    this.RaisePropertyChanged("FIFOAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FIFODate {
            get {
                return this.FIFODateField;
            }
            set {
                if ((this.FIFODateField.Equals(value) != true)) {
                    this.FIFODateField = value;
                    this.RaisePropertyChanged("FIFODate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FIFOSeq {
            get {
                return this.FIFOSeqField;
            }
            set {
                if ((this.FIFOSeqField.Equals(value) != true)) {
                    this.FIFOSeqField = value;
                    this.RaisePropertyChanged("FIFOSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FIFOSubSeq {
            get {
                return this.FIFOSubSeqField;
            }
            set {
                if ((this.FIFOSubSeqField.Equals(value) != true)) {
                    this.FIFOSubSeqField = value;
                    this.RaisePropertyChanged("FIFOSubSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAAction {
            get {
                return this.FSAActionField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAActionField, value) != true)) {
                    this.FSAActionField = value;
                    this.RaisePropertyChanged("FSAAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSACallCode {
            get {
                return this.FSACallCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSACallCodeField, value) != true)) {
                    this.FSACallCodeField = value;
                    this.RaisePropertyChanged("FSACallCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAContractCode {
            get {
                return this.FSAContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAContractCodeField, value) != true)) {
                    this.FSAContractCodeField = value;
                    this.RaisePropertyChanged("FSAContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAContractNum {
            get {
                return this.FSAContractNumField;
            }
            set {
                if ((this.FSAContractNumField.Equals(value) != true)) {
                    this.FSAContractNumField = value;
                    this.RaisePropertyChanged("FSAContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAEmpID {
            get {
                return this.FSAEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAEmpIDField, value) != true)) {
                    this.FSAEmpIDField = value;
                    this.RaisePropertyChanged("FSAEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAEquipmentInstallID {
            get {
                return this.FSAEquipmentInstallIDField;
            }
            set {
                if ((this.FSAEquipmentInstallIDField.Equals(value) != true)) {
                    this.FSAEquipmentInstallIDField = value;
                    this.RaisePropertyChanged("FSAEquipmentInstallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAEquipmentPartNum {
            get {
                return this.FSAEquipmentPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAEquipmentPartNumField, value) != true)) {
                    this.FSAEquipmentPartNumField = value;
                    this.RaisePropertyChanged("FSAEquipmentPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderNum {
            get {
                return this.FSAServiceOrderNumField;
            }
            set {
                if ((this.FSAServiceOrderNumField.Equals(value) != true)) {
                    this.FSAServiceOrderNumField = value;
                    this.RaisePropertyChanged("FSAServiceOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderResourceNum {
            get {
                return this.FSAServiceOrderResourceNumField;
            }
            set {
                if ((this.FSAServiceOrderResourceNumField.Equals(value) != true)) {
                    this.FSAServiceOrderResourceNumField = value;
                    this.RaisePropertyChanged("FSAServiceOrderResourceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAWarrantyCode {
            get {
                return this.FSAWarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAWarrantyCodeField, value) != true)) {
                    this.FSAWarrantyCodeField = value;
                    this.RaisePropertyChanged("FSAWarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalCalendarID {
            get {
                return this.FiscalCalendarIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalCalendarIDField, value) != true)) {
                    this.FiscalCalendarIDField = value;
                    this.RaisePropertyChanged("FiscalCalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalPeriod {
            get {
                return this.FiscalPeriodField;
            }
            set {
                if ((this.FiscalPeriodField.Equals(value) != true)) {
                    this.FiscalPeriodField = value;
                    this.RaisePropertyChanged("FiscalPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiscalYear {
            get {
                return this.FiscalYearField;
            }
            set {
                if ((this.FiscalYearField.Equals(value) != true)) {
                    this.FiscalYearField = value;
                    this.RaisePropertyChanged("FiscalYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiscalYearSuffix {
            get {
                return this.FiscalYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.FiscalYearSuffixField, value) != true)) {
                    this.FiscalYearSuffixField = value;
                    this.RaisePropertyChanged("FiscalYearSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromBinDescription {
            get {
                return this.FromBinDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FromBinDescriptionField, value) != true)) {
                    this.FromBinDescriptionField = value;
                    this.RaisePropertyChanged("FromBinDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPlantName {
            get {
                return this.FromPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPlantNameField, value) != true)) {
                    this.FromPlantNameField = value;
                    this.RaisePropertyChanged("FromPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromWareHouseDescription {
            get {
                return this.FromWareHouseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FromWareHouseDescriptionField, value) != true)) {
                    this.FromWareHouseDescriptionField = value;
                    this.RaisePropertyChanged("FromWareHouseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FullPhysical {
            get {
                return this.FullPhysicalField;
            }
            set {
                if ((this.FullPhysicalField.Equals(value) != true)) {
                    this.FullPhysicalField = value;
                    this.RaisePropertyChanged("FullPhysical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GLTranAmt {
            get {
                return this.GLTranAmtField;
            }
            set {
                if ((this.GLTranAmtField.Equals(value) != true)) {
                    this.GLTranAmtField = value;
                    this.RaisePropertyChanged("GLTranAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GLTranDate {
            get {
                return this.GLTranDateField;
            }
            set {
                if ((this.GLTranDateField.Equals(value) != true)) {
                    this.GLTranDateField = value;
                    this.RaisePropertyChanged("GLTranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GLTrans {
            get {
                return this.GLTransField;
            }
            set {
                if ((this.GLTransField.Equals(value) != true)) {
                    this.GLTransField = value;
                    this.RaisePropertyChanged("GLTrans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvAdjReason {
            get {
                return this.InvAdjReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.InvAdjReasonField, value) != true)) {
                    this.InvAdjReasonField = value;
                    this.RaisePropertyChanged("InvAdjReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvAdjSrc {
            get {
                return this.InvAdjSrcField;
            }
            set {
                if ((object.ReferenceEquals(this.InvAdjSrcField, value) != true)) {
                    this.InvAdjSrcField = value;
                    this.RaisePropertyChanged("InvAdjSrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvBurUnitCost {
            get {
                return this.InvBurUnitCostField;
            }
            set {
                if ((this.InvBurUnitCostField.Equals(value) != true)) {
                    this.InvBurUnitCostField = value;
                    this.RaisePropertyChanged("InvBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvLbrUnitCost {
            get {
                return this.InvLbrUnitCostField;
            }
            set {
                if ((this.InvLbrUnitCostField.Equals(value) != true)) {
                    this.InvLbrUnitCostField = value;
                    this.RaisePropertyChanged("InvLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvMtlBurUnitCost {
            get {
                return this.InvMtlBurUnitCostField;
            }
            set {
                if ((this.InvMtlBurUnitCostField.Equals(value) != true)) {
                    this.InvMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("InvMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvMtlUnitCost {
            get {
                return this.InvMtlUnitCostField;
            }
            set {
                if ((this.InvMtlUnitCostField.Equals(value) != true)) {
                    this.InvMtlUnitCostField = value;
                    this.RaisePropertyChanged("InvMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvSubUnitCost {
            get {
                return this.InvSubUnitCostField;
            }
            set {
                if ((this.InvSubUnitCostField.Equals(value) != true)) {
                    this.InvSubUnitCostField = value;
                    this.RaisePropertyChanged("InvSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InventoryTrans {
            get {
                return this.InventoryTransField;
            }
            set {
                if ((this.InventoryTransField.Equals(value) != true)) {
                    this.InventoryTransField = value;
                    this.RaisePropertyChanged("InventoryTrans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceLine {
            get {
                return this.InvoiceLineField;
            }
            set {
                if ((this.InvoiceLineField.Equals(value) != true)) {
                    this.InvoiceLineField = value;
                    this.RaisePropertyChanged("InvoiceLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumField, value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumDescription {
            get {
                return this.InvoiceNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumDescriptionField, value) != true)) {
                    this.InvoiceNumDescriptionField = value;
                    this.RaisePropertyChanged("InvoiceNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvtyUOM {
            get {
                return this.InvtyUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.InvtyUOMField, value) != true)) {
                    this.InvtyUOMField = value;
                    this.RaisePropertyChanged("InvtyUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvtyUOM2 {
            get {
                return this.InvtyUOM2Field;
            }
            set {
                if ((object.ReferenceEquals(this.InvtyUOM2Field, value) != true)) {
                    this.InvtyUOM2Field = value;
                    this.RaisePropertyChanged("InvtyUOM2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IssuedComplete {
            get {
                return this.IssuedCompleteField;
            }
            set {
                if ((this.IssuedCompleteField.Equals(value) != true)) {
                    this.IssuedCompleteField = value;
                    this.RaisePropertyChanged("IssuedComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobBurUnitCost {
            get {
                return this.JobBurUnitCostField;
            }
            set {
                if ((this.JobBurUnitCostField.Equals(value) != true)) {
                    this.JobBurUnitCostField = value;
                    this.RaisePropertyChanged("JobBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobLbrUnitCost {
            get {
                return this.JobLbrUnitCostField;
            }
            set {
                if ((this.JobLbrUnitCostField.Equals(value) != true)) {
                    this.JobLbrUnitCostField = value;
                    this.RaisePropertyChanged("JobLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobMtlBurUnitCost {
            get {
                return this.JobMtlBurUnitCostField;
            }
            set {
                if ((this.JobMtlBurUnitCostField.Equals(value) != true)) {
                    this.JobMtlBurUnitCostField = value;
                    this.RaisePropertyChanged("JobMtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobMtlUnitCost {
            get {
                return this.JobMtlUnitCostField;
            }
            set {
                if ((this.JobMtlUnitCostField.Equals(value) != true)) {
                    this.JobMtlUnitCostField = value;
                    this.RaisePropertyChanged("JobMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum2 {
            get {
                return this.JobNum2Field;
            }
            set {
                if ((object.ReferenceEquals(this.JobNum2Field, value) != true)) {
                    this.JobNum2Field = value;
                    this.RaisePropertyChanged("JobNum2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq {
            get {
                return this.JobSeqField;
            }
            set {
                if ((this.JobSeqField.Equals(value) != true)) {
                    this.JobSeqField = value;
                    this.RaisePropertyChanged("JobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq2 {
            get {
                return this.JobSeq2Field;
            }
            set {
                if ((this.JobSeq2Field.Equals(value) != true)) {
                    this.JobSeq2Field = value;
                    this.RaisePropertyChanged("JobSeq2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal JobSubUnitCost {
            get {
                return this.JobSubUnitCostField;
            }
            set {
                if ((this.JobSubUnitCostField.Equals(value) != true)) {
                    this.JobSubUnitCostField = value;
                    this.RaisePropertyChanged("JobSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JournalCode {
            get {
                return this.JournalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.JournalCodeField, value) != true)) {
                    this.JournalCodeField = value;
                    this.RaisePropertyChanged("JournalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JournalNum {
            get {
                return this.JournalNumField;
            }
            set {
                if ((this.JournalNumField.Equals(value) != true)) {
                    this.JournalNumField = value;
                    this.RaisePropertyChanged("JournalNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LCFlag {
            get {
                return this.LCFlagField;
            }
            set {
                if ((this.LCFlagField.Equals(value) != true)) {
                    this.LCFlagField = value;
                    this.RaisePropertyChanged("LCFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LbrUnitCost {
            get {
                return this.LbrUnitCostField;
            }
            set {
                if ((this.LbrUnitCostField.Equals(value) != true)) {
                    this.LbrUnitCostField = value;
                    this.RaisePropertyChanged("LbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberNumber {
            get {
                return this.LegalNumberNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberNumberField, value) != true)) {
                    this.LegalNumberNumberField = value;
                    this.RaisePropertyChanged("LegalNumberNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberPrefix {
            get {
                return this.LegalNumberPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberPrefixField, value) != true)) {
                    this.LegalNumberPrefixField = value;
                    this.RaisePropertyChanged("LegalNumberPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberPrefixList {
            get {
                return this.LegalNumberPrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberPrefixListField, value) != true)) {
                    this.LegalNumberPrefixListField = value;
                    this.RaisePropertyChanged("LegalNumberPrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberReadOnlyFields {
            get {
                return this.LegalNumberReadOnlyFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberReadOnlyFieldsField, value) != true)) {
                    this.LegalNumberReadOnlyFieldsField = value;
                    this.RaisePropertyChanged("LegalNumberReadOnlyFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalNumberYear {
            get {
                return this.LegalNumberYearField;
            }
            set {
                if ((this.LegalNumberYearField.Equals(value) != true)) {
                    this.LegalNumberYearField = value;
                    this.RaisePropertyChanged("LegalNumberYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoanFlag {
            get {
                return this.LoanFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.LoanFlagField, value) != true)) {
                    this.LoanFlagField = value;
                    this.RaisePropertyChanged("LoanFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum2 {
            get {
                return this.LotNum2Field;
            }
            set {
                if ((object.ReferenceEquals(this.LotNum2Field, value) != true)) {
                    this.LotNum2Field = value;
                    this.RaisePropertyChanged("LotNum2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MYImportNum {
            get {
                return this.MYImportNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MYImportNumField, value) != true)) {
                    this.MYImportNumField = value;
                    this.RaisePropertyChanged("MYImportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatNum {
            get {
                return this.MatNumField;
            }
            set {
                if ((this.MatNumField.Equals(value) != true)) {
                    this.MatNumField = value;
                    this.RaisePropertyChanged("MatNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MatNumLineDesc {
            get {
                return this.MatNumLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MatNumLineDescField, value) != true)) {
                    this.MatNumLineDescField = value;
                    this.RaisePropertyChanged("MatNumLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MscNum {
            get {
                return this.MscNumField;
            }
            set {
                if ((this.MscNumField.Equals(value) != true)) {
                    this.MscNumField = value;
                    this.RaisePropertyChanged("MscNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurUnitCost {
            get {
                return this.MtlBurUnitCostField;
            }
            set {
                if ((this.MtlBurUnitCostField.Equals(value) != true)) {
                    this.MtlBurUnitCostField = value;
                    this.RaisePropertyChanged("MtlBurUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlBurdenUnitCost {
            get {
                return this.MtlBurdenUnitCostField;
            }
            set {
                if ((this.MtlBurdenUnitCostField.Equals(value) != true)) {
                    this.MtlBurdenUnitCostField = value;
                    this.RaisePropertyChanged("MtlBurdenUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlLabUnitCost {
            get {
                return this.MtlLabUnitCostField;
            }
            set {
                if ((this.MtlLabUnitCostField.Equals(value) != true)) {
                    this.MtlLabUnitCostField = value;
                    this.RaisePropertyChanged("MtlLabUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlLbrUnitCost {
            get {
                return this.MtlLbrUnitCostField;
            }
            set {
                if ((this.MtlLbrUnitCostField.Equals(value) != true)) {
                    this.MtlLbrUnitCostField = value;
                    this.RaisePropertyChanged("MtlLbrUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlMtlUnitCost {
            get {
                return this.MtlMtlUnitCostField;
            }
            set {
                if ((this.MtlMtlUnitCostField.Equals(value) != true)) {
                    this.MtlMtlUnitCostField = value;
                    this.RaisePropertyChanged("MtlMtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MtlQueueRowId {
            get {
                return this.MtlQueueRowIdField;
            }
            set {
                if ((this.MtlQueueRowIdField.Equals(value) != true)) {
                    this.MtlQueueRowIdField = value;
                    this.RaisePropertyChanged("MtlQueueRowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlSubUnitCost {
            get {
                return this.MtlSubUnitCostField;
            }
            set {
                if ((this.MtlSubUnitCostField.Equals(value) != true)) {
                    this.MtlSubUnitCostField = value;
                    this.RaisePropertyChanged("MtlSubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MtlUnitCost {
            get {
                return this.MtlUnitCostField;
            }
            set {
                if ((this.MtlUnitCostField.Equals(value) != true)) {
                    this.MtlUnitCostField = value;
                    this.RaisePropertyChanged("MtlUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultiEndParts {
            get {
                return this.MultiEndPartsField;
            }
            set {
                if ((this.MultiEndPartsField.Equals(value) != true)) {
                    this.MultiEndPartsField = value;
                    this.RaisePropertyChanged("MultiEndParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NonConfID {
            get {
                return this.NonConfIDField;
            }
            set {
                if ((this.NonConfIDField.Equals(value) != true)) {
                    this.NonConfIDField = value;
                    this.RaisePropertyChanged("NonConfID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ODCUnitCost {
            get {
                return this.ODCUnitCostField;
            }
            set {
                if ((this.ODCUnitCostField.Equals(value) != true)) {
                    this.ODCUnitCostField = value;
                    this.RaisePropertyChanged("ODCUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQty {
            get {
                return this.OnHandQtyField;
            }
            set {
                if ((this.OnHandQtyField.Equals(value) != true)) {
                    this.OnHandQtyField = value;
                    this.RaisePropertyChanged("OnHandQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OtherDivValue {
            get {
                return this.OtherDivValueField;
            }
            set {
                if ((this.OtherDivValueField.Equals(value) != true)) {
                    this.OtherDivValueField = value;
                    this.RaisePropertyChanged("OtherDivValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OverRideCosts {
            get {
                return this.OverRideCostsField;
            }
            set {
                if ((this.OverRideCostsField.Equals(value) != true)) {
                    this.OverRideCostsField = value;
                    this.RaisePropertyChanged("OverRideCosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PBInvNum {
            get {
                return this.PBInvNumField;
            }
            set {
                if ((this.PBInvNumField.Equals(value) != true)) {
                    this.PBInvNumField = value;
                    this.RaisePropertyChanged("PBInvNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID2 {
            get {
                return this.PCID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PCID2Field, value) != true)) {
                    this.PCID2Field = value;
                    this.RaisePropertyChanged("PCID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PCIDCollapseCounter {
            get {
                return this.PCIDCollapseCounterField;
            }
            set {
                if ((this.PCIDCollapseCounterField.Equals(value) != true)) {
                    this.PCIDCollapseCounterField = value;
                    this.RaisePropertyChanged("PCIDCollapseCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineLineDesc {
            get {
                return this.POLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineLineDescField, value) != true)) {
                    this.POLineLineDescField = value;
                    this.RaisePropertyChanged("POLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLinePartNum {
            get {
                return this.POLinePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLinePartNumField, value) != true)) {
                    this.POLinePartNumField = value;
                    this.RaisePropertyChanged("POLinePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineVenPartNum {
            get {
                return this.POLineVenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineVenPartNumField, value) != true)) {
                    this.POLineVenPartNumField = value;
                    this.RaisePropertyChanged("POLineVenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal POReceiptQty {
            get {
                return this.POReceiptQtyField;
            }
            set {
                if ((this.POReceiptQtyField.Equals(value) != true)) {
                    this.POReceiptQtyField = value;
                    this.RaisePropertyChanged("POReceiptQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal POUnitCost {
            get {
                return this.POUnitCostField;
            }
            set {
                if ((this.POUnitCostField.Equals(value) != true)) {
                    this.POUnitCostField = value;
                    this.RaisePropertyChanged("POUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackLineLineDesc {
            get {
                return this.PackLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PackLineLineDescField, value) != true)) {
                    this.PackLineLineDescField = value;
                    this.RaisePropertyChanged("PackLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackNumName {
            get {
                return this.PackNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackNumNameField, value) != true)) {
                    this.PackNumNameField = value;
                    this.RaisePropertyChanged("PackNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackType {
            get {
                return this.PackTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackTypeField, value) != true)) {
                    this.PackTypeField = value;
                    this.RaisePropertyChanged("PackType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionAsm {
            get {
                return this.PartDescriptionAsmField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionAsmField, value) != true)) {
                    this.PartDescriptionAsmField = value;
                    this.RaisePropertyChanged("PartDescriptionAsm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionJH {
            get {
                return this.PartDescriptionJHField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionJHField, value) != true)) {
                    this.PartDescriptionJHField = value;
                    this.RaisePropertyChanged("PartDescriptionJH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionMS {
            get {
                return this.PartDescriptionMSField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionMSField, value) != true)) {
                    this.PartDescriptionMSField = value;
                    this.RaisePropertyChanged("PartDescriptionMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescriptionSP {
            get {
                return this.PartDescriptionSPField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionSPField, value) != true)) {
                    this.PartDescriptionSPField = value;
                    this.RaisePropertyChanged("PartDescriptionSP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartLotPartLotDescription {
            get {
                return this.PartLotPartLotDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartLotPartLotDescriptionField, value) != true)) {
                    this.PartLotPartLotDescriptionField = value;
                    this.RaisePropertyChanged("PartLotPartLotDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumAsm {
            get {
                return this.PartNumAsmField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumAsmField, value) != true)) {
                    this.PartNumAsmField = value;
                    this.RaisePropertyChanged("PartNumAsm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumJH {
            get {
                return this.PartNumJHField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumJHField, value) != true)) {
                    this.PartNumJHField = value;
                    this.RaisePropertyChanged("PartNumJH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumMS {
            get {
                return this.PartNumMSField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumMSField, value) != true)) {
                    this.PartNumMSField = value;
                    this.RaisePropertyChanged("PartNumMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSP {
            get {
                return this.PartNumSPField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSPField, value) != true)) {
                    this.PartNumSPField = value;
                    this.RaisePropertyChanged("PartNumSP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant2 {
            get {
                return this.Plant2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Plant2Field, value) != true)) {
                    this.Plant2Field = value;
                    this.RaisePropertyChanged("Plant2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PlantCostValue {
            get {
                return this.PlantCostValueField;
            }
            set {
                if ((this.PlantCostValueField.Equals(value) != true)) {
                    this.PlantCostValueField = value;
                    this.RaisePropertyChanged("PlantCostValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlantTranNum {
            get {
                return this.PlantTranNumField;
            }
            set {
                if ((this.PlantTranNumField.Equals(value) != true)) {
                    this.PlantTranNumField = value;
                    this.RaisePropertyChanged("PlantTranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PostedToGL {
            get {
                return this.PostedToGLField;
            }
            set {
                if ((this.PostedToGLField.Equals(value) != true)) {
                    this.PostedToGLField = value;
                    this.RaisePropertyChanged("PostedToGL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ProjProcessed {
            get {
                return this.ProjProcessedField;
            }
            set {
                if ((this.ProjProcessedField.Equals(value) != true)) {
                    this.ProjProcessedField = value;
                    this.RaisePropertyChanged("ProjProcessed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyAvailToComplete {
            get {
                return this.QtyAvailToCompleteField;
            }
            set {
                if ((this.QtyAvailToCompleteField.Equals(value) != true)) {
                    this.QtyAvailToCompleteField = value;
                    this.RaisePropertyChanged("QtyAvailToComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QtyBearing {
            get {
                return this.QtyBearingField;
            }
            set {
                if ((this.QtyBearingField.Equals(value) != true)) {
                    this.QtyBearingField = value;
                    this.RaisePropertyChanged("QtyBearing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyCompleted {
            get {
                return this.QtyCompletedField;
            }
            set {
                if ((this.QtyCompletedField.Equals(value) != true)) {
                    this.QtyCompletedField = value;
                    this.RaisePropertyChanged("QtyCompleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMADisp {
            get {
                return this.RMADispField;
            }
            set {
                if ((this.RMADispField.Equals(value) != true)) {
                    this.RMADispField = value;
                    this.RaisePropertyChanged("RMADisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMALineLineDesc {
            get {
                return this.RMALineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RMALineLineDescField, value) != true)) {
                    this.RMALineLineDescField = value;
                    this.RaisePropertyChanged("RMALineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMAReceipt {
            get {
                return this.RMAReceiptField;
            }
            set {
                if ((this.RMAReceiptField.Equals(value) != true)) {
                    this.RMAReceiptField = value;
                    this.RaisePropertyChanged("RMAReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReconcileNum {
            get {
                return this.ReconcileNumField;
            }
            set {
                if ((this.ReconcileNumField.Equals(value) != true)) {
                    this.ReconcileNumField = value;
                    this.RaisePropertyChanged("ReconcileNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefCode {
            get {
                return this.RefCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefCodeField, value) != true)) {
                    this.RefCodeField = value;
                    this.RaisePropertyChanged("RefCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefType {
            get {
                return this.RefTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RefTypeField, value) != true)) {
                    this.RefTypeField = value;
                    this.RaisePropertyChanged("RefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RevSysDate {
            get {
                return this.RevSysDateField;
            }
            set {
                if ((this.RevSysDateField.Equals(value) != true)) {
                    this.RevSysDateField = value;
                    this.RaisePropertyChanged("RevSysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevSysTime {
            get {
                return this.RevSysTimeField;
            }
            set {
                if ((this.RevSysTimeField.Equals(value) != true)) {
                    this.RevSysTimeField = value;
                    this.RaisePropertyChanged("RevSysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevTranNum {
            get {
                return this.RevTranNumField;
            }
            set {
                if ((this.RevTranNumField.Equals(value) != true)) {
                    this.RevTranNumField = value;
                    this.RaisePropertyChanged("RevTranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevertID {
            get {
                return this.RevertIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RevertIDField, value) != true)) {
                    this.RevertIDField = value;
                    this.RaisePropertyChanged("RevertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevertStatus {
            get {
                return this.RevertStatusField;
            }
            set {
                if ((this.RevertStatusField.Equals(value) != true)) {
                    this.RevertStatusField = value;
                    this.RaisePropertyChanged("RevertStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumRevDescription {
            get {
                return this.RevisionNumRevDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumRevDescriptionField, value) != true)) {
                    this.RevisionNumRevDescriptionField = value;
                    this.RaisePropertyChanged("RevisionNumRevDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumRevShortDesc {
            get {
                return this.RevisionNumRevShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumRevShortDescField, value) != true)) {
                    this.RevisionNumRevShortDescField = value;
                    this.RaisePropertyChanged("RevisionNumRevShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SalvageQtyToDate {
            get {
                return this.SalvageQtyToDateField;
            }
            set {
                if ((this.SalvageQtyToDateField.Equals(value) != true)) {
                    this.SalvageQtyToDateField = value;
                    this.RaisePropertyChanged("SalvageQtyToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialNoTempTranID {
            get {
                return this.SerialNoTempTranIDField;
            }
            set {
                if ((this.SerialNoTempTranIDField.Equals(value) != true)) {
                    this.SerialNoTempTranIDField = value;
                    this.RaisePropertyChanged("SerialNoTempTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubUnitCost {
            get {
                return this.SubUnitCostField;
            }
            set {
                if ((this.SubUnitCostField.Equals(value) != true)) {
                    this.SubUnitCostField = value;
                    this.RaisePropertyChanged("SubUnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysTime {
            get {
                return this.SysTimeField;
            }
            set {
                if ((this.SysTimeField.Equals(value) != true)) {
                    this.SysTimeField = value;
                    this.RaisePropertyChanged("SysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ThisTranQty {
            get {
                return this.ThisTranQtyField;
            }
            set {
                if ((this.ThisTranQtyField.Equals(value) != true)) {
                    this.ThisTranQtyField = value;
                    this.RaisePropertyChanged("ThisTranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TranAmount {
            get {
                return this.TranAmountField;
            }
            set {
                if ((this.TranAmountField.Equals(value) != true)) {
                    this.TranAmountField = value;
                    this.RaisePropertyChanged("TranAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranClass {
            get {
                return this.TranClassField;
            }
            set {
                if ((object.ReferenceEquals(this.TranClassField, value) != true)) {
                    this.TranClassField = value;
                    this.RaisePropertyChanged("TranClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranNum {
            get {
                return this.TranNumField;
            }
            set {
                if ((this.TranNumField.Equals(value) != true)) {
                    this.TranNumField = value;
                    this.RaisePropertyChanged("TranNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TranQty {
            get {
                return this.TranQtyField;
            }
            set {
                if ((this.TranQtyField.Equals(value) != true)) {
                    this.TranQtyField = value;
                    this.RaisePropertyChanged("TranQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TranRefType {
            get {
                return this.TranRefTypeField;
            }
            set {
                if ((this.TranRefTypeField.Equals(value) != true)) {
                    this.TranRefTypeField = value;
                    this.RaisePropertyChanged("TranRefType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranReference {
            get {
                return this.TranReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranReferenceField, value) != true)) {
                    this.TranReferenceField = value;
                    this.RaisePropertyChanged("TranReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeDisplay {
            get {
                return this.TreeDisplayField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeDisplayField, value) != true)) {
                    this.TreeDisplayField = value;
                    this.RaisePropertyChanged("TreeDisplay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UM {
            get {
                return this.UMField;
            }
            set {
                if ((object.ReferenceEquals(this.UMField, value) != true)) {
                    this.UMField = value;
                    this.RaisePropertyChanged("UM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VarTarget {
            get {
                return this.VarTargetField;
            }
            set {
                if ((object.ReferenceEquals(this.VarTargetField, value) != true)) {
                    this.VarTargetField = value;
                    this.RaisePropertyChanged("VarTarget");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumAddress1 {
            get {
                return this.VendorPPNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumAddress1Field, value) != true)) {
                    this.VendorPPNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorPPNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumAddress2 {
            get {
                return this.VendorPPNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumAddress2Field, value) != true)) {
                    this.VendorPPNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorPPNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumAddress3 {
            get {
                return this.VendorPPNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumAddress3Field, value) != true)) {
                    this.VendorPPNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorPPNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumCity {
            get {
                return this.VendorPPNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumCityField, value) != true)) {
                    this.VendorPPNumCityField = value;
                    this.RaisePropertyChanged("VendorPPNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumCountry {
            get {
                return this.VendorPPNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumCountryField, value) != true)) {
                    this.VendorPPNumCountryField = value;
                    this.RaisePropertyChanged("VendorPPNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumName {
            get {
                return this.VendorPPNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumNameField, value) != true)) {
                    this.VendorPPNumNameField = value;
                    this.RaisePropertyChanged("VendorPPNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorPPNumPrimPCon {
            get {
                return this.VendorPPNumPrimPConField;
            }
            set {
                if ((this.VendorPPNumPrimPConField.Equals(value) != true)) {
                    this.VendorPPNumPrimPConField = value;
                    this.RaisePropertyChanged("VendorPPNumPrimPCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumState {
            get {
                return this.VendorPPNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumStateField, value) != true)) {
                    this.VendorPPNumStateField = value;
                    this.RaisePropertyChanged("VendorPPNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPNumZip {
            get {
                return this.VendorPPNumZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNumZipField, value) != true)) {
                    this.VendorPPNumZipField = value;
                    this.RaisePropertyChanged("VendorPPNumZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouse2 {
            get {
                return this.WareHouse2Field;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouse2Field, value) != true)) {
                    this.WareHouse2Field = value;
                    this.RaisePropertyChanged("WareHouse2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WareHouseCode {
            get {
                return this.WareHouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WareHouseCodeField, value) != true)) {
                    this.WareHouseCodeField = value;
                    this.RaisePropertyChanged("WareHouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseDescription {
            get {
                return this.WarehouseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseDescriptionField, value) != true)) {
                    this.WarehouseDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dummyKeyField {
            get {
                return this.dummyKeyFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.dummyKeyFieldField, value) != true)) {
                    this.dummyKeyFieldField = value;
                    this.RaisePropertyChanged("dummyKeyField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PkgControlHeaderRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PkgControlHeaderRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdhocStagedInventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdjustInventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowDeletesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowMixedChildPCIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowMixedLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowMixedPartsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowMixedUOMsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowMultipleSerialNumPerPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowParentPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowVoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivePCIDHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforePackLabelPrintControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeforePackPkgControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CalculatedWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildPCIDCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerExpendableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerPartialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerRepackedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContainerReturnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustContainerPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableBtnVoidPCIDInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCboReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExpendableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtensionDigitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExternalHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExternalLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExternalVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExternalWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GS1128Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HHASNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHItemIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHItemPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HHItemQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHItemRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHLabelStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HHPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HHPackSlipListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LPCAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCCreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LPCCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCOperatorEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LPCOprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCPrintedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCPrintedFromTxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCPrintedFromTxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPCPrinterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LPCShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LWHDimUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LWHDimensionUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelPrintControlPriorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelPrintControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LabelPrintControlledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LabelPrintCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LabelPrintCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue06Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue07Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue08Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue09Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue10Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue11Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue12Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue13Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue14Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue15Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue16Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue17Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue18Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue19Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue20Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue21Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue22Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue23Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue24Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue25Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue26Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue27Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue28Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue29Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelValue30Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastCountedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPCIDScannedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumStackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPCIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalSourcePCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurDockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurSupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OutboundContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverlaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverlaidByPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackedFromSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ParentCreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCustContainerPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentLabelPrintControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ParentLabelPrintControlledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentLabelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentNumberOfPCIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPkgCodePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPkgControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPkgControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentWhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgControlBoolean01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgControlBoolean02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgControlCollapseCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PkgControlDate01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PkgControlDate02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgControlDecimal01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgControlDecimal02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlIDCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgControlInteger01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgControlInteger02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlPriorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantCountryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlantCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RTWhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawBarcodeScanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawPCIDLicensePlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResCodeInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResCodeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnToBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnToWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecuritySealIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToContainerPartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCountryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToDockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TareWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackExpendableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackReturnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrailerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCountryDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPPNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdhocStagedInventory {
            get {
                return this.AdhocStagedInventoryField;
            }
            set {
                if ((this.AdhocStagedInventoryField.Equals(value) != true)) {
                    this.AdhocStagedInventoryField = value;
                    this.RaisePropertyChanged("AdhocStagedInventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AdjustInventory {
            get {
                return this.AdjustInventoryField;
            }
            set {
                if ((this.AdjustInventoryField.Equals(value) != true)) {
                    this.AdjustInventoryField = value;
                    this.RaisePropertyChanged("AdjustInventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDeletes {
            get {
                return this.AllowDeletesField;
            }
            set {
                if ((this.AllowDeletesField.Equals(value) != true)) {
                    this.AllowDeletesField = value;
                    this.RaisePropertyChanged("AllowDeletes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMixedChildPCIDs {
            get {
                return this.AllowMixedChildPCIDsField;
            }
            set {
                if ((this.AllowMixedChildPCIDsField.Equals(value) != true)) {
                    this.AllowMixedChildPCIDsField = value;
                    this.RaisePropertyChanged("AllowMixedChildPCIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMixedLots {
            get {
                return this.AllowMixedLotsField;
            }
            set {
                if ((this.AllowMixedLotsField.Equals(value) != true)) {
                    this.AllowMixedLotsField = value;
                    this.RaisePropertyChanged("AllowMixedLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMixedParts {
            get {
                return this.AllowMixedPartsField;
            }
            set {
                if ((this.AllowMixedPartsField.Equals(value) != true)) {
                    this.AllowMixedPartsField = value;
                    this.RaisePropertyChanged("AllowMixedParts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMixedUOMs {
            get {
                return this.AllowMixedUOMsField;
            }
            set {
                if ((this.AllowMixedUOMsField.Equals(value) != true)) {
                    this.AllowMixedUOMsField = value;
                    this.RaisePropertyChanged("AllowMixedUOMs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowMultipleSerialNumPerPCID {
            get {
                return this.AllowMultipleSerialNumPerPCIDField;
            }
            set {
                if ((this.AllowMultipleSerialNumPerPCIDField.Equals(value) != true)) {
                    this.AllowMultipleSerialNumPerPCIDField = value;
                    this.RaisePropertyChanged("AllowMultipleSerialNumPerPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowParentPCID {
            get {
                return this.AllowParentPCIDField;
            }
            set {
                if ((this.AllowParentPCIDField.Equals(value) != true)) {
                    this.AllowParentPCIDField = value;
                    this.RaisePropertyChanged("AllowParentPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowVoids {
            get {
                return this.AllowVoidsField;
            }
            set {
                if ((this.AllowVoidsField.Equals(value) != true)) {
                    this.AllowVoidsField = value;
                    this.RaisePropertyChanged("AllowVoids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ArchivePCIDHistory {
            get {
                return this.ArchivePCIDHistoryField;
            }
            set {
                if ((this.ArchivePCIDHistoryField.Equals(value) != true)) {
                    this.ArchivePCIDHistoryField = value;
                    this.RaisePropertyChanged("ArchivePCIDHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrint {
            get {
                return this.AutoPrintField;
            }
            set {
                if ((this.AutoPrintField.Equals(value) != true)) {
                    this.AutoPrintField = value;
                    this.RaisePropertyChanged("AutoPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforePackLabelPrintControlStatus {
            get {
                return this.BeforePackLabelPrintControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforePackLabelPrintControlStatusField, value) != true)) {
                    this.BeforePackLabelPrintControlStatusField = value;
                    this.RaisePropertyChanged("BeforePackLabelPrintControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeforePackPkgControlStatus {
            get {
                return this.BeforePackPkgControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BeforePackPkgControlStatusField, value) != true)) {
                    this.BeforePackPkgControlStatusField = value;
                    this.RaisePropertyChanged("BeforePackPkgControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinDescription {
            get {
                return this.BinDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinDescriptionField, value) != true)) {
                    this.BinDescriptionField = value;
                    this.RaisePropertyChanged("BinDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CalculatedWeight {
            get {
                return this.CalculatedWeightField;
            }
            set {
                if ((this.CalculatedWeightField.Equals(value) != true)) {
                    this.CalculatedWeightField = value;
                    this.RaisePropertyChanged("CalculatedWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildPCIDCount {
            get {
                return this.ChildPCIDCountField;
            }
            set {
                if ((this.ChildPCIDCountField.Equals(value) != true)) {
                    this.ChildPCIDCountField = value;
                    this.RaisePropertyChanged("ChildPCIDCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerExpendable {
            get {
                return this.ContainerExpendableField;
            }
            set {
                if ((this.ContainerExpendableField.Equals(value) != true)) {
                    this.ContainerExpendableField = value;
                    this.RaisePropertyChanged("ContainerExpendable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerPartial {
            get {
                return this.ContainerPartialField;
            }
            set {
                if ((this.ContainerPartialField.Equals(value) != true)) {
                    this.ContainerPartialField = value;
                    this.RaisePropertyChanged("ContainerPartial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerRepacked {
            get {
                return this.ContainerRepackedField;
            }
            set {
                if ((this.ContainerRepackedField.Equals(value) != true)) {
                    this.ContainerRepackedField = value;
                    this.RaisePropertyChanged("ContainerRepacked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContainerReturnable {
            get {
                return this.ContainerReturnableField;
            }
            set {
                if ((this.ContainerReturnableField.Equals(value) != true)) {
                    this.ContainerReturnableField = value;
                    this.RaisePropertyChanged("ContainerReturnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContainerUOM {
            get {
                return this.ContainerUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerUOMField, value) != true)) {
                    this.ContainerUOMField = value;
                    this.RaisePropertyChanged("ContainerUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustContainerPartNum {
            get {
                return this.CustContainerPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustContainerPartNumField, value) != true)) {
                    this.CustContainerPartNumField = value;
                    this.RaisePropertyChanged("CustContainerPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableReasonCode {
            get {
                return this.DisableReasonCodeField;
            }
            set {
                if ((this.DisableReasonCodeField.Equals(value) != true)) {
                    this.DisableReasonCodeField = value;
                    this.RaisePropertyChanged("DisableReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIShipToNum {
            get {
                return this.EDIShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIShipToNumField, value) != true)) {
                    this.EDIShipToNumField = value;
                    this.RaisePropertyChanged("EDIShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableBtnVoidPCIDInv {
            get {
                return this.EnableBtnVoidPCIDInvField;
            }
            set {
                if ((this.EnableBtnVoidPCIDInvField.Equals(value) != true)) {
                    this.EnableBtnVoidPCIDInvField = value;
                    this.RaisePropertyChanged("EnableBtnVoidPCIDInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCboReasonCode {
            get {
                return this.EnableCboReasonCodeField;
            }
            set {
                if ((this.EnableCboReasonCodeField.Equals(value) != true)) {
                    this.EnableCboReasonCodeField = value;
                    this.RaisePropertyChanged("EnableCboReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expendable {
            get {
                return this.ExpendableField;
            }
            set {
                if ((this.ExpendableField.Equals(value) != true)) {
                    this.ExpendableField = value;
                    this.RaisePropertyChanged("Expendable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtensionDigit {
            get {
                return this.ExtensionDigitField;
            }
            set {
                if ((this.ExtensionDigitField.Equals(value) != true)) {
                    this.ExtensionDigitField = value;
                    this.RaisePropertyChanged("ExtensionDigit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExternalHeight {
            get {
                return this.ExternalHeightField;
            }
            set {
                if ((this.ExternalHeightField.Equals(value) != true)) {
                    this.ExternalHeightField = value;
                    this.RaisePropertyChanged("ExternalHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExternalLength {
            get {
                return this.ExternalLengthField;
            }
            set {
                if ((this.ExternalLengthField.Equals(value) != true)) {
                    this.ExternalLengthField = value;
                    this.RaisePropertyChanged("ExternalLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExternalVolume {
            get {
                return this.ExternalVolumeField;
            }
            set {
                if ((this.ExternalVolumeField.Equals(value) != true)) {
                    this.ExternalVolumeField = value;
                    this.RaisePropertyChanged("ExternalVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExternalWidth {
            get {
                return this.ExternalWidthField;
            }
            set {
                if ((this.ExternalWidthField.Equals(value) != true)) {
                    this.ExternalWidthField = value;
                    this.RaisePropertyChanged("ExternalWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GS1128 {
            get {
                return this.GS1128Field;
            }
            set {
                if ((object.ReferenceEquals(this.GS1128Field, value) != true)) {
                    this.GS1128Field = value;
                    this.RaisePropertyChanged("GS1128");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HHASN {
            get {
                return this.HHASNField;
            }
            set {
                if ((this.HHASNField.Equals(value) != true)) {
                    this.HHASNField = value;
                    this.RaisePropertyChanged("HHASN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HHItemIUM {
            get {
                return this.HHItemIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.HHItemIUMField, value) != true)) {
                    this.HHItemIUMField = value;
                    this.RaisePropertyChanged("HHItemIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HHItemPartNum {
            get {
                return this.HHItemPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.HHItemPartNumField, value) != true)) {
                    this.HHItemPartNumField = value;
                    this.RaisePropertyChanged("HHItemPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HHItemQuantity {
            get {
                return this.HHItemQuantityField;
            }
            set {
                if ((this.HHItemQuantityField.Equals(value) != true)) {
                    this.HHItemQuantityField = value;
                    this.RaisePropertyChanged("HHItemQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HHItemRevisionNum {
            get {
                return this.HHItemRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.HHItemRevisionNumField, value) != true)) {
                    this.HHItemRevisionNumField = value;
                    this.RaisePropertyChanged("HHItemRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HHLabelStatus {
            get {
                return this.HHLabelStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.HHLabelStatusField, value) != true)) {
                    this.HHLabelStatusField = value;
                    this.RaisePropertyChanged("HHLabelStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HHPackSlip {
            get {
                return this.HHPackSlipField;
            }
            set {
                if ((this.HHPackSlipField.Equals(value) != true)) {
                    this.HHPackSlipField = value;
                    this.RaisePropertyChanged("HHPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HHPackSlipList {
            get {
                return this.HHPackSlipListField;
            }
            set {
                if ((object.ReferenceEquals(this.HHPackSlipListField, value) != true)) {
                    this.HHPackSlipListField = value;
                    this.RaisePropertyChanged("HHPackSlipList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LPCAssemblySeq {
            get {
                return this.LPCAssemblySeqField;
            }
            set {
                if ((this.LPCAssemblySeqField.Equals(value) != true)) {
                    this.LPCAssemblySeqField = value;
                    this.RaisePropertyChanged("LPCAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCCreatedBy {
            get {
                return this.LPCCreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCCreatedByField, value) != true)) {
                    this.LPCCreatedByField = value;
                    this.RaisePropertyChanged("LPCCreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LPCCreatedDate {
            get {
                return this.LPCCreatedDateField;
            }
            set {
                if ((this.LPCCreatedDateField.Equals(value) != true)) {
                    this.LPCCreatedDateField = value;
                    this.RaisePropertyChanged("LPCCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCJobNum {
            get {
                return this.LPCJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCJobNumField, value) != true)) {
                    this.LPCJobNumField = value;
                    this.RaisePropertyChanged("LPCJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCOperatorEmpID {
            get {
                return this.LPCOperatorEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCOperatorEmpIDField, value) != true)) {
                    this.LPCOperatorEmpIDField = value;
                    this.RaisePropertyChanged("LPCOperatorEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LPCOprSeq {
            get {
                return this.LPCOprSeqField;
            }
            set {
                if ((this.LPCOprSeqField.Equals(value) != true)) {
                    this.LPCOprSeqField = value;
                    this.RaisePropertyChanged("LPCOprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCPrintedBy {
            get {
                return this.LPCPrintedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCPrintedByField, value) != true)) {
                    this.LPCPrintedByField = value;
                    this.RaisePropertyChanged("LPCPrintedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCPrintedFromTx {
            get {
                return this.LPCPrintedFromTxField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCPrintedFromTxField, value) != true)) {
                    this.LPCPrintedFromTxField = value;
                    this.RaisePropertyChanged("LPCPrintedFromTx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCPrintedFromTxType {
            get {
                return this.LPCPrintedFromTxTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCPrintedFromTxTypeField, value) != true)) {
                    this.LPCPrintedFromTxTypeField = value;
                    this.RaisePropertyChanged("LPCPrintedFromTxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPCPrinterID {
            get {
                return this.LPCPrinterIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LPCPrinterIDField, value) != true)) {
                    this.LPCPrinterIDField = value;
                    this.RaisePropertyChanged("LPCPrinterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LPCShift {
            get {
                return this.LPCShiftField;
            }
            set {
                if ((this.LPCShiftField.Equals(value) != true)) {
                    this.LPCShiftField = value;
                    this.RaisePropertyChanged("LPCShift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LWHDimUOM {
            get {
                return this.LWHDimUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.LWHDimUOMField, value) != true)) {
                    this.LWHDimUOMField = value;
                    this.RaisePropertyChanged("LWHDimUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LWHDimensionUOM {
            get {
                return this.LWHDimensionUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.LWHDimensionUOMField, value) != true)) {
                    this.LWHDimensionUOMField = value;
                    this.RaisePropertyChanged("LWHDimensionUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelPrintControlPriorStatus {
            get {
                return this.LabelPrintControlPriorStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelPrintControlPriorStatusField, value) != true)) {
                    this.LabelPrintControlPriorStatusField = value;
                    this.RaisePropertyChanged("LabelPrintControlPriorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelPrintControlStatus {
            get {
                return this.LabelPrintControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelPrintControlStatusField, value) != true)) {
                    this.LabelPrintControlStatusField = value;
                    this.RaisePropertyChanged("LabelPrintControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelPrintControlled {
            get {
                return this.LabelPrintControlledField;
            }
            set {
                if ((this.LabelPrintControlledField.Equals(value) != true)) {
                    this.LabelPrintControlledField = value;
                    this.RaisePropertyChanged("LabelPrintControlled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelPrintCount {
            get {
                return this.LabelPrintCountField;
            }
            set {
                if ((this.LabelPrintCountField.Equals(value) != true)) {
                    this.LabelPrintCountField = value;
                    this.RaisePropertyChanged("LabelPrintCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelPrintCounter {
            get {
                return this.LabelPrintCounterField;
            }
            set {
                if ((this.LabelPrintCounterField.Equals(value) != true)) {
                    this.LabelPrintCounterField = value;
                    this.RaisePropertyChanged("LabelPrintCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelType {
            get {
                return this.LabelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelTypeField, value) != true)) {
                    this.LabelTypeField = value;
                    this.RaisePropertyChanged("LabelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue01 {
            get {
                return this.LabelValue01Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue01Field, value) != true)) {
                    this.LabelValue01Field = value;
                    this.RaisePropertyChanged("LabelValue01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue02 {
            get {
                return this.LabelValue02Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue02Field, value) != true)) {
                    this.LabelValue02Field = value;
                    this.RaisePropertyChanged("LabelValue02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue03 {
            get {
                return this.LabelValue03Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue03Field, value) != true)) {
                    this.LabelValue03Field = value;
                    this.RaisePropertyChanged("LabelValue03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue04 {
            get {
                return this.LabelValue04Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue04Field, value) != true)) {
                    this.LabelValue04Field = value;
                    this.RaisePropertyChanged("LabelValue04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue05 {
            get {
                return this.LabelValue05Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue05Field, value) != true)) {
                    this.LabelValue05Field = value;
                    this.RaisePropertyChanged("LabelValue05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue06 {
            get {
                return this.LabelValue06Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue06Field, value) != true)) {
                    this.LabelValue06Field = value;
                    this.RaisePropertyChanged("LabelValue06");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue07 {
            get {
                return this.LabelValue07Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue07Field, value) != true)) {
                    this.LabelValue07Field = value;
                    this.RaisePropertyChanged("LabelValue07");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue08 {
            get {
                return this.LabelValue08Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue08Field, value) != true)) {
                    this.LabelValue08Field = value;
                    this.RaisePropertyChanged("LabelValue08");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue09 {
            get {
                return this.LabelValue09Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue09Field, value) != true)) {
                    this.LabelValue09Field = value;
                    this.RaisePropertyChanged("LabelValue09");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue10 {
            get {
                return this.LabelValue10Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue10Field, value) != true)) {
                    this.LabelValue10Field = value;
                    this.RaisePropertyChanged("LabelValue10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue11 {
            get {
                return this.LabelValue11Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue11Field, value) != true)) {
                    this.LabelValue11Field = value;
                    this.RaisePropertyChanged("LabelValue11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue12 {
            get {
                return this.LabelValue12Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue12Field, value) != true)) {
                    this.LabelValue12Field = value;
                    this.RaisePropertyChanged("LabelValue12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue13 {
            get {
                return this.LabelValue13Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue13Field, value) != true)) {
                    this.LabelValue13Field = value;
                    this.RaisePropertyChanged("LabelValue13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue14 {
            get {
                return this.LabelValue14Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue14Field, value) != true)) {
                    this.LabelValue14Field = value;
                    this.RaisePropertyChanged("LabelValue14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue15 {
            get {
                return this.LabelValue15Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue15Field, value) != true)) {
                    this.LabelValue15Field = value;
                    this.RaisePropertyChanged("LabelValue15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue16 {
            get {
                return this.LabelValue16Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue16Field, value) != true)) {
                    this.LabelValue16Field = value;
                    this.RaisePropertyChanged("LabelValue16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue17 {
            get {
                return this.LabelValue17Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue17Field, value) != true)) {
                    this.LabelValue17Field = value;
                    this.RaisePropertyChanged("LabelValue17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue18 {
            get {
                return this.LabelValue18Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue18Field, value) != true)) {
                    this.LabelValue18Field = value;
                    this.RaisePropertyChanged("LabelValue18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue19 {
            get {
                return this.LabelValue19Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue19Field, value) != true)) {
                    this.LabelValue19Field = value;
                    this.RaisePropertyChanged("LabelValue19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue20 {
            get {
                return this.LabelValue20Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue20Field, value) != true)) {
                    this.LabelValue20Field = value;
                    this.RaisePropertyChanged("LabelValue20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue21 {
            get {
                return this.LabelValue21Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue21Field, value) != true)) {
                    this.LabelValue21Field = value;
                    this.RaisePropertyChanged("LabelValue21");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue22 {
            get {
                return this.LabelValue22Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue22Field, value) != true)) {
                    this.LabelValue22Field = value;
                    this.RaisePropertyChanged("LabelValue22");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue23 {
            get {
                return this.LabelValue23Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue23Field, value) != true)) {
                    this.LabelValue23Field = value;
                    this.RaisePropertyChanged("LabelValue23");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue24 {
            get {
                return this.LabelValue24Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue24Field, value) != true)) {
                    this.LabelValue24Field = value;
                    this.RaisePropertyChanged("LabelValue24");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue25 {
            get {
                return this.LabelValue25Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue25Field, value) != true)) {
                    this.LabelValue25Field = value;
                    this.RaisePropertyChanged("LabelValue25");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue26 {
            get {
                return this.LabelValue26Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue26Field, value) != true)) {
                    this.LabelValue26Field = value;
                    this.RaisePropertyChanged("LabelValue26");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue27 {
            get {
                return this.LabelValue27Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue27Field, value) != true)) {
                    this.LabelValue27Field = value;
                    this.RaisePropertyChanged("LabelValue27");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue28 {
            get {
                return this.LabelValue28Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue28Field, value) != true)) {
                    this.LabelValue28Field = value;
                    this.RaisePropertyChanged("LabelValue28");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue29 {
            get {
                return this.LabelValue29Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue29Field, value) != true)) {
                    this.LabelValue29Field = value;
                    this.RaisePropertyChanged("LabelValue29");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelValue30 {
            get {
                return this.LabelValue30Field;
            }
            set {
                if ((object.ReferenceEquals(this.LabelValue30Field, value) != true)) {
                    this.LabelValue30Field = value;
                    this.RaisePropertyChanged("LabelValue30");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastCountedDate {
            get {
                return this.LastCountedDateField;
            }
            set {
                if ((this.LastCountedDateField.Equals(value) != true)) {
                    this.LastCountedDateField = value;
                    this.RaisePropertyChanged("LastCountedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPCIDScanned {
            get {
                return this.LastPCIDScannedField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPCIDScannedField, value) != true)) {
                    this.LastPCIDScannedField = value;
                    this.RaisePropertyChanged("LastPCIDScanned");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumStack {
            get {
                return this.MaximumStackField;
            }
            set {
                if ((this.MaximumStackField.Equals(value) != true)) {
                    this.MaximumStackField = value;
                    this.RaisePropertyChanged("MaximumStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumWeight {
            get {
                return this.MaximumWeightField;
            }
            set {
                if ((this.MaximumWeightField.Equals(value) != true)) {
                    this.MaximumWeightField = value;
                    this.RaisePropertyChanged("MaximumWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPCIDs {
            get {
                return this.NumberOfPCIDsField;
            }
            set {
                if ((this.NumberOfPCIDsField.Equals(value) != true)) {
                    this.NumberOfPCIDsField = value;
                    this.RaisePropertyChanged("NumberOfPCIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalSourcePCID {
            get {
                return this.OriginalSourcePCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalSourcePCIDField, value) != true)) {
                    this.OriginalSourcePCIDField = value;
                    this.RaisePropertyChanged("OriginalSourcePCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurDock {
            get {
                return this.OurDockField;
            }
            set {
                if ((object.ReferenceEquals(this.OurDockField, value) != true)) {
                    this.OurDockField = value;
                    this.RaisePropertyChanged("OurDock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurSupplierCode {
            get {
                return this.OurSupplierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurSupplierCodeField, value) != true)) {
                    this.OurSupplierCodeField = value;
                    this.RaisePropertyChanged("OurSupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OutboundContainer {
            get {
                return this.OutboundContainerField;
            }
            set {
                if ((this.OutboundContainerField.Equals(value) != true)) {
                    this.OutboundContainerField = value;
                    this.RaisePropertyChanged("OutboundContainer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Overlaid {
            get {
                return this.OverlaidField;
            }
            set {
                if ((this.OverlaidField.Equals(value) != true)) {
                    this.OverlaidField = value;
                    this.RaisePropertyChanged("Overlaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverlaidByPCID {
            get {
                return this.OverlaidByPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OverlaidByPCIDField, value) != true)) {
                    this.OverlaidByPCIDField = value;
                    this.RaisePropertyChanged("OverlaidByPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackedFromSource {
            get {
                return this.PackedFromSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.PackedFromSourceField, value) != true)) {
                    this.PackedFromSourceField = value;
                    this.RaisePropertyChanged("PackedFromSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentBinNum {
            get {
                return this.ParentBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentBinNumField, value) != true)) {
                    this.ParentBinNumField = value;
                    this.RaisePropertyChanged("ParentBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ParentCreatedDate {
            get {
                return this.ParentCreatedDateField;
            }
            set {
                if ((this.ParentCreatedDateField.Equals(value) != true)) {
                    this.ParentCreatedDateField = value;
                    this.RaisePropertyChanged("ParentCreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCustContainerPartNum {
            get {
                return this.ParentCustContainerPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCustContainerPartNumField, value) != true)) {
                    this.ParentCustContainerPartNumField = value;
                    this.RaisePropertyChanged("ParentCustContainerPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCustID {
            get {
                return this.ParentCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCustIDField, value) != true)) {
                    this.ParentCustIDField = value;
                    this.RaisePropertyChanged("ParentCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentLabelPrintControlStatus {
            get {
                return this.ParentLabelPrintControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLabelPrintControlStatusField, value) != true)) {
                    this.ParentLabelPrintControlStatusField = value;
                    this.RaisePropertyChanged("ParentLabelPrintControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ParentLabelPrintControlled {
            get {
                return this.ParentLabelPrintControlledField;
            }
            set {
                if ((this.ParentLabelPrintControlledField.Equals(value) != true)) {
                    this.ParentLabelPrintControlledField = value;
                    this.RaisePropertyChanged("ParentLabelPrintControlled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentLabelType {
            get {
                return this.ParentLabelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentLabelTypeField, value) != true)) {
                    this.ParentLabelTypeField = value;
                    this.RaisePropertyChanged("ParentLabelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentNumberOfPCIDs {
            get {
                return this.ParentNumberOfPCIDsField;
            }
            set {
                if ((this.ParentNumberOfPCIDsField.Equals(value) != true)) {
                    this.ParentNumberOfPCIDsField = value;
                    this.RaisePropertyChanged("ParentNumberOfPCIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPCID {
            get {
                return this.ParentPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPCIDField, value) != true)) {
                    this.ParentPCIDField = value;
                    this.RaisePropertyChanged("ParentPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentPackNum {
            get {
                return this.ParentPackNumField;
            }
            set {
                if ((this.ParentPackNumField.Equals(value) != true)) {
                    this.ParentPackNumField = value;
                    this.RaisePropertyChanged("ParentPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPkgCode {
            get {
                return this.ParentPkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPkgCodeField, value) != true)) {
                    this.ParentPkgCodeField = value;
                    this.RaisePropertyChanged("ParentPkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPkgCodePartNum {
            get {
                return this.ParentPkgCodePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPkgCodePartNumField, value) != true)) {
                    this.ParentPkgCodePartNumField = value;
                    this.RaisePropertyChanged("ParentPkgCodePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPkgControlStatus {
            get {
                return this.ParentPkgControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPkgControlStatusField, value) != true)) {
                    this.ParentPkgControlStatusField = value;
                    this.RaisePropertyChanged("ParentPkgControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPkgControlType {
            get {
                return this.ParentPkgControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPkgControlTypeField, value) != true)) {
                    this.ParentPkgControlTypeField = value;
                    this.RaisePropertyChanged("ParentPkgControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPlant {
            get {
                return this.ParentPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPlantField, value) != true)) {
                    this.ParentPlantField = value;
                    this.RaisePropertyChanged("ParentPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPlantName {
            get {
                return this.ParentPlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPlantNameField, value) != true)) {
                    this.ParentPlantNameField = value;
                    this.RaisePropertyChanged("ParentPlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentShipToNum {
            get {
                return this.ParentShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentShipToNumField, value) != true)) {
                    this.ParentShipToNumField = value;
                    this.RaisePropertyChanged("ParentShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentWarehouseCode {
            get {
                return this.ParentWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentWarehouseCodeField, value) != true)) {
                    this.ParentWarehouseCodeField = value;
                    this.RaisePropertyChanged("ParentWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentWhseDesc {
            get {
                return this.ParentWhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentWhseDescField, value) != true)) {
                    this.ParentWhseDescField = value;
                    this.RaisePropertyChanged("ParentWhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDesc {
            get {
                return this.PartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescField, value) != true)) {
                    this.PartDescField = value;
                    this.RaisePropertyChanged("PartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCodeDesc {
            get {
                return this.PkgCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeDescField, value) != true)) {
                    this.PkgCodeDescField = value;
                    this.RaisePropertyChanged("PkgCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCodePartNum {
            get {
                return this.PkgCodePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodePartNumField, value) != true)) {
                    this.PkgCodePartNumField = value;
                    this.RaisePropertyChanged("PkgCodePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgControlBoolean01 {
            get {
                return this.PkgControlBoolean01Field;
            }
            set {
                if ((this.PkgControlBoolean01Field.Equals(value) != true)) {
                    this.PkgControlBoolean01Field = value;
                    this.RaisePropertyChanged("PkgControlBoolean01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgControlBoolean02 {
            get {
                return this.PkgControlBoolean02Field;
            }
            set {
                if ((this.PkgControlBoolean02Field.Equals(value) != true)) {
                    this.PkgControlBoolean02Field = value;
                    this.RaisePropertyChanged("PkgControlBoolean02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter01 {
            get {
                return this.PkgControlCharacter01Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter01Field, value) != true)) {
                    this.PkgControlCharacter01Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter02 {
            get {
                return this.PkgControlCharacter02Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter02Field, value) != true)) {
                    this.PkgControlCharacter02Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter03 {
            get {
                return this.PkgControlCharacter03Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter03Field, value) != true)) {
                    this.PkgControlCharacter03Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter04 {
            get {
                return this.PkgControlCharacter04Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter04Field, value) != true)) {
                    this.PkgControlCharacter04Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter05 {
            get {
                return this.PkgControlCharacter05Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter05Field, value) != true)) {
                    this.PkgControlCharacter05Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgControlCollapseCounter {
            get {
                return this.PkgControlCollapseCounterField;
            }
            set {
                if ((this.PkgControlCollapseCounterField.Equals(value) != true)) {
                    this.PkgControlCollapseCounterField = value;
                    this.RaisePropertyChanged("PkgControlCollapseCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PkgControlDate01 {
            get {
                return this.PkgControlDate01Field;
            }
            set {
                if ((this.PkgControlDate01Field.Equals(value) != true)) {
                    this.PkgControlDate01Field = value;
                    this.RaisePropertyChanged("PkgControlDate01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PkgControlDate02 {
            get {
                return this.PkgControlDate02Field;
            }
            set {
                if ((this.PkgControlDate02Field.Equals(value) != true)) {
                    this.PkgControlDate02Field = value;
                    this.RaisePropertyChanged("PkgControlDate02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgControlDecimal01 {
            get {
                return this.PkgControlDecimal01Field;
            }
            set {
                if ((this.PkgControlDecimal01Field.Equals(value) != true)) {
                    this.PkgControlDecimal01Field = value;
                    this.RaisePropertyChanged("PkgControlDecimal01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgControlDecimal02 {
            get {
                return this.PkgControlDecimal02Field;
            }
            set {
                if ((this.PkgControlDecimal02Field.Equals(value) != true)) {
                    this.PkgControlDecimal02Field = value;
                    this.RaisePropertyChanged("PkgControlDecimal02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlIDCode {
            get {
                return this.PkgControlIDCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlIDCodeField, value) != true)) {
                    this.PkgControlIDCodeField = value;
                    this.RaisePropertyChanged("PkgControlIDCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgControlInteger01 {
            get {
                return this.PkgControlInteger01Field;
            }
            set {
                if ((this.PkgControlInteger01Field.Equals(value) != true)) {
                    this.PkgControlInteger01Field = value;
                    this.RaisePropertyChanged("PkgControlInteger01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgControlInteger02 {
            get {
                return this.PkgControlInteger02Field;
            }
            set {
                if ((this.PkgControlInteger02Field.Equals(value) != true)) {
                    this.PkgControlInteger02Field = value;
                    this.RaisePropertyChanged("PkgControlInteger02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlPriorStatus {
            get {
                return this.PkgControlPriorStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlPriorStatusField, value) != true)) {
                    this.PkgControlPriorStatusField = value;
                    this.RaisePropertyChanged("PkgControlPriorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlStatus {
            get {
                return this.PkgControlStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlStatusField, value) != true)) {
                    this.PkgControlStatusField = value;
                    this.RaisePropertyChanged("PkgControlStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlType {
            get {
                return this.PkgControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlTypeField, value) != true)) {
                    this.PkgControlTypeField = value;
                    this.RaisePropertyChanged("PkgControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgType {
            get {
                return this.PkgTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgTypeField, value) != true)) {
                    this.PkgTypeField = value;
                    this.RaisePropertyChanged("PkgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantAddress1 {
            get {
                return this.PlantAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PlantAddress1Field, value) != true)) {
                    this.PlantAddress1Field = value;
                    this.RaisePropertyChanged("PlantAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantAddress2 {
            get {
                return this.PlantAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PlantAddress2Field, value) != true)) {
                    this.PlantAddress2Field = value;
                    this.RaisePropertyChanged("PlantAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantAddress3 {
            get {
                return this.PlantAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PlantAddress3Field, value) != true)) {
                    this.PlantAddress3Field = value;
                    this.RaisePropertyChanged("PlantAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantCity {
            get {
                return this.PlantCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantCityField, value) != true)) {
                    this.PlantCityField = value;
                    this.RaisePropertyChanged("PlantCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantCountryDesc {
            get {
                return this.PlantCountryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantCountryDescField, value) != true)) {
                    this.PlantCountryDescField = value;
                    this.RaisePropertyChanged("PlantCountryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlantCountryNum {
            get {
                return this.PlantCountryNumField;
            }
            set {
                if ((this.PlantCountryNumField.Equals(value) != true)) {
                    this.PlantCountryNumField = value;
                    this.RaisePropertyChanged("PlantCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantPhone {
            get {
                return this.PlantPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantPhoneField, value) != true)) {
                    this.PlantPhoneField = value;
                    this.RaisePropertyChanged("PlantPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantState {
            get {
                return this.PlantStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantStateField, value) != true)) {
                    this.PlantStateField = value;
                    this.RaisePropertyChanged("PlantState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantZip {
            get {
                return this.PlantZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantZipField, value) != true)) {
                    this.PlantZipField = value;
                    this.RaisePropertyChanged("PlantZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PositionSeq {
            get {
                return this.PositionSeqField;
            }
            set {
                if ((this.PositionSeqField.Equals(value) != true)) {
                    this.PositionSeqField = value;
                    this.RaisePropertyChanged("PositionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RTWhseDesc {
            get {
                return this.RTWhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RTWhseDescField, value) != true)) {
                    this.RTWhseDescField = value;
                    this.RaisePropertyChanged("RTWhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawBarcodeScan {
            get {
                return this.RawBarcodeScanField;
            }
            set {
                if ((object.ReferenceEquals(this.RawBarcodeScanField, value) != true)) {
                    this.RawBarcodeScanField = value;
                    this.RaisePropertyChanged("RawBarcodeScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawPCIDLicensePlate {
            get {
                return this.RawPCIDLicensePlateField;
            }
            set {
                if ((object.ReferenceEquals(this.RawPCIDLicensePlateField, value) != true)) {
                    this.RawPCIDLicensePlateField = value;
                    this.RaisePropertyChanged("RawPCIDLicensePlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCode {
            get {
                return this.ReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeField, value) != true)) {
                    this.ReasonCodeField = value;
                    this.RaisePropertyChanged("ReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResCodeIn {
            get {
                return this.ResCodeInField;
            }
            set {
                if ((object.ReferenceEquals(this.ResCodeInField, value) != true)) {
                    this.ResCodeInField = value;
                    this.RaisePropertyChanged("ResCodeIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResCodeOut {
            get {
                return this.ResCodeOutField;
            }
            set {
                if ((object.ReferenceEquals(this.ResCodeOutField, value) != true)) {
                    this.ResCodeOutField = value;
                    this.RaisePropertyChanged("ResCodeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnToBinNum {
            get {
                return this.ReturnToBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnToBinNumField, value) != true)) {
                    this.ReturnToBinNumField = value;
                    this.RaisePropertyChanged("ReturnToBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnToWarehouseCode {
            get {
                return this.ReturnToWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnToWarehouseCodeField, value) != true)) {
                    this.ReturnToWarehouseCodeField = value;
                    this.RaisePropertyChanged("ReturnToWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecuritySealID {
            get {
                return this.SecuritySealIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SecuritySealIDField, value) != true)) {
                    this.SecuritySealIDField = value;
                    this.RaisePropertyChanged("SecuritySealID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddress1 {
            get {
                return this.ShipToAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddress1Field, value) != true)) {
                    this.ShipToAddress1Field = value;
                    this.RaisePropertyChanged("ShipToAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddress2 {
            get {
                return this.ShipToAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddress2Field, value) != true)) {
                    this.ShipToAddress2Field = value;
                    this.RaisePropertyChanged("ShipToAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToAddress3 {
            get {
                return this.ShipToAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToAddress3Field, value) != true)) {
                    this.ShipToAddress3Field = value;
                    this.RaisePropertyChanged("ShipToAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCity {
            get {
                return this.ShipToCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCityField, value) != true)) {
                    this.ShipToCityField = value;
                    this.RaisePropertyChanged("ShipToCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToContainerPartID {
            get {
                return this.ShipToContainerPartIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToContainerPartIDField, value) != true)) {
                    this.ShipToContainerPartIDField = value;
                    this.RaisePropertyChanged("ShipToContainerPartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCountryDesc {
            get {
                return this.ShipToCountryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCountryDescField, value) != true)) {
                    this.ShipToCountryDescField = value;
                    this.RaisePropertyChanged("ShipToCountryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCountryNum {
            get {
                return this.ShipToCountryNumField;
            }
            set {
                if ((this.ShipToCountryNumField.Equals(value) != true)) {
                    this.ShipToCountryNumField = value;
                    this.RaisePropertyChanged("ShipToCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToDock {
            get {
                return this.ShipToDockField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToDockField, value) != true)) {
                    this.ShipToDockField = value;
                    this.RaisePropertyChanged("ShipToDock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToState {
            get {
                return this.ShipToStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToStateField, value) != true)) {
                    this.ShipToStateField = value;
                    this.RaisePropertyChanged("ShipToState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToZip {
            get {
                return this.ShipToZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToZipField, value) != true)) {
                    this.ShipToZipField = value;
                    this.RaisePropertyChanged("ShipToZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TareWeight {
            get {
                return this.TareWeightField;
            }
            set {
                if ((this.TareWeightField.Equals(value) != true)) {
                    this.TareWeightField = value;
                    this.RaisePropertyChanged("TareWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWeight {
            get {
                return this.TotalWeightField;
            }
            set {
                if ((this.TotalWeightField.Equals(value) != true)) {
                    this.TotalWeightField = value;
                    this.RaisePropertyChanged("TotalWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackExpendable {
            get {
                return this.TrackExpendableField;
            }
            set {
                if ((this.TrackExpendableField.Equals(value) != true)) {
                    this.TrackExpendableField = value;
                    this.RaisePropertyChanged("TrackExpendable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackReturnable {
            get {
                return this.TrackReturnableField;
            }
            set {
                if ((this.TrackReturnableField.Equals(value) != true)) {
                    this.TrackReturnableField = value;
                    this.RaisePropertyChanged("TrackReturnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrailerID {
            get {
                return this.TrailerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TrailerIDField, value) != true)) {
                    this.TrailerIDField = value;
                    this.RaisePropertyChanged("TrailerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByField, value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedByEmpID {
            get {
                return this.UpdatedByEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByEmpIDField, value) != true)) {
                    this.UpdatedByEmpIDField = value;
                    this.RaisePropertyChanged("UpdatedByEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedDate {
            get {
                return this.UpdatedDateField;
            }
            set {
                if ((this.UpdatedDateField.Equals(value) != true)) {
                    this.UpdatedDateField = value;
                    this.RaisePropertyChanged("UpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress1 {
            get {
                return this.VendorAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress1Field, value) != true)) {
                    this.VendorAddress1Field = value;
                    this.RaisePropertyChanged("VendorAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress2 {
            get {
                return this.VendorAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress2Field, value) != true)) {
                    this.VendorAddress2Field = value;
                    this.RaisePropertyChanged("VendorAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorAddress3 {
            get {
                return this.VendorAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorAddress3Field, value) != true)) {
                    this.VendorAddress3Field = value;
                    this.RaisePropertyChanged("VendorAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCity {
            get {
                return this.VendorCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCityField, value) != true)) {
                    this.VendorCityField = value;
                    this.RaisePropertyChanged("VendorCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCountryDesc {
            get {
                return this.VendorCountryDescField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCountryDescField, value) != true)) {
                    this.VendorCountryDescField = value;
                    this.RaisePropertyChanged("VendorCountryDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorCountryNum {
            get {
                return this.VendorCountryNumField;
            }
            set {
                if ((this.VendorCountryNumField.Equals(value) != true)) {
                    this.VendorCountryNumField = value;
                    this.RaisePropertyChanged("VendorCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPPName {
            get {
                return this.VendorPPNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPPNameField, value) != true)) {
                    this.VendorPPNameField = value;
                    this.RaisePropertyChanged("VendorPPName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPurPoint {
            get {
                return this.VendorPurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPurPointField, value) != true)) {
                    this.VendorPurPointField = value;
                    this.RaisePropertyChanged("VendorPurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorState {
            get {
                return this.VendorStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorStateField, value) != true)) {
                    this.VendorStateField = value;
                    this.RaisePropertyChanged("VendorState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorZip {
            get {
                return this.VendorZipField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorZipField, value) != true)) {
                    this.VendorZipField = value;
                    this.RaisePropertyChanged("VendorZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VolumeUOM {
            get {
                return this.VolumeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeUOMField, value) != true)) {
                    this.VolumeUOMField = value;
                    this.RaisePropertyChanged("VolumeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseDescription {
            get {
                return this.WarehouseDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseDescriptionField, value) != true)) {
                    this.WarehouseDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseDesc {
            get {
                return this.WhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseDescField, value) != true)) {
                    this.WhseDescField = value;
                    this.RaisePropertyChanged("WhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PkgControlItemRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PkgControlItemRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildPCIDOrPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustShipToEngineerAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemandTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ItemQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemRevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfPCIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PCIDItemSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackageCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgControlBoolean01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PkgControlBoolean02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter03Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter04Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgControlCharacter05Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PkgControlDate01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PkgControlDate02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgControlDecimal01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgControlDecimal02Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiptDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptPackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReceiptQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SafetyIndicatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipmentInvoicedPostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplyJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TFOrdLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TFOrdNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorPOLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorPONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorPORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPOTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VendorQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseDescField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildPCIDOrPart {
            get {
                return this.ChildPCIDOrPartField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPCIDOrPartField, value) != true)) {
                    this.ChildPCIDOrPartField = value;
                    this.RaisePropertyChanged("ChildPCIDOrPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPONum {
            get {
                return this.CustPONumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPONumField, value) != true)) {
                    this.CustPONumField = value;
                    this.RaisePropertyChanged("CustPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPartNum {
            get {
                return this.CustPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPartNumField, value) != true)) {
                    this.CustPartNumField = value;
                    this.RaisePropertyChanged("CustPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPartRev {
            get {
                return this.CustPartRevField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPartRevField, value) != true)) {
                    this.CustPartRevField = value;
                    this.RaisePropertyChanged("CustPartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustShipToEngineerAlert {
            get {
                return this.CustShipToEngineerAlertField;
            }
            set {
                if ((object.ReferenceEquals(this.CustShipToEngineerAlertField, value) != true)) {
                    this.CustShipToEngineerAlertField = value;
                    this.RaisePropertyChanged("CustShipToEngineerAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemandType {
            get {
                return this.DemandTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DemandTypeField, value) != true)) {
                    this.DemandTypeField = value;
                    this.RaisePropertyChanged("DemandType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemIUM {
            get {
                return this.ItemIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIUMField, value) != true)) {
                    this.ItemIUMField = value;
                    this.RaisePropertyChanged("ItemIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLotNum {
            get {
                return this.ItemLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLotNumField, value) != true)) {
                    this.ItemLotNumField = value;
                    this.RaisePropertyChanged("ItemLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemPCID {
            get {
                return this.ItemPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPCIDField, value) != true)) {
                    this.ItemPCIDField = value;
                    this.RaisePropertyChanged("ItemPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemPartDesc {
            get {
                return this.ItemPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPartDescField, value) != true)) {
                    this.ItemPartDescField = value;
                    this.RaisePropertyChanged("ItemPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemPartNum {
            get {
                return this.ItemPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemPartNumField, value) != true)) {
                    this.ItemPartNumField = value;
                    this.RaisePropertyChanged("ItemPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ItemQuantity {
            get {
                return this.ItemQuantityField;
            }
            set {
                if ((this.ItemQuantityField.Equals(value) != true)) {
                    this.ItemQuantityField = value;
                    this.RaisePropertyChanged("ItemQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemRevisionNum {
            get {
                return this.ItemRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemRevisionNumField, value) != true)) {
                    this.ItemRevisionNumField = value;
                    this.RaisePropertyChanged("ItemRevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlSeq {
            get {
                return this.MtlSeqField;
            }
            set {
                if ((this.MtlSeqField.Equals(value) != true)) {
                    this.MtlSeqField = value;
                    this.RaisePropertyChanged("MtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfPCIDs {
            get {
                return this.NumberOfPCIDsField;
            }
            set {
                if ((this.NumberOfPCIDsField.Equals(value) != true)) {
                    this.NumberOfPCIDsField = value;
                    this.RaisePropertyChanged("NumberOfPCIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PCIDItemSeq {
            get {
                return this.PCIDItemSeqField;
            }
            set {
                if ((this.PCIDItemSeqField.Equals(value) != true)) {
                    this.PCIDItemSeqField = value;
                    this.RaisePropertyChanged("PCIDItemSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackageCode {
            get {
                return this.PackageCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageCodeField, value) != true)) {
                    this.PackageCodeField = value;
                    this.RaisePropertyChanged("PackageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCodePartNum {
            get {
                return this.PkgCodePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodePartNumField, value) != true)) {
                    this.PkgCodePartNumField = value;
                    this.RaisePropertyChanged("PkgCodePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgControlBoolean01 {
            get {
                return this.PkgControlBoolean01Field;
            }
            set {
                if ((this.PkgControlBoolean01Field.Equals(value) != true)) {
                    this.PkgControlBoolean01Field = value;
                    this.RaisePropertyChanged("PkgControlBoolean01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PkgControlBoolean02 {
            get {
                return this.PkgControlBoolean02Field;
            }
            set {
                if ((this.PkgControlBoolean02Field.Equals(value) != true)) {
                    this.PkgControlBoolean02Field = value;
                    this.RaisePropertyChanged("PkgControlBoolean02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter01 {
            get {
                return this.PkgControlCharacter01Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter01Field, value) != true)) {
                    this.PkgControlCharacter01Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter02 {
            get {
                return this.PkgControlCharacter02Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter02Field, value) != true)) {
                    this.PkgControlCharacter02Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter03 {
            get {
                return this.PkgControlCharacter03Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter03Field, value) != true)) {
                    this.PkgControlCharacter03Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter03");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter04 {
            get {
                return this.PkgControlCharacter04Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter04Field, value) != true)) {
                    this.PkgControlCharacter04Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter04");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgControlCharacter05 {
            get {
                return this.PkgControlCharacter05Field;
            }
            set {
                if ((object.ReferenceEquals(this.PkgControlCharacter05Field, value) != true)) {
                    this.PkgControlCharacter05Field = value;
                    this.RaisePropertyChanged("PkgControlCharacter05");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PkgControlDate01 {
            get {
                return this.PkgControlDate01Field;
            }
            set {
                if ((this.PkgControlDate01Field.Equals(value) != true)) {
                    this.PkgControlDate01Field = value;
                    this.RaisePropertyChanged("PkgControlDate01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PkgControlDate02 {
            get {
                return this.PkgControlDate02Field;
            }
            set {
                if ((this.PkgControlDate02Field.Equals(value) != true)) {
                    this.PkgControlDate02Field = value;
                    this.RaisePropertyChanged("PkgControlDate02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgControlDecimal01 {
            get {
                return this.PkgControlDecimal01Field;
            }
            set {
                if ((this.PkgControlDecimal01Field.Equals(value) != true)) {
                    this.PkgControlDecimal01Field = value;
                    this.RaisePropertyChanged("PkgControlDecimal01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgControlDecimal02 {
            get {
                return this.PkgControlDecimal02Field;
            }
            set {
                if ((this.PkgControlDecimal02Field.Equals(value) != true)) {
                    this.PkgControlDecimal02Field = value;
                    this.RaisePropertyChanged("PkgControlDecimal02");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiptDate {
            get {
                return this.ReceiptDateField;
            }
            set {
                if ((this.ReceiptDateField.Equals(value) != true)) {
                    this.ReceiptDateField = value;
                    this.RaisePropertyChanged("ReceiptDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptPackSlip {
            get {
                return this.ReceiptPackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptPackSlipField, value) != true)) {
                    this.ReceiptPackSlipField = value;
                    this.RaisePropertyChanged("ReceiptPackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReceiptQty {
            get {
                return this.ReceiptQtyField;
            }
            set {
                if ((this.ReceiptQtyField.Equals(value) != true)) {
                    this.ReceiptQtyField = value;
                    this.RaisePropertyChanged("ReceiptQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptType {
            get {
                return this.ReceiptTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptTypeField, value) != true)) {
                    this.ReceiptTypeField = value;
                    this.RaisePropertyChanged("ReceiptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptUOM {
            get {
                return this.ReceiptUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptUOMField, value) != true)) {
                    this.ReceiptUOMField = value;
                    this.RaisePropertyChanged("ReceiptUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SafetyIndicator {
            get {
                return this.SafetyIndicatorField;
            }
            set {
                if ((this.SafetyIndicatorField.Equals(value) != true)) {
                    this.SafetyIndicatorField = value;
                    this.RaisePropertyChanged("SafetyIndicator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipmentInvoicedPosted {
            get {
                return this.ShipmentInvoicedPostedField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipmentInvoicedPostedField, value) != true)) {
                    this.ShipmentInvoicedPostedField = value;
                    this.RaisePropertyChanged("ShipmentInvoicedPosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplyJobNum {
            get {
                return this.SupplyJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyJobNumField, value) != true)) {
                    this.SupplyJobNumField = value;
                    this.RaisePropertyChanged("SupplyJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TFOrdLine {
            get {
                return this.TFOrdLineField;
            }
            set {
                if ((this.TFOrdLineField.Equals(value) != true)) {
                    this.TFOrdLineField = value;
                    this.RaisePropertyChanged("TFOrdLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TFOrdNum {
            get {
                return this.TFOrdNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TFOrdNumField, value) != true)) {
                    this.TFOrdNumField = value;
                    this.RaisePropertyChanged("TFOrdNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorPOLine {
            get {
                return this.VendorPOLineField;
            }
            set {
                if ((this.VendorPOLineField.Equals(value) != true)) {
                    this.VendorPOLineField = value;
                    this.RaisePropertyChanged("VendorPOLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorPONum {
            get {
                return this.VendorPONumField;
            }
            set {
                if ((this.VendorPONumField.Equals(value) != true)) {
                    this.VendorPONumField = value;
                    this.RaisePropertyChanged("VendorPONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorPORelNum {
            get {
                return this.VendorPORelNumField;
            }
            set {
                if ((this.VendorPORelNumField.Equals(value) != true)) {
                    this.VendorPORelNumField = value;
                    this.RaisePropertyChanged("VendorPORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPOType {
            get {
                return this.VendorPOTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPOTypeField, value) != true)) {
                    this.VendorPOTypeField = value;
                    this.RaisePropertyChanged("VendorPOType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorPartNum {
            get {
                return this.VendorPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorPartNumField, value) != true)) {
                    this.VendorPartNumField = value;
                    this.RaisePropertyChanged("VendorPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VendorQty {
            get {
                return this.VendorQtyField;
            }
            set {
                if ((this.VendorQtyField.Equals(value) != true)) {
                    this.VendorQtyField = value;
                    this.RaisePropertyChanged("VendorQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorUOM {
            get {
                return this.VendorUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorUOMField, value) != true)) {
                    this.VendorUOMField = value;
                    this.RaisePropertyChanged("VendorUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseDesc {
            get {
                return this.WhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseDescField, value) != true)) {
                    this.WhseDescField = value;
                    this.RaisePropertyChanged("WhseDesc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiptsFromMfgJobAsmblRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReceiptsFromMfgJobAsmblRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobHeadPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobHeadPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QtyCompletedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobHeadPartDescription {
            get {
                return this.JobHeadPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobHeadPartDescriptionField, value) != true)) {
                    this.JobHeadPartDescriptionField = value;
                    this.RaisePropertyChanged("JobHeadPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobHeadPartNum {
            get {
                return this.JobHeadPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobHeadPartNumField, value) != true)) {
                    this.JobHeadPartNumField = value;
                    this.RaisePropertyChanged("JobHeadPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QtyCompleted {
            get {
                return this.QtyCompletedField;
            }
            set {
                if ((this.QtyCompletedField.Equals(value) != true)) {
                    this.QtyCompletedField = value;
                    this.RaisePropertyChanged("QtyCompleted");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedJobAsmblRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedJobAsmblRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicWAS.Epicor.ReceiptsFromMfgSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PCIDReceiptsParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PCIDReceiptsParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant2 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant2Name = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreviousPCID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranReference = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouseCode = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseDescription = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableReceiveAllPCIDs = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PCIDReceiptsSelectedRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PCIDReceiptsSelectedRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActTranQty = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActTransUOM = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplyJobNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackLots = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.LegalNumGenOptsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationOption = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PartTranTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PartTranRow")]
    [System.SerializableAttribute()]
    public class PartTranTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.PartTranRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartTranRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PartTranRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouseCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranClass = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranType = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryTrans = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDate = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranQty = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlUnitCost = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LbrUnitCost = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BurUnitCost = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubUnitCost = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurUnitCost = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtCost = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostMethod = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeqType = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackType = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WareHouse2 = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum2 = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranReference = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POReceiptQty = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POUnitCost = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvAdjSrc = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvAdjReason = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum2 = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode2 = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM2 = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor2 = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLTrans = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostedToGL = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYear = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalPeriod = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalNum = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Costed = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DMRNum = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActionNum = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COSPostingReqd = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JournalCode = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant2 = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallNum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLine = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatNum = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum2 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq2 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq2 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMAReceipt = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMADisp = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OtherDivValue = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantTranNum = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonConfID = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlMtlUnitCost = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlLabUnitCost = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlSubUnitCost = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlBurdenUnitCost = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefType = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefCode = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeginQty = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterQty = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BegBurUnitCost = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BegLbrUnitCost = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BegMtlBurUnitCost = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BegMtlUnitCost = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BegSubUnitCost = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterBurUnitCost = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterLbrUnitCost = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterMtlBurUnitCost = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterMtlUnitCost = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterSubUnitCost = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantCostValue = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmpID = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReconcileNum = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostID = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIFODate = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIFOSeq = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActTranQty = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActTransUOM = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvtyUOM = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvtyUOM2 = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIFOAction = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalYearSuffix = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FiscalCalendarID = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinType = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCYear = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CCMonth = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CycleSeq = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABTUID = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaseCostMethod = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevertStatus = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevertID = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShipPackSlip = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VarTarget = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIFOSubSeq = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlUnitCost = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltLbrUnitCost = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltBurUnitCost = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltSubUnitCost = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlBurUnitCost = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltExtCost = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlMtlUnitCost = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlLabUnitCost = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlSubUnitCost = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AltMtlBurdenUnitCost = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBInvNum = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoanFlag = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssetNum = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionNum = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisposalNum = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjProcessed = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsOfDate = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AsOfSeq = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MscNum = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ODCUnitCost = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranRefType = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCIDCollapseCounter = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID2 = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractID = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LCFlag = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlCost = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtLbrCost = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtBurCost = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtSubCost = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlBurCost = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlMtlCost = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlLabCost = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlSubCost = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtMtlBurdenCost = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MYImportNum = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoReverse = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevTranNum = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevSysDate = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevSysTime = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtNonRecoverableCost = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EpicorFSA = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallCode = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CostMethodDisplay = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DIMDescription = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableFieldPart = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispSysTime = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispUOM = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        dummyKeyField = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSerialNumbers = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAAction = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSACallCode = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAContractCode = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAContractNum = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEmpID = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEquipmentInstallID = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEquipmentPartNum = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderNum = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderResourceNum = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAWarrantyCode = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullPhysical = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLTranAmt = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLTranDate = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvBurUnitCost = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvLbrUnitCost = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvMtlBurUnitCost = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvMtlUnitCost = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvSubUnitCost = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IssuedComplete = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobBurUnitCost = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobLbrUnitCost = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobMtlBurUnitCost = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobMtlUnitCost = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSubUnitCost = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberNumber = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberPrefix = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberPrefixList = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberReadOnlyFields = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberYear = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlLbrUnitCost = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlQueueRowId = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultiEndParts = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQty = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverRideCosts = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionAsm = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionJH = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionMS = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescriptionSP = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumAsm = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumJH = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumMS = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSP = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyAvailToComplete = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyBearing = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyCompleted = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNumRevDescription = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNumRevShortDesc = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalvageQtyToDate = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNoTempTranID = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ThisTranQty = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranAmount = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TreeDisplay = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeqDescription = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CallLineLineDesc = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCodeDimCodeDescription = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DMRNumPartDescription = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromBinDescription = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPlantName = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromWareHouseDescription = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNumDescription = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNumPartDescription = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatNumLineDesc = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLineLineDesc = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNumName = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartLotPartLotDescription = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineVenPartNum = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLinePartNum = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineLineDesc = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALineLineDesc = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumAddress1 = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumAddress2 = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumPrimPCon = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumAddress3 = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumCountry = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumState = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumZip = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumCity = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPNumName = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseDescription = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 290,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PkgControlHeaderTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PkgControlHeaderRow")]
    [System.SerializableAttribute()]
    public class PkgControlHeaderTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlHeaderRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PkgControlHeaderRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PkgControlHeaderRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnToWarehouseCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnToBinNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlStatus = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlPriorStatus = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelPrintControlStatus = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelPrintControlPriorStatus = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowParentPCID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowMixedParts = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowMixedLots = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowMixedUOMs = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowMixedChildPCIDs = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowMultipleSerialNumPerPCID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelPrintControlled = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelPrintCounter = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowVoids = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowDeletes = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ArchivePCIDHistory = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LWHDimensionUOM = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Length = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Width = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Height = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VolumeUOM = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Volume = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumWeight = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalculatedWeight = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWeight = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaximumStack = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PositionSeq = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrailerID = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SecuritySealID = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawPCIDLicensePlate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GS1128 = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCollapseCounter = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedDate = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedBy = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatedDate = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatedBy = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastPCIDScanned = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfPCIDs = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrint = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCCreatedDate = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCCreatedBy = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCPrinterID = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCPrintedBy = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCPrintedFromTx = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCPrintedFromTxType = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCJobNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCOprSeq = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCAssemblySeq = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCShift = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LPCOperatorEmpID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OriginalSourcePCID = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverlaidByPCID = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Overlaid = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerPartial = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerRepacked = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerReturnable = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurSupplierCode = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantAddress1 = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantAddress2 = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantAddress3 = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantCity = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantState = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantZip = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantCountryNum = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantCountryDesc = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantPhone = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustContainerPartNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIShipToNum = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddress1 = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddress2 = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToAddress3 = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCity = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToState = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToZip = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCountryNum = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCountryDesc = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToDock = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCodePartNum = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPurPoint = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress1 = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress2 = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorAddress3 = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCity = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorState = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorZip = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCountryNum = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorCountryDesc = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurDock = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue01 = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue02 = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue03 = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue04 = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue05 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue06 = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue07 = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue08 = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue09 = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue10 = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue11 = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue12 = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue13 = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue14 = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue15 = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue16 = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue17 = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue18 = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue19 = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue20 = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue21 = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue22 = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue23 = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue24 = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue25 = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue26 = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue27 = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue28 = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue29 = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelValue30 = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter01 = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter02 = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter03 = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter04 = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter05 = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDate01 = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDate02 = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlBoolean01 = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlBoolean02 = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlInteger01 = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlInteger02 = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDecimal01 = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDecimal02 = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlType = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlIDCode = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalLength = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalWidth = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalHeight = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalVolume = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TareWeight = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelPrintCount = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackExpendable = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackReturnable = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelType = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerExpendable = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorName = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPPName = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdhocStagedInventory = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatedByEmpID = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawBarcodeScan = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OutboundContainer = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeforePackPkgControlStatus = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeforePackLabelPrintControlStatus = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackedFromSource = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastCountedDate = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdjustInventory = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContainerUOM = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableReasonCode = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableBtnVoidPCIDInv = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableCboReasonCode = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expendable = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtensionDigit = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHASN = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHItemIUM = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHItemPartNum = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHItemQuantity = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHItemRevisionNum = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHLabelStatus = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHPackSlip = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HHPackSlipList = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LWHDimUOM = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentBinNum = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCreatedDate = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustContainerPartNum = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentCustID = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentLabelPrintControlled = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentLabelPrintControlStatus = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentLabelType = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentNumberOfPCIDs = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPackNum = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPCID = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPkgCode = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPkgCodePartNum = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPkgControlStatus = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPkgControlType = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPlant = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPlantName = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentShipToNum = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentWarehouseCode = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentWhseDesc = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDesc = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCodeDesc = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgType = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCode = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResCodeIn = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResCodeOut = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTWhseDesc = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToContainerPartID = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseDesc = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildPCIDCount = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinDescription = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseDescription = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 222,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PkgControlItemTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PkgControlItemRow")]
    [System.SerializableAttribute()]
    public class PkgControlItemTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.PkgControlItemRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PkgControlItemRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PkgControlItemRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCIDItemSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemPCID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemPartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemRevisionNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemPartDesc = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemLotNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemIUM = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemQuantity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DemandType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlSeq = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdLine = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPartNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPartRev = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustPONum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustShipToEngineerAlert = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SafetyIndicator = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCodePartNum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPOType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPONum = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPOLine = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPORelNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorPartNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorUOM = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorQty = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptPackSlip = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptType = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptDate = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptUOM = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReceiptQty = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter01 = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter02 = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter03 = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter04 = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlCharacter05 = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDate01 = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDate02 = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlBoolean01 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlBoolean02 = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDecimal01 = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgControlDecimal02 = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentInvoicedPosted = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplyJobNum = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildPCIDOrPart = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackageCode = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfPCIDs = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseDesc = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 68,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.SNFormatRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedSerialNumbersRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReceiptsFromMfgJobAsmblTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReceiptsFromMfgJobAsmblRow")]
    [System.SerializableAttribute()]
    public class ReceiptsFromMfgJobAsmblTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReceiptsFromMfgJobAsmblRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ReceiptsFromMfgJobAsmblRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyCompleted = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobHeadPartNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobHeadPartDescription = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedJobAsmblTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedJobAsmblRow")]
    [System.SerializableAttribute()]
    public class SelectedJobAsmblTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedJobAsmblRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedJobAsmblRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedJobAsmblRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:ReceiptsFromMfg", ConfigurationName="Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract")]
    public interface ReceiptsFromMfgSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/CheckPackageCodeAllocNegQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/CheckPackageCodeAllocNegQtyResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/CheckPackageCodeAllocNegQtyEpic" +
            "orFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyResponse CheckPackageCodeAllocNegQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/CheckPackageCodeAllocNegQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/CheckPackageCodeAllocNegQtyResp" +
            "onse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyResponse> CheckPackageCodeAllocNegQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetAvailTranDocTypesEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="listAvailTranDocTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultTranDocTypeID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultTranDocTypeIDResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultTranDocTypeIDEpicorFa" +
            "ultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="defaultTranDocTypeID")]
        string GetDefaultTranDocTypeID();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultTranDocTypeID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultTranDocTypeIDResponse" +
            "")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="defaultTranDocTypeID")]
        System.Threading.Tasks.Task<string> GetDefaultTranDocTypeIDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultWhseBin", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultWhseBinResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultWhseBinEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinResponse GetDefaultWhseBin(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultWhseBin", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetDefaultWhseBinResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinResponse> GetDefaultWhseBinAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetCodeDescList", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetCodeDescListEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetCodeDescList", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewPCIDParamsRow", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewPCIDParamsRowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewPCIDParamsRowEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowResponse GetNewPCIDParamsRow(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewPCIDParamsRow", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewPCIDParamsRowResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowResponse> GetNewPCIDParamsRowAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/IsValidAssembly", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/IsValidAssemblyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/IsValidAssemblyEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="plFound")]
        bool IsValidAssembly(string pcJobNum, int piAssemblySeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/IsValidAssembly", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/IsValidAssemblyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="plFound")]
        System.Threading.Tasks.Task<bool> IsValidAssemblyAsync(string pcJobNum, int piAssemblySeq);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/NegativeInventoryTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/NegativeInventoryTestEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestResponse NegativeInventoryTest(EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/NegativeInventoryTestResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDEpicorFaultDeta" +
            "ilFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateWhsePCID(string ToWhse);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDResponse")]
        System.Threading.Tasks.Task<bool> ValidateWhsePCIDAsync(string ToWhse);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDAndGetDefaultBi" +
            "n", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDAndGetDefaultBi" +
            "nResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDAndGetDefaultBi" +
            "nEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinResponse ValidateWhsePCIDAndGetDefaultBin(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDAndGetDefaultBi" +
            "n", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhsePCIDAndGetDefaultBi" +
            "nResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinResponse> ValidateWhsePCIDAndGetDefaultBinAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhseBinPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhseBinPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhseBinPCIDEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ValidateWhseBinPCID(string ToWhse, string ToBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhseBinPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateWhseBinPCIDResponse")]
        System.Threading.Tasks.Task<bool> ValidateWhseBinPCIDAsync(string ToWhse, string ToBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidatePCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidatePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidatePCIDEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDResponse ValidatePCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidatePCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidatePCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDResponse> ValidatePCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetList", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListResponse GetList(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetList", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetRows", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsResponse GetRows(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetRows", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblMultiple", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblMultipleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblMultipleEpicorFau" +
            "ltDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleResponse GetNewJobAsmblMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblMultiple", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblMultipleResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleResponse> GetNewJobAsmblMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblSearch", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblSearchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblSearchEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchResponse GetNewJobAsmblSearch(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblSearch", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewJobAsmblSearchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchResponse> GetNewJobAsmblSearchAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfg", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgResponse GetNewReceiptsFromMfg(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfg", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgResponse> GetNewReceiptsFromMfgAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgJobAsm", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgJobAsmResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgJobAsmEpic" +
            "orFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmResponse GetNewReceiptsFromMfgJobAsm(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgJobAsm", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgJobAsmResp" +
            "onse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmResponse> GetNewReceiptsFromMfgJobAsmAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgMtlQueue", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgMtlQueueRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgMtlQueueEp" +
            "icorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueResponse GetNewReceiptsFromMfgMtlQueue(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgMtlQueue", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromMfgMtlQueueRe" +
            "sponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueResponse> GetNewReceiptsFromMfgMtlQueueAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDEpicorFau" +
            "ltDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDResponse GetNewReceiptsFromPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDResponse> GetNewReceiptsFromPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDMultiple", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDMultipleR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDMultipleE" +
            "picorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleResponse GetNewReceiptsFromPCIDMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDMultiple", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDMultipleR" +
            "esponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleResponse> GetNewReceiptsFromPCIDMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDSupplyJob" +
            "Num", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDSupplyJob" +
            "NumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDSupplyJob" +
            "NumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumResponse GetNewReceiptsFromPCIDSupplyJobNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDSupplyJob" +
            "Num", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetNewReceiptsFromPCIDSupplyJob" +
            "NumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumResponse> GetNewReceiptsFromPCIDSupplyJobNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreUpdate", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreUpdateEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateResponse PreUpdate(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreUpdate", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateResponse> PreUpdateAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreProcessPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreProcessPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreProcessPCIDEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDResponse PreProcessPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreProcessPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/PreProcessPCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDResponse> PreProcessPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ProcessPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ProcessPCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ProcessPCIDEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDResponse ProcessPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ProcessPCID", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ProcessPCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDResponse> ProcessPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToInventoryRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToInventoryEpicor" +
            "FaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryResponse ReceiveMfgPartToInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToInventoryRespon" +
            "se")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryResponse> ReceiveMfgPartToInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToJob", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToJobResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToJobEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobResponse ReceiveMfgPartToJob(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToJob", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPartToJobResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobResponse> ReceiveMfgPartToJobAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryEpicor" +
            "FaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryResponse ReceiveMfgPCIDtoInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryRespon" +
            "se")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryResponse> ReceiveMfgPCIDtoInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryMultip" +
            "le", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryMultip" +
            "leResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryMultip" +
            "leEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleResponse ReceiveMfgPCIDtoInventoryMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryMultip" +
            "le", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveMfgPCIDtoInventoryMultip" +
            "leResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleResponse> ReceiveMfgPCIDtoInventoryMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveSalvagedPartToInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveSalvagedPartToInventoryR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveSalvagedPartToInventoryE" +
            "picorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryResponse ReceiveSalvagedPartToInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveSalvagedPartToInventory", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ReceiveSalvagedPartToInventoryR" +
            "esponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryResponse> ReceiveSalvagedPartToInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTranQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTranQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTranQtyEpicorFaultDe" +
            "tailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyResponse OnChangeActTranQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTranQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTranQtyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyResponse> OnChangeActTranQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTransUOM", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTransUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTransUOMEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMResponse OnChangeActTransUOM(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTransUOM", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeActTransUOMResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMResponse> OnChangeActTransUOMAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeqEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqResponse OnChangeAssemblySeq(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqResponse> OnChangeAssemblySeqAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq2EpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Response OnChangeAssemblySeq2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeAssemblySeq2Response")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Response> OnChangeAssemblySeq2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeBinNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeBinNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeBinNumEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumResponse OnChangeBinNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeBinNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeBinNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumResponse> OnChangeBinNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNumEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumResponse OnChangeJobNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumResponse> OnChangeJobNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum2EpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Response OnChangeJobNum2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobNum2Response")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Response> OnChangeJobNum2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobSeq2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobSeq2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobSeq2EpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Response OnChangeJobSeq2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobSeq2", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeJobSeq2Response")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Response> OnChangeJobSeq2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeLotNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeLotNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeLotNumEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumResponse OnChangeLotNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeLotNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeLotNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumResponse> OnChangeLotNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeOverrideCost", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeOverrideCostResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeOverrideCostEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostResponse OnChangeOverrideCost(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeOverrideCost", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeOverrideCostResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostResponse> OnChangeOverrideCostAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePartNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePartNumEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumResponse OnChangePartNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePartNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePartNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumResponse> OnChangePartNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsPlant", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsPlantResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsPlantEpicorFa" +
            "ultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantResponse OnChangePCIDParamsPlant(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsPlant", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsPlantResponse" +
            "")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantResponse> OnChangePCIDParamsPlantAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamWarehouseCode", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamWarehouseCodeR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamWarehouseCodeE" +
            "picorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeResponse OnChangePCIDParamWarehouseCode(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamWarehouseCode", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamWarehouseCodeR" +
            "esponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeResponse> OnChangePCIDParamWarehouseCodeAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsBinNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsBinNumRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsBinNumEpicorF" +
            "aultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumResponse OnChangePCIDParamsBinNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsBinNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsBinNumRespons" +
            "e")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumResponse> OnChangePCIDParamsBinNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDate", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDateEpico" +
            "rFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateResponse OnChangePCIDParamsTranDate(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDate", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDateRespo" +
            "nse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateResponse> OnChangePCIDParamsTranDateAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranReference" +
            "", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranReference" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranReference" +
            "EpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceResponse OnChangePCIDParamsTranReference(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranReference" +
            "", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranReference" +
            "Response")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceResponse> OnChangePCIDParamsTranReferenceAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDocTypeID" +
            "", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDocTypeID" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDocTypeID" +
            "EpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDResponse OnChangePCIDParamsTranDocTypeID(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDocTypeID" +
            "", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePCIDParamsTranDocTypeID" +
            "Response")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDResponse> OnChangePCIDParamsTranDocTypeIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePlant", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePlantResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePlantEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantResponse OnChangePlant(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePlant", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangePlantResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantResponse> OnChangePlantAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeWareHouseCode", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeWareHouseCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeWareHouseCodeEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeResponse OnChangeWareHouseCode(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeWareHouseCode", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeWareHouseCodeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeResponse> OnChangeWareHouseCodeAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvageJobSeq", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvageJobSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvageJobSeqEpicorFaul" +
            "tDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqResponse OnChangeSalvageJobSeq(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvageJobSeq", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvageJobSeqResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqResponse> OnChangeSalvageJobSeqAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvagePartNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvagePartNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvagePartNumEpicorFau" +
            "ltDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumResponse OnChangeSalvagePartNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvagePartNum", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeSalvagePartNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumResponse> OnChangeSalvagePartNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeTranQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeTranQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeTranQtyEpicorFaultDetai" +
            "lFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyResponse OnChangeTranQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeTranQty", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/OnChangeTranQtyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyResponse> OnChangeTranQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/EnableSerialMatching", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/EnableSerialMatchingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/EnableSerialMatchingEpicorFault" +
            "DetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingResponse EnableSerialMatching(EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/EnableSerialMatching", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/EnableSerialMatchingResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingResponse> EnableSerialMatchingAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetSelectSerialNumbersParamsEpi" +
            "corFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsResponse GetSelectSerialNumbersParams(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/GetSelectSerialNumbersParamsRes" +
            "ponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsResponse> GetSelectSerialNumbersParamsAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateSN", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateSNEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNResponse ValidateSN(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateSN", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/ValidateSNResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/VerifySerialMatchAndPlanContrac" +
            "t", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/VerifySerialMatchAndPlanContrac" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.ReceiptsFromMfgSvc.EpicorFaultDetail), Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/VerifySerialMatchAndPlanContrac" +
            "tEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractResponse VerifySerialMatchAndPlanContract(EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/VerifySerialMatchAndPlanContrac" +
            "t", ReplyAction="Erp:BO:ReceiptsFromMfg/ReceiptsFromMfgSvcContract/VerifySerialMatchAndPlanContrac" +
            "tResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractResponse> VerifySerialMatchAndPlanContractAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPackageCodeAllocNegQty", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class CheckPackageCodeAllocNegQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string ipcalledFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string ipPackageCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public decimal ipQty;
        
        public CheckPackageCodeAllocNegQtyRequest() {
        }
        
        public CheckPackageCodeAllocNegQtyRequest(string ipcalledFrom, string ipPackageCode, decimal ipQty) {
            this.ipcalledFrom = ipcalledFrom;
            this.ipPackageCode = ipPackageCode;
            this.ipQty = ipQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPackageCodeAllocNegQtyResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class CheckPackageCodeAllocNegQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string opWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string opAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string opAllocWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string opAllocAction;
        
        public CheckPackageCodeAllocNegQtyResponse() {
        }
        
        public CheckPackageCodeAllocNegQtyResponse(string opWarning, string opAction, string opAllocWarning, string opAllocAction) {
            this.opWarning = opWarning;
            this.opAction = opAction;
            this.opAllocWarning = opAllocWarning;
            this.opAllocAction = opAllocAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultWhseBin", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetDefaultWhseBinRequest {
        
        public GetDefaultWhseBinRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultWhseBinResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetDefaultWhseBinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string defaultWhse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string defaultWhseDesc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string defaultBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string defaultBinDescription;
        
        public GetDefaultWhseBinResponse() {
        }
        
        public GetDefaultWhseBinResponse(string defaultWhse, string defaultWhseDesc, string defaultBinNum, string defaultBinDescription) {
            this.defaultWhse = defaultWhse;
            this.defaultWhseDesc = defaultWhseDesc;
            this.defaultBinNum = defaultBinNum;
            this.defaultBinDescription = defaultBinDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPCIDParamsRow", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewPCIDParamsRowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewPCIDParamsRowRequest() {
        }
        
        public GetNewPCIDParamsRowRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewPCIDParamsRowResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewPCIDParamsRowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewPCIDParamsRowResponse() {
        }
        
        public GetNewPCIDParamsRowResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTest", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class NegativeInventoryTestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcWhseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=4)]
        public string pcPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=5)]
        public string pcDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=6)]
        public decimal pdDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=7)]
        public decimal ipSellingQuantity;
        
        public NegativeInventoryTestRequest() {
        }
        
        public NegativeInventoryTestRequest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, decimal pdDimConvFactor, decimal ipSellingQuantity) {
            this.pcPartNum = pcPartNum;
            this.pcWhseCode = pcWhseCode;
            this.pcBinNum = pcBinNum;
            this.pcLotNum = pcLotNum;
            this.pcPCID = pcPCID;
            this.pcDimCode = pcDimCode;
            this.pdDimConvFactor = pdDimConvFactor;
            this.ipSellingQuantity = ipSellingQuantity;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTestResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class NegativeInventoryTestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcNeqQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public NegativeInventoryTestResponse() {
        }
        
        public NegativeInventoryTestResponse(string pcNeqQtyAction, string pcMessage) {
            this.pcNeqQtyAction = pcNeqQtyAction;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateWhsePCIDAndGetDefaultBin", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidateWhsePCIDAndGetDefaultBinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string ToWhse;
        
        public ValidateWhsePCIDAndGetDefaultBinRequest() {
        }
        
        public ValidateWhsePCIDAndGetDefaultBinRequest(string ToWhse) {
            this.ToWhse = ToWhse;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateWhsePCIDAndGetDefaultBinResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidateWhsePCIDAndGetDefaultBinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public bool ValidateWhsePCIDAndGetDefaultBinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string defaultBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string defaultBinDescription;
        
        public ValidateWhsePCIDAndGetDefaultBinResponse() {
        }
        
        public ValidateWhsePCIDAndGetDefaultBinResponse(bool ValidateWhsePCIDAndGetDefaultBinResult, string defaultBinNum, string defaultBinDescription) {
            this.ValidateWhsePCIDAndGetDefaultBinResult = ValidateWhsePCIDAndGetDefaultBinResult;
            this.defaultBinNum = defaultBinNum;
            this.defaultBinDescription = defaultBinDescription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidatePCID", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidatePCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public ValidatePCIDRequest() {
        }
        
        public ValidatePCIDRequest(string pcid, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcid = pcid;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidatePCIDResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidatePCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public bool ValidatePCIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public bool isJobClosed;
        
        public ValidatePCIDResponse() {
        }
        
        public ValidatePCIDResponse(bool ValidatePCIDResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool isJobClosed) {
            this.ValidatePCIDResult = ValidatePCIDResult;
            this.ds = ds;
            this.isJobClosed = isJobClosed;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string whereClauseJobHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string whereClauseJobAsmbl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClauseJobHead, string whereClauseJobAsmbl, int pageSize, int absolutePage) {
            this.whereClauseJobHead = whereClauseJobHead;
            this.whereClauseJobAsmbl = whereClauseJobAsmbl;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string whereClauseJobHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string whereClauseJobAsmbl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(string whereClauseJobHead, string whereClauseJobAsmbl, int pageSize, int absolutePage) {
            this.whereClauseJobHead = whereClauseJobHead;
            this.whereClauseJobAsmbl = whereClauseJobAsmbl;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewJobAsmblMultiple", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewJobAsmblMultipleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcProcessID;
        
        public GetNewJobAsmblMultipleRequest() {
        }
        
        public GetNewJobAsmblMultipleRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds, string pcTranType, string pcProcessID) {
            this.ds = ds;
            this.pcTranType = pcTranType;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewJobAsmblMultipleResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewJobAsmblMultipleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewJobAsmblMultipleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds;
        
        public GetNewJobAsmblMultipleResponse() {
        }
        
        public GetNewJobAsmblMultipleResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewJobAsmblMultipleResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds) {
            this.GetNewJobAsmblMultipleResult = GetNewJobAsmblMultipleResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewJobAsmblSearch", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewJobAsmblSearchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds;
        
        public GetNewJobAsmblSearchRequest() {
        }
        
        public GetNewJobAsmblSearchRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewJobAsmblSearchResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewJobAsmblSearchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds;
        
        public GetNewJobAsmblSearchResponse() {
        }
        
        public GetNewJobAsmblSearchResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfg", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public GetNewReceiptsFromMfgRequest() {
        }
        
        public GetNewReceiptsFromMfgRequest(string pcTranType, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcTranType = pcTranType;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfgResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public GetNewReceiptsFromMfgResponse() {
        }
        
        public GetNewReceiptsFromMfgResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfgJobAsm", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgJobAsmRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcJobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public int piAssemblySeq;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcTranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=4)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public GetNewReceiptsFromMfgJobAsmRequest() {
        }
        
        public GetNewReceiptsFromMfgJobAsmRequest(string pcJobNum, int piAssemblySeq, string pcTranType, string pcProcessID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcJobNum = pcJobNum;
            this.piAssemblySeq = piAssemblySeq;
            this.pcTranType = pcTranType;
            this.pcProcessID = pcProcessID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfgJobAsmResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgJobAsmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public GetNewReceiptsFromMfgJobAsmResponse() {
        }
        
        public GetNewReceiptsFromMfgJobAsmResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfgMtlQueue", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgMtlQueueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcMtlQueueRowIdent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewReceiptsFromMfgMtlQueueRequest() {
        }
        
        public GetNewReceiptsFromMfgMtlQueueRequest(string pcMtlQueueRowIdent, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.pcMtlQueueRowIdent = pcMtlQueueRowIdent;
            this.ds = ds;
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromMfgMtlQueueResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromMfgMtlQueueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewReceiptsFromMfgMtlQueueResponse() {
        }
        
        public GetNewReceiptsFromMfgMtlQueueResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.ds = ds;
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCID", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string tranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string processID;
        
        public GetNewReceiptsFromPCIDRequest() {
        }
        
        public GetNewReceiptsFromPCIDRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcid, string tranType, string processID) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.pcid = pcid;
            this.tranType = tranType;
            this.processID = processID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCIDResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewReceiptsFromPCIDResponse() {
        }
        
        public GetNewReceiptsFromPCIDResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.GetNewReceiptsFromPCIDResult = GetNewReceiptsFromPCIDResult;
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCIDMultiple", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDMultipleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string tranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string processID;
        
        public GetNewReceiptsFromPCIDMultipleRequest() {
        }
        
        public GetNewReceiptsFromPCIDMultipleRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string tranType, string processID) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.tranType = tranType;
            this.processID = processID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCIDMultipleResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDMultipleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDMultipleResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewReceiptsFromPCIDMultipleResponse() {
        }
        
        public GetNewReceiptsFromPCIDMultipleResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDMultipleResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.GetNewReceiptsFromPCIDMultipleResult = GetNewReceiptsFromPCIDMultipleResult;
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCIDSupplyJobNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDSupplyJobNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string supplyJobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string tranType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string processID;
        
        public GetNewReceiptsFromPCIDSupplyJobNumRequest() {
        }
        
        public GetNewReceiptsFromPCIDSupplyJobNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string supplyJobNum, string tranType, string processID) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.supplyJobNum = supplyJobNum;
            this.tranType = tranType;
            this.processID = processID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewReceiptsFromPCIDSupplyJobNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetNewReceiptsFromPCIDSupplyJobNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDSupplyJobNumResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        public GetNewReceiptsFromPCIDSupplyJobNumResponse() {
        }
        
        public GetNewReceiptsFromPCIDSupplyJobNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDSupplyJobNumResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            this.GetNewReceiptsFromPCIDSupplyJobNumResult = GetNewReceiptsFromPCIDSupplyJobNumResult;
            this.dsSelectedPCID = dsSelectedPCID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreUpdate", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class PreUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public PreUpdateRequest() {
        }
        
        public PreUpdateRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreUpdateResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class PreUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool requiresUserInput;
        
        public PreUpdateResponse() {
        }
        
        public PreUpdateResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool requiresUserInput) {
            this.ds = ds;
            this.requiresUserInput = requiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreProcessPCID", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class PreProcessPCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public PreProcessPCIDRequest() {
        }
        
        public PreProcessPCIDRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreProcessPCIDResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class PreProcessPCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool requiresUserInput;
        
        public PreProcessPCIDResponse() {
        }
        
        public PreProcessPCIDResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool requiresUserInput) {
            this.ds = ds;
            this.requiresUserInput = requiresUserInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPCID", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ProcessPCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string whse;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string binNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=4)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public ProcessPCIDRequest() {
        }
        
        public ProcessPCIDRequest(string pcid, string whse, string binNum, string pcProcessID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcid = pcid;
            this.whse = whse;
            this.binNum = binNum;
            this.pcProcessID = pcProcessID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPCIDResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ProcessPCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ProcessPCIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public ProcessPCIDResponse() {
        }
        
        public ProcessPCIDResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ProcessPCIDResult, string pcMessage, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ProcessPCIDResult = ProcessPCIDResult;
            this.pcMessage = pcMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPartToInventory", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPartToInventoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public decimal pdSerialNoQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public bool plNegQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcProcessID;
        
        public ReceiveMfgPartToInventoryRequest() {
        }
        
        public ReceiveMfgPartToInventoryRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, decimal pdSerialNoQty, bool plNegQtyAction, string pcProcessID) {
            this.ds = ds;
            this.pdSerialNoQty = pdSerialNoQty;
            this.plNegQtyAction = plNegQtyAction;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPartToInventoryResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPartToInventoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcPartTranPKs;
        
        public ReceiveMfgPartToInventoryResponse() {
        }
        
        public ReceiveMfgPartToInventoryResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage, string pcPartTranPKs) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcPartTranPKs = pcPartTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPartToJob", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPartToJobRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public decimal pdSerialNoQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public bool plNegQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public bool plIssuedComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=4)]
        public string pcProcessID;
        
        public ReceiveMfgPartToJobRequest() {
        }
        
        public ReceiveMfgPartToJobRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, decimal pdSerialNoQty, bool plNegQtyAction, bool plIssuedComplete, string pcProcessID) {
            this.ds = ds;
            this.pdSerialNoQty = pdSerialNoQty;
            this.plNegQtyAction = plNegQtyAction;
            this.plIssuedComplete = plIssuedComplete;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPartToJobResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPartToJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcPartTranPKs;
        
        public ReceiveMfgPartToJobResponse() {
        }
        
        public ReceiveMfgPartToJobResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage, string pcPartTranPKs) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcPartTranPKs = pcPartTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPCIDtoInventory", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPCIDtoInventoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcProcessID;
        
        public ReceiveMfgPCIDtoInventoryRequest() {
        }
        
        public ReceiveMfgPCIDtoInventoryRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcid, string pcProcessID) {
            this.ds = ds;
            this.dsSelectedPCID = dsSelectedPCID;
            this.pcid = pcid;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPCIDtoInventoryResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPCIDtoInventoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcPartTranPKs;
        
        public ReceiveMfgPCIDtoInventoryResponse() {
        }
        
        public ReceiveMfgPCIDtoInventoryResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcMessage, string pcPartTranPKs) {
            this.ds = ds;
            this.dsSelectedPCID = dsSelectedPCID;
            this.pcMessage = pcMessage;
            this.pcPartTranPKs = pcPartTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPCIDtoInventoryMultiple", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPCIDtoInventoryMultipleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcProcessID;
        
        public ReceiveMfgPCIDtoInventoryMultipleRequest() {
        }
        
        public ReceiveMfgPCIDtoInventoryMultipleRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcProcessID) {
            this.ds = ds;
            this.dsSelectedPCID = dsSelectedPCID;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveMfgPCIDtoInventoryMultipleResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveMfgPCIDtoInventoryMultipleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcPartTranPKs;
        
        public ReceiveMfgPCIDtoInventoryMultipleResponse() {
        }
        
        public ReceiveMfgPCIDtoInventoryMultipleResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage, string pcPartTranPKs) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcPartTranPKs = pcPartTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveSalvagedPartToInventory", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveSalvagedPartToInventoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcProcessID;
        
        public ReceiveSalvagedPartToInventoryRequest() {
        }
        
        public ReceiveSalvagedPartToInventoryRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID) {
            this.ds = ds;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReceiveSalvagedPartToInventoryResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ReceiveSalvagedPartToInventoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcPartTranPKs;
        
        public ReceiveSalvagedPartToInventoryResponse() {
        }
        
        public ReceiveSalvagedPartToInventoryResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage, string pcPartTranPKs) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.pcPartTranPKs = pcPartTranPKs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeActTranQty", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeActTranQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeActTranQtyRequest() {
        }
        
        public OnChangeActTranQtyRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeActTranQtyResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeActTranQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeActTranQtyResponse() {
        }
        
        public OnChangeActTranQtyResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeActTransUOM", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeActTransUOMRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pUOM;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeActTransUOMRequest() {
        }
        
        public OnChangeActTransUOMRequest(string pUOM, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pUOM = pUOM;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeActTransUOMResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeActTransUOMResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeActTransUOMResponse() {
        }
        
        public OnChangeActTransUOMResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAssemblySeq", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeAssemblySeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeAssemblySeqRequest() {
        }
        
        public OnChangeAssemblySeqRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAssemblySeqResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeAssemblySeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeAssemblySeqResponse() {
        }
        
        public OnChangeAssemblySeqResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAssemblySeq2", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeAssemblySeq2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeAssemblySeq2Request() {
        }
        
        public OnChangeAssemblySeq2Request(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeAssemblySeq2Response", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeAssemblySeq2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeAssemblySeq2Response() {
        }
        
        public OnChangeAssemblySeq2Response(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBinNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeBinNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeBinNumRequest() {
        }
        
        public OnChangeBinNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeBinNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeBinNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeBinNumResponse() {
        }
        
        public OnChangeBinNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeJobNumRequest() {
        }
        
        public OnChangeJobNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeJobNumResponse() {
        }
        
        public OnChangeJobNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNum2", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobNum2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeJobNum2Request() {
        }
        
        public OnChangeJobNum2Request(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobNum2Response", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobNum2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeJobNum2Response() {
        }
        
        public OnChangeJobNum2Response(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobSeq2", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobSeq2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeJobSeq2Request() {
        }
        
        public OnChangeJobSeq2Request(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeJobSeq2Response", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeJobSeq2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeJobSeq2Response() {
        }
        
        public OnChangeJobSeq2Response(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLotNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeLotNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool messageasked;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string ProposedLotNumber;
        
        public OnChangeLotNumRequest() {
        }
        
        public OnChangeLotNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool messageasked, string ProposedLotNumber) {
            this.ds = ds;
            this.messageasked = messageasked;
            this.ProposedLotNumber = ProposedLotNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeLotNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeLotNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string errormsg;
        
        public OnChangeLotNumResponse() {
        }
        
        public OnChangeLotNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage, string errormsg) {
            this.ds = ds;
            this.pcMessage = pcMessage;
            this.errormsg = errormsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOverrideCost", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeOverrideCostRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool ProposedOverride;
        
        public OnChangeOverrideCostRequest() {
        }
        
        public OnChangeOverrideCostRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool ProposedOverride) {
            this.ds = ds;
            this.ProposedOverride = ProposedOverride;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeOverrideCostResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeOverrideCostResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeOverrideCostResponse() {
        }
        
        public OnChangeOverrideCostResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePartNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string ProposedPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public bool ipContinue;
        
        public OnChangePartNumRequest() {
        }
        
        public OnChangePartNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string ProposedPartNum, bool ipContinue) {
            this.ds = ds;
            this.ProposedPartNum = ProposedPartNum;
            this.ipContinue = ipContinue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePartNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string opMessage;
        
        public OnChangePartNumResponse() {
        }
        
        public OnChangePartNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string opMessage) {
            this.ds = ds;
            this.opMessage = opMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsPlant", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsPlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string plant2;
        
        public OnChangePCIDParamsPlantRequest() {
        }
        
        public OnChangePCIDParamsPlantRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID, string plant2) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.pcProcessID = pcProcessID;
            this.plant2 = plant2;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsPlantResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsPlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamsPlantResponse() {
        }
        
        public OnChangePCIDParamsPlantResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamWarehouseCode", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamWarehouseCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string warehouseCode;
        
        public OnChangePCIDParamWarehouseCodeRequest() {
        }
        
        public OnChangePCIDParamWarehouseCodeRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID, string warehouseCode) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.pcProcessID = pcProcessID;
            this.warehouseCode = warehouseCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamWarehouseCodeResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamWarehouseCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamWarehouseCodeResponse() {
        }
        
        public OnChangePCIDParamWarehouseCodeResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsBinNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsBinNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string binNum;
        
        public OnChangePCIDParamsBinNumRequest() {
        }
        
        public OnChangePCIDParamsBinNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string binNum) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.binNum = binNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsBinNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsBinNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamsBinNumResponse() {
        }
        
        public OnChangePCIDParamsBinNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranDate", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public System.Nullable<System.DateTime> tranDate;
        
        public OnChangePCIDParamsTranDateRequest() {
        }
        
        public OnChangePCIDParamsTranDateRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, System.Nullable<System.DateTime> tranDate) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.tranDate = tranDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranDateResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamsTranDateResponse() {
        }
        
        public OnChangePCIDParamsTranDateResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranReference", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranReferenceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string tranReference;
        
        public OnChangePCIDParamsTranReferenceRequest() {
        }
        
        public OnChangePCIDParamsTranReferenceRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string tranReference) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.tranReference = tranReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranReferenceResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranReferenceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamsTranReferenceResponse() {
        }
        
        public OnChangePCIDParamsTranReferenceResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranDocTypeID", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranDocTypeIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string tranDocTypeID;
        
        public OnChangePCIDParamsTranDocTypeIDRequest() {
        }
        
        public OnChangePCIDParamsTranDocTypeIDRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string tranDocTypeID) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
            this.tranDocTypeID = tranDocTypeID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePCIDParamsTranDocTypeIDResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePCIDParamsTranDocTypeIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePCIDParamsTranDocTypeIDResponse() {
        }
        
        public OnChangePCIDParamsTranDocTypeIDResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.dsSelectedPCID = dsSelectedPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePlant", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePlantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePlantRequest() {
        }
        
        public OnChangePlantRequest(string pcProcessID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcProcessID = pcProcessID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangePlantResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangePlantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangePlantResponse() {
        }
        
        public OnChangePlantResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeWareHouseCode", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeWareHouseCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public string pcProcessID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeWareHouseCodeRequest() {
        }
        
        public OnChangeWareHouseCodeRequest(string pcProcessID, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.pcProcessID = pcProcessID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeWareHouseCodeResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeWareHouseCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeWareHouseCodeResponse() {
        }
        
        public OnChangeWareHouseCodeResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeSalvageJobSeq", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeSalvageJobSeqRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeSalvageJobSeqRequest() {
        }
        
        public OnChangeSalvageJobSeqRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeSalvageJobSeqResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeSalvageJobSeqResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeSalvageJobSeqResponse() {
        }
        
        public OnChangeSalvageJobSeqResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeSalvagePartNum", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeSalvagePartNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeSalvagePartNumRequest() {
        }
        
        public OnChangeSalvagePartNumRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeSalvagePartNumResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeSalvagePartNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeSalvagePartNumResponse() {
        }
        
        public OnChangeSalvagePartNumResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranQty", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeTranQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public OnChangeTranQtyRequest() {
        }
        
        public OnChangeTranQtyRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OnChangeTranQtyResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class OnChangeTranQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMessage;
        
        public OnChangeTranQtyResponse() {
        }
        
        public OnChangeTranQtyResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMessage) {
            this.ds = ds;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableSerialMatching", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class EnableSerialMatchingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public EnableSerialMatchingRequest() {
        }
        
        public EnableSerialMatchingRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EnableSerialMatchingResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class EnableSerialMatchingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool plEnable;
        
        public EnableSerialMatchingResponse() {
        }
        
        public EnableSerialMatchingResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool plEnable) {
            this.ds = ds;
            this.plEnable = plEnable;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSelectSerialNumbersParams", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetSelectSerialNumbersParamsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcProcessID;
        
        public GetSelectSerialNumbersParamsRequest() {
        }
        
        public GetSelectSerialNumbersParamsRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID) {
            this.ds = ds;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSelectSerialNumbersParamsResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class GetSelectSerialNumbersParamsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParamsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public GetSelectSerialNumbersParamsResponse() {
        }
        
        public GetSelectSerialNumbersParamsResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParamsResult, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.GetSelectSerialNumbersParamsResult = GetSelectSerialNumbersParamsResult;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSN", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidateSNRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public string pcProcessID;
        
        public ValidateSNRequest() {
        }
        
        public ValidateSNRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string serialNumber, string pcProcessID) {
            this.ds = ds;
            this.serialNumber = serialNumber;
            this.pcProcessID = pcProcessID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateSNResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class ValidateSNResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public bool isVoided;
        
        public ValidateSNResponse() {
        }
        
        public ValidateSNResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool isVoided) {
            this.ds = ds;
            this.isVoided = isVoided;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifySerialMatchAndPlanContract", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class VerifySerialMatchAndPlanContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        public VerifySerialMatchAndPlanContractRequest() {
        }
        
        public VerifySerialMatchAndPlanContractRequest(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifySerialMatchAndPlanContractResponse", WrapperNamespace="Erp:BO:ReceiptsFromMfg", IsWrapped=true)]
    public partial class VerifySerialMatchAndPlanContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=0)]
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=1)]
        public string pcMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=2)]
        public int piMsgType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=3)]
        public string pcPCBinAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:ReceiptsFromMfg", Order=4)]
        public string pcPCBinMessage;
        
        public VerifySerialMatchAndPlanContractResponse() {
        }
        
        public VerifySerialMatchAndPlanContractResponse(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcMsg, int piMsgType, string pcPCBinAction, string pcPCBinMessage) {
            this.ds = ds;
            this.pcMsg = pcMsg;
            this.piMsgType = piMsgType;
            this.pcPCBinAction = pcPCBinAction;
            this.pcPCBinMessage = pcPCBinMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ReceiptsFromMfgSvcContractChannel : EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiptsFromMfgSvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract>, EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract {
        
        public ReceiptsFromMfgSvcContractClient() {
        }
        
        public ReceiptsFromMfgSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReceiptsFromMfgSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptsFromMfgSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReceiptsFromMfgSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.CheckPackageCodeAllocNegQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest request) {
            return base.Channel.CheckPackageCodeAllocNegQty(request);
        }
        
        public string CheckPackageCodeAllocNegQty(string ipcalledFrom, string ipPackageCode, decimal ipQty, out string opAction, out string opAllocWarning, out string opAllocAction) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest();
            inValue.ipcalledFrom = ipcalledFrom;
            inValue.ipPackageCode = ipPackageCode;
            inValue.ipQty = ipQty;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).CheckPackageCodeAllocNegQty(inValue);
            opAction = retVal.opAction;
            opAllocWarning = retVal.opAllocWarning;
            opAllocAction = retVal.opAllocAction;
            return retVal.opWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyResponse> CheckPackageCodeAllocNegQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.CheckPackageCodeAllocNegQtyRequest request) {
            return base.Channel.CheckPackageCodeAllocNegQtyAsync(request);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        public string GetDefaultTranDocTypeID() {
            return base.Channel.GetDefaultTranDocTypeID();
        }
        
        public System.Threading.Tasks.Task<string> GetDefaultTranDocTypeIDAsync() {
            return base.Channel.GetDefaultTranDocTypeIDAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetDefaultWhseBin(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest request) {
            return base.Channel.GetDefaultWhseBin(request);
        }
        
        public string GetDefaultWhseBin(out string defaultWhseDesc, out string defaultBinNum, out string defaultBinDescription) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest();
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetDefaultWhseBin(inValue);
            defaultWhseDesc = retVal.defaultWhseDesc;
            defaultBinNum = retVal.defaultBinNum;
            defaultBinDescription = retVal.defaultBinDescription;
            return retVal.defaultWhse;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinResponse> GetDefaultWhseBinAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetDefaultWhseBinRequest request) {
            return base.Channel.GetDefaultWhseBinAsync(request);
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewPCIDParamsRow(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest request) {
            return base.Channel.GetNewPCIDParamsRow(request);
        }
        
        public void GetNewPCIDParamsRow(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewPCIDParamsRow(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowResponse> GetNewPCIDParamsRowAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewPCIDParamsRowRequest request) {
            return base.Channel.GetNewPCIDParamsRowAsync(request);
        }
        
        public bool IsValidAssembly(string pcJobNum, int piAssemblySeq) {
            return base.Channel.IsValidAssembly(pcJobNum, piAssemblySeq);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidAssemblyAsync(string pcJobNum, int piAssemblySeq) {
            return base.Channel.IsValidAssemblyAsync(pcJobNum, piAssemblySeq);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.NegativeInventoryTest(EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTest(request);
        }
        
        public string NegativeInventoryTest(string pcPartNum, string pcWhseCode, string pcBinNum, string pcLotNum, string pcPCID, string pcDimCode, decimal pdDimConvFactor, decimal ipSellingQuantity, out string pcMessage) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest();
            inValue.pcPartNum = pcPartNum;
            inValue.pcWhseCode = pcWhseCode;
            inValue.pcBinNum = pcBinNum;
            inValue.pcLotNum = pcLotNum;
            inValue.pcPCID = pcPCID;
            inValue.pcDimCode = pcDimCode;
            inValue.pdDimConvFactor = pdDimConvFactor;
            inValue.ipSellingQuantity = ipSellingQuantity;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).NegativeInventoryTest(inValue);
            pcMessage = retVal.pcMessage;
            return retVal.pcNeqQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTestAsync(request);
        }
        
        public bool ValidateWhsePCID(string ToWhse) {
            return base.Channel.ValidateWhsePCID(ToWhse);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateWhsePCIDAsync(string ToWhse) {
            return base.Channel.ValidateWhsePCIDAsync(ToWhse);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ValidateWhsePCIDAndGetDefaultBin(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest request) {
            return base.Channel.ValidateWhsePCIDAndGetDefaultBin(request);
        }
        
        public bool ValidateWhsePCIDAndGetDefaultBin(string ToWhse, out string defaultBinNum, out string defaultBinDescription) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest();
            inValue.ToWhse = ToWhse;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ValidateWhsePCIDAndGetDefaultBin(inValue);
            defaultBinNum = retVal.defaultBinNum;
            defaultBinDescription = retVal.defaultBinDescription;
            return retVal.ValidateWhsePCIDAndGetDefaultBinResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinResponse> ValidateWhsePCIDAndGetDefaultBinAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateWhsePCIDAndGetDefaultBinRequest request) {
            return base.Channel.ValidateWhsePCIDAndGetDefaultBinAsync(request);
        }
        
        public bool ValidateWhseBinPCID(string ToWhse, string ToBinNum) {
            return base.Channel.ValidateWhseBinPCID(ToWhse, ToBinNum);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateWhseBinPCIDAsync(string ToWhse, string ToBinNum) {
            return base.Channel.ValidateWhseBinPCIDAsync(ToWhse, ToBinNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ValidatePCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest request) {
            return base.Channel.ValidatePCID(request);
        }
        
        public bool ValidatePCID(string pcid, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, out bool isJobClosed) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest();
            inValue.pcid = pcid;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ValidatePCID(inValue);
            ds = retVal.ds;
            isJobClosed = retVal.isJobClosed;
            return retVal.ValidatePCIDResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDResponse> ValidatePCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidatePCIDRequest request) {
            return base.Channel.ValidatePCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetList(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetList(string whereClauseJobHead, string whereClauseJobAsmbl, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest();
            inValue.whereClauseJobHead = whereClauseJobHead;
            inValue.whereClauseJobAsmbl = whereClauseJobAsmbl;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetRows(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgJobAsmblTableset GetRows(string whereClauseJobHead, string whereClauseJobAsmbl, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest();
            inValue.whereClauseJobHead = whereClauseJobHead;
            inValue.whereClauseJobAsmbl = whereClauseJobAsmbl;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewJobAsmblMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest request) {
            return base.Channel.GetNewJobAsmblMultiple(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewJobAsmblMultiple(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds, string pcTranType, string pcProcessID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest();
            inValue.ds = ds;
            inValue.pcTranType = pcTranType;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewJobAsmblMultiple(inValue);
            ds = retVal.ds;
            return retVal.GetNewJobAsmblMultipleResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleResponse> GetNewJobAsmblMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblMultipleRequest request) {
            return base.Channel.GetNewJobAsmblMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewJobAsmblSearch(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest request) {
            return base.Channel.GetNewJobAsmblSearch(request);
        }
        
        public void GetNewJobAsmblSearch(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsJobAsmblTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewJobAsmblSearch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchResponse> GetNewJobAsmblSearchAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewJobAsmblSearchRequest request) {
            return base.Channel.GetNewJobAsmblSearchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromMfg(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest request) {
            return base.Channel.GetNewReceiptsFromMfg(request);
        }
        
        public void GetNewReceiptsFromMfg(string pcTranType, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest();
            inValue.pcTranType = pcTranType;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromMfg(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgResponse> GetNewReceiptsFromMfgAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgRequest request) {
            return base.Channel.GetNewReceiptsFromMfgAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromMfgJobAsm(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest request) {
            return base.Channel.GetNewReceiptsFromMfgJobAsm(request);
        }
        
        public void GetNewReceiptsFromMfgJobAsm(string pcJobNum, int piAssemblySeq, string pcTranType, string pcProcessID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest();
            inValue.pcJobNum = pcJobNum;
            inValue.piAssemblySeq = piAssemblySeq;
            inValue.pcTranType = pcTranType;
            inValue.pcProcessID = pcProcessID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromMfgJobAsm(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmResponse> GetNewReceiptsFromMfgJobAsmAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgJobAsmRequest request) {
            return base.Channel.GetNewReceiptsFromMfgJobAsmAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromMfgMtlQueue(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest request) {
            return base.Channel.GetNewReceiptsFromMfgMtlQueue(request);
        }
        
        public void GetNewReceiptsFromMfgMtlQueue(string pcMtlQueueRowIdent, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest();
            inValue.pcMtlQueueRowIdent = pcMtlQueueRowIdent;
            inValue.ds = ds;
            inValue.dsSelectedPCID = dsSelectedPCID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromMfgMtlQueue(inValue);
            ds = retVal.ds;
            dsSelectedPCID = retVal.dsSelectedPCID;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueResponse> GetNewReceiptsFromMfgMtlQueueAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromMfgMtlQueueRequest request) {
            return base.Channel.GetNewReceiptsFromMfgMtlQueueAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest request) {
            return base.Channel.GetNewReceiptsFromPCID(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCID(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcid, string tranType, string processID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.pcid = pcid;
            inValue.tranType = tranType;
            inValue.processID = processID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromPCID(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            return retVal.GetNewReceiptsFromPCIDResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDResponse> GetNewReceiptsFromPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDRequest request) {
            return base.Channel.GetNewReceiptsFromPCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromPCIDMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest request) {
            return base.Channel.GetNewReceiptsFromPCIDMultiple(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDMultiple(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string tranType, string processID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.tranType = tranType;
            inValue.processID = processID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromPCIDMultiple(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            return retVal.GetNewReceiptsFromPCIDMultipleResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleResponse> GetNewReceiptsFromPCIDMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDMultipleRequest request) {
            return base.Channel.GetNewReceiptsFromPCIDMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetNewReceiptsFromPCIDSupplyJobNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest request) {
            return base.Channel.GetNewReceiptsFromPCIDSupplyJobNum(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset GetNewReceiptsFromPCIDSupplyJobNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string supplyJobNum, string tranType, string processID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.supplyJobNum = supplyJobNum;
            inValue.tranType = tranType;
            inValue.processID = processID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetNewReceiptsFromPCIDSupplyJobNum(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            return retVal.GetNewReceiptsFromPCIDSupplyJobNumResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumResponse> GetNewReceiptsFromPCIDSupplyJobNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetNewReceiptsFromPCIDSupplyJobNumRequest request) {
            return base.Channel.GetNewReceiptsFromPCIDSupplyJobNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.PreUpdate(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest request) {
            return base.Channel.PreUpdate(request);
        }
        
        public bool PreUpdate(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).PreUpdate(inValue);
            ds = retVal.ds;
            return retVal.requiresUserInput;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateResponse> PreUpdateAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreUpdateRequest request) {
            return base.Channel.PreUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.PreProcessPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest request) {
            return base.Channel.PreProcessPCID(request);
        }
        
        public bool PreProcessPCID(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).PreProcessPCID(inValue);
            ds = retVal.ds;
            return retVal.requiresUserInput;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDResponse> PreProcessPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.PreProcessPCIDRequest request) {
            return base.Channel.PreProcessPCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ProcessPCID(EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest request) {
            return base.Channel.ProcessPCID(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ProcessPCID(string pcid, string whse, string binNum, string pcProcessID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, out string pcMessage) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest();
            inValue.pcid = pcid;
            inValue.whse = whse;
            inValue.binNum = binNum;
            inValue.pcProcessID = pcProcessID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ProcessPCID(inValue);
            pcMessage = retVal.pcMessage;
            ds = retVal.ds;
            return retVal.ProcessPCIDResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDResponse> ProcessPCIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ProcessPCIDRequest request) {
            return base.Channel.ProcessPCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ReceiveMfgPartToInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest request) {
            return base.Channel.ReceiveMfgPartToInventory(request);
        }
        
        public string ReceiveMfgPartToInventory(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, decimal pdSerialNoQty, bool plNegQtyAction, string pcProcessID, out string pcPartTranPKs) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest();
            inValue.ds = ds;
            inValue.pdSerialNoQty = pdSerialNoQty;
            inValue.plNegQtyAction = plNegQtyAction;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ReceiveMfgPartToInventory(inValue);
            ds = retVal.ds;
            pcPartTranPKs = retVal.pcPartTranPKs;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryResponse> ReceiveMfgPartToInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToInventoryRequest request) {
            return base.Channel.ReceiveMfgPartToInventoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ReceiveMfgPartToJob(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest request) {
            return base.Channel.ReceiveMfgPartToJob(request);
        }
        
        public string ReceiveMfgPartToJob(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, decimal pdSerialNoQty, bool plNegQtyAction, bool plIssuedComplete, string pcProcessID, out string pcPartTranPKs) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest();
            inValue.ds = ds;
            inValue.pdSerialNoQty = pdSerialNoQty;
            inValue.plNegQtyAction = plNegQtyAction;
            inValue.plIssuedComplete = plIssuedComplete;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ReceiveMfgPartToJob(inValue);
            ds = retVal.ds;
            pcPartTranPKs = retVal.pcPartTranPKs;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobResponse> ReceiveMfgPartToJobAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPartToJobRequest request) {
            return base.Channel.ReceiveMfgPartToJobAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ReceiveMfgPCIDtoInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest request) {
            return base.Channel.ReceiveMfgPCIDtoInventory(request);
        }
        
        public string ReceiveMfgPCIDtoInventory(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcid, string pcProcessID, out string pcPartTranPKs) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest();
            inValue.ds = ds;
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.pcid = pcid;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ReceiveMfgPCIDtoInventory(inValue);
            ds = retVal.ds;
            dsSelectedPCID = retVal.dsSelectedPCID;
            pcPartTranPKs = retVal.pcPartTranPKs;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryResponse> ReceiveMfgPCIDtoInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryRequest request) {
            return base.Channel.ReceiveMfgPCIDtoInventoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ReceiveMfgPCIDtoInventoryMultiple(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest request) {
            return base.Channel.ReceiveMfgPCIDtoInventoryMultiple(request);
        }
        
        public string ReceiveMfgPCIDtoInventoryMultiple(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, string pcProcessID, out string pcPartTranPKs) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest();
            inValue.ds = ds;
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ReceiveMfgPCIDtoInventoryMultiple(inValue);
            ds = retVal.ds;
            pcPartTranPKs = retVal.pcPartTranPKs;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleResponse> ReceiveMfgPCIDtoInventoryMultipleAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveMfgPCIDtoInventoryMultipleRequest request) {
            return base.Channel.ReceiveMfgPCIDtoInventoryMultipleAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ReceiveSalvagedPartToInventory(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest request) {
            return base.Channel.ReceiveSalvagedPartToInventory(request);
        }
        
        public string ReceiveSalvagedPartToInventory(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID, out string pcPartTranPKs) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest();
            inValue.ds = ds;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ReceiveSalvagedPartToInventory(inValue);
            ds = retVal.ds;
            pcPartTranPKs = retVal.pcPartTranPKs;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryResponse> ReceiveSalvagedPartToInventoryAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiveSalvagedPartToInventoryRequest request) {
            return base.Channel.ReceiveSalvagedPartToInventoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeActTranQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest request) {
            return base.Channel.OnChangeActTranQty(request);
        }
        
        public string OnChangeActTranQty(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeActTranQty(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyResponse> OnChangeActTranQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTranQtyRequest request) {
            return base.Channel.OnChangeActTranQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeActTransUOM(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest request) {
            return base.Channel.OnChangeActTransUOM(request);
        }
        
        public string OnChangeActTransUOM(string pUOM, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest();
            inValue.pUOM = pUOM;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeActTransUOM(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMResponse> OnChangeActTransUOMAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeActTransUOMRequest request) {
            return base.Channel.OnChangeActTransUOMAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeAssemblySeq(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest request) {
            return base.Channel.OnChangeAssemblySeq(request);
        }
        
        public string OnChangeAssemblySeq(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeAssemblySeq(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqResponse> OnChangeAssemblySeqAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeqRequest request) {
            return base.Channel.OnChangeAssemblySeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Response EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeAssemblySeq2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request request) {
            return base.Channel.OnChangeAssemblySeq2(request);
        }
        
        public string OnChangeAssemblySeq2(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Response retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeAssemblySeq2(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Response> OnChangeAssemblySeq2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeAssemblySeq2Request request) {
            return base.Channel.OnChangeAssemblySeq2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeBinNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest request) {
            return base.Channel.OnChangeBinNum(request);
        }
        
        public void OnChangeBinNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeBinNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumResponse> OnChangeBinNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeBinNumRequest request) {
            return base.Channel.OnChangeBinNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeJobNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest request) {
            return base.Channel.OnChangeJobNum(request);
        }
        
        public void OnChangeJobNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeJobNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumResponse> OnChangeJobNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNumRequest request) {
            return base.Channel.OnChangeJobNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Response EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeJobNum2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request request) {
            return base.Channel.OnChangeJobNum2(request);
        }
        
        public string OnChangeJobNum2(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Response retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeJobNum2(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Response> OnChangeJobNum2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobNum2Request request) {
            return base.Channel.OnChangeJobNum2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Response EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeJobSeq2(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request request) {
            return base.Channel.OnChangeJobSeq2(request);
        }
        
        public string OnChangeJobSeq2(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Response retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeJobSeq2(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Response> OnChangeJobSeq2Async(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeJobSeq2Request request) {
            return base.Channel.OnChangeJobSeq2Async(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeLotNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest request) {
            return base.Channel.OnChangeLotNum(request);
        }
        
        public string OnChangeLotNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool messageasked, string ProposedLotNumber, out string errormsg) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest();
            inValue.ds = ds;
            inValue.messageasked = messageasked;
            inValue.ProposedLotNumber = ProposedLotNumber;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeLotNum(inValue);
            ds = retVal.ds;
            errormsg = retVal.errormsg;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumResponse> OnChangeLotNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeLotNumRequest request) {
            return base.Channel.OnChangeLotNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeOverrideCost(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest request) {
            return base.Channel.OnChangeOverrideCost(request);
        }
        
        public void OnChangeOverrideCost(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, bool ProposedOverride) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest();
            inValue.ds = ds;
            inValue.ProposedOverride = ProposedOverride;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeOverrideCost(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostResponse> OnChangeOverrideCostAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeOverrideCostRequest request) {
            return base.Channel.OnChangeOverrideCostAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePartNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest request) {
            return base.Channel.OnChangePartNum(request);
        }
        
        public string OnChangePartNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string ProposedPartNum, bool ipContinue) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest();
            inValue.ds = ds;
            inValue.ProposedPartNum = ProposedPartNum;
            inValue.ipContinue = ipContinue;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePartNum(inValue);
            ds = retVal.ds;
            return retVal.opMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumResponse> OnChangePartNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePartNumRequest request) {
            return base.Channel.OnChangePartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamsPlant(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest request) {
            return base.Channel.OnChangePCIDParamsPlant(request);
        }
        
        public void OnChangePCIDParamsPlant(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID, string plant2) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.pcProcessID = pcProcessID;
            inValue.plant2 = plant2;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamsPlant(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantResponse> OnChangePCIDParamsPlantAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsPlantRequest request) {
            return base.Channel.OnChangePCIDParamsPlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamWarehouseCode(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest request) {
            return base.Channel.OnChangePCIDParamWarehouseCode(request);
        }
        
        public void OnChangePCIDParamWarehouseCode(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID, string warehouseCode) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.pcProcessID = pcProcessID;
            inValue.warehouseCode = warehouseCode;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamWarehouseCode(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeResponse> OnChangePCIDParamWarehouseCodeAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamWarehouseCodeRequest request) {
            return base.Channel.OnChangePCIDParamWarehouseCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamsBinNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest request) {
            return base.Channel.OnChangePCIDParamsBinNum(request);
        }
        
        public void OnChangePCIDParamsBinNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string binNum) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.binNum = binNum;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamsBinNum(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumResponse> OnChangePCIDParamsBinNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsBinNumRequest request) {
            return base.Channel.OnChangePCIDParamsBinNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamsTranDate(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest request) {
            return base.Channel.OnChangePCIDParamsTranDate(request);
        }
        
        public void OnChangePCIDParamsTranDate(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, System.Nullable<System.DateTime> tranDate) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.tranDate = tranDate;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamsTranDate(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateResponse> OnChangePCIDParamsTranDateAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDateRequest request) {
            return base.Channel.OnChangePCIDParamsTranDateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamsTranReference(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest request) {
            return base.Channel.OnChangePCIDParamsTranReference(request);
        }
        
        public void OnChangePCIDParamsTranReference(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string tranReference) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.tranReference = tranReference;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamsTranReference(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceResponse> OnChangePCIDParamsTranReferenceAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranReferenceRequest request) {
            return base.Channel.OnChangePCIDParamsTranReferenceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePCIDParamsTranDocTypeID(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest request) {
            return base.Channel.OnChangePCIDParamsTranDocTypeID(request);
        }
        
        public void OnChangePCIDParamsTranDocTypeID(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectedReceiptsPCIDTableset dsSelectedPCID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string tranDocTypeID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest();
            inValue.dsSelectedPCID = dsSelectedPCID;
            inValue.ds = ds;
            inValue.tranDocTypeID = tranDocTypeID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePCIDParamsTranDocTypeID(inValue);
            dsSelectedPCID = retVal.dsSelectedPCID;
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDResponse> OnChangePCIDParamsTranDocTypeIDAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePCIDParamsTranDocTypeIDRequest request) {
            return base.Channel.OnChangePCIDParamsTranDocTypeIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangePlant(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest request) {
            return base.Channel.OnChangePlant(request);
        }
        
        public void OnChangePlant(string pcProcessID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest();
            inValue.pcProcessID = pcProcessID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangePlant(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantResponse> OnChangePlantAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangePlantRequest request) {
            return base.Channel.OnChangePlantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeWareHouseCode(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest request) {
            return base.Channel.OnChangeWareHouseCode(request);
        }
        
        public void OnChangeWareHouseCode(string pcProcessID, ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest();
            inValue.pcProcessID = pcProcessID;
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeWareHouseCode(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeResponse> OnChangeWareHouseCodeAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeWareHouseCodeRequest request) {
            return base.Channel.OnChangeWareHouseCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeSalvageJobSeq(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest request) {
            return base.Channel.OnChangeSalvageJobSeq(request);
        }
        
        public string OnChangeSalvageJobSeq(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeSalvageJobSeq(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqResponse> OnChangeSalvageJobSeqAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvageJobSeqRequest request) {
            return base.Channel.OnChangeSalvageJobSeqAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeSalvagePartNum(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest request) {
            return base.Channel.OnChangeSalvagePartNum(request);
        }
        
        public string OnChangeSalvagePartNum(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeSalvagePartNum(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumResponse> OnChangeSalvagePartNumAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeSalvagePartNumRequest request) {
            return base.Channel.OnChangeSalvagePartNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.OnChangeTranQty(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest request) {
            return base.Channel.OnChangeTranQty(request);
        }
        
        public string OnChangeTranQty(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).OnChangeTranQty(inValue);
            ds = retVal.ds;
            return retVal.pcMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyResponse> OnChangeTranQtyAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.OnChangeTranQtyRequest request) {
            return base.Channel.OnChangeTranQtyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.EnableSerialMatching(EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest request) {
            return base.Channel.EnableSerialMatching(request);
        }
        
        public bool EnableSerialMatching(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).EnableSerialMatching(inValue);
            ds = retVal.ds;
            return retVal.plEnable;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingResponse> EnableSerialMatchingAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.EnableSerialMatchingRequest request) {
            return base.Channel.EnableSerialMatchingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.GetSelectSerialNumbersParams(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest request) {
            return base.Channel.GetSelectSerialNumbersParams(request);
        }
        
        public EpicWAS.Epicor.ReceiptsFromMfgSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string pcProcessID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest();
            inValue.ds = ds;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).GetSelectSerialNumbersParams(inValue);
            ds = retVal.ds;
            return retVal.GetSelectSerialNumbersParamsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsResponse> GetSelectSerialNumbersParamsAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.GetSelectSerialNumbersParamsRequest request) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.ValidateSN(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest request) {
            return base.Channel.ValidateSN(request);
        }
        
        public bool ValidateSN(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, string serialNumber, string pcProcessID) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest();
            inValue.ds = ds;
            inValue.serialNumber = serialNumber;
            inValue.pcProcessID = pcProcessID;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).ValidateSN(inValue);
            ds = retVal.ds;
            return retVal.isVoided;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNResponse> ValidateSNAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.ValidateSNRequest request) {
            return base.Channel.ValidateSNAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractResponse EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract.VerifySerialMatchAndPlanContract(EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest request) {
            return base.Channel.VerifySerialMatchAndPlanContract(request);
        }
        
        public string VerifySerialMatchAndPlanContract(ref EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgTableset ds, out int piMsgType, out string pcPCBinAction, out string pcPCBinMessage) {
            EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest inValue = new EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractResponse retVal = ((EpicWAS.Epicor.ReceiptsFromMfgSvc.ReceiptsFromMfgSvcContract)(this)).VerifySerialMatchAndPlanContract(inValue);
            ds = retVal.ds;
            piMsgType = retVal.piMsgType;
            pcPCBinAction = retVal.pcPCBinAction;
            pcPCBinMessage = retVal.pcPCBinMessage;
            return retVal.pcMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractResponse> VerifySerialMatchAndPlanContractAsync(EpicWAS.Epicor.ReceiptsFromMfgSvc.VerifySerialMatchAndPlanContractRequest request) {
            return base.Channel.VerifySerialMatchAndPlanContractAsync(request);
        }
    }
}
