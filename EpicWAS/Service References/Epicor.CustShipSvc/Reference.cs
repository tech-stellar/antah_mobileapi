//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicWAS.Epicor.CustShipSvc {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorFaultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CorrelationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.EpicorExceptionData[] DataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionKindValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail InnerFaultDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exKindQualifiedNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_exceptionQualifiedNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CorrelationId {
            get {
                return this.CorrelationIdField;
            }
            set {
                if ((this.CorrelationIdField.Equals(value) != true)) {
                    this.CorrelationIdField = value;
                    this.RaisePropertyChanged("CorrelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.EpicorExceptionData[] DataList {
            get {
                return this.DataListField;
            }
            set {
                if ((object.ReferenceEquals(this.DataListField, value) != true)) {
                    this.DataListField = value;
                    this.RaisePropertyChanged("DataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionKindValue {
            get {
                return this.ExceptionKindValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionKindValueField, value) != true)) {
                    this.ExceptionKindValueField = value;
                    this.RaisePropertyChanged("ExceptionKindValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail InnerFaultDetail {
            get {
                return this.InnerFaultDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerFaultDetailField, value) != true)) {
                    this.InnerFaultDetailField = value;
                    this.RaisePropertyChanged("InnerFaultDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exKindQualifiedName {
            get {
                return this.m_exKindQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exKindQualifiedNameField, value) != true)) {
                    this.m_exKindQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exKindQualifiedName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_exceptionQualifiedName {
            get {
                return this.m_exceptionQualifiedNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_exceptionQualifiedNameField, value) != true)) {
                    this.m_exceptionQualifiedNameField = value;
                    this.RaisePropertyChanged("m_exceptionQualifiedName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EpicorExceptionData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
    [System.SerializableAttribute()]
    public partial class EpicorExceptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int m_ColumnNumberField;
        
        private int m_LineNumberField;
        
        private string m_MessageField;
        
        private string[] m_MessageDetailsField;
        
        private string m_MethodField;
        
        private string m_ProgramField;
        
        private System.Collections.Generic.Dictionary<string, string> m_PropertiesField;
        
        private string m_TraceStackField;
        
        private System.Collections.Generic.Dictionary<string, string> m_UserPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_ColumnNumber {
            get {
                return this.m_ColumnNumberField;
            }
            set {
                if ((this.m_ColumnNumberField.Equals(value) != true)) {
                    this.m_ColumnNumberField = value;
                    this.RaisePropertyChanged("m_ColumnNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_LineNumber {
            get {
                return this.m_LineNumberField;
            }
            set {
                if ((this.m_LineNumberField.Equals(value) != true)) {
                    this.m_LineNumberField = value;
                    this.RaisePropertyChanged("m_LineNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Message {
            get {
                return this.m_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageField, value) != true)) {
                    this.m_MessageField = value;
                    this.RaisePropertyChanged("m_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] m_MessageDetails {
            get {
                return this.m_MessageDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MessageDetailsField, value) != true)) {
                    this.m_MessageDetailsField = value;
                    this.RaisePropertyChanged("m_MessageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Method {
            get {
                return this.m_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.m_MethodField, value) != true)) {
                    this.m_MethodField = value;
                    this.RaisePropertyChanged("m_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_Program {
            get {
                return this.m_ProgramField;
            }
            set {
                if ((object.ReferenceEquals(this.m_ProgramField, value) != true)) {
                    this.m_ProgramField = value;
                    this.RaisePropertyChanged("m_Program");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_Properties {
            get {
                return this.m_PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_PropertiesField, value) != true)) {
                    this.m_PropertiesField = value;
                    this.RaisePropertyChanged("m_Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_TraceStack {
            get {
                return this.m_TraceStackField;
            }
            set {
                if ((object.ReferenceEquals(this.m_TraceStackField, value) != true)) {
                    this.m_TraceStackField = value;
                    this.RaisePropertyChanged("m_TraceStack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.Dictionary<string, string> m_UserProperties {
            get {
                return this.m_UserPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.m_UserPropertiesField, value) != true)) {
                    this.m_UserPropertiesField = value;
                    this.RaisePropertyChanged("m_UserProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableData", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ExtensionTable TableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PrimaryKeyColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableSystemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeerTableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ExtensionTable Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SystemCode {
            get {
                return this.SystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemCodeField, value) != true)) {
                    this.SystemCodeField = value;
                    this.RaisePropertyChanged("SystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string[] PrimaryKeyColumns {
            get {
                return this.PrimaryKeyColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyColumnsField, value) != true)) {
                    this.PrimaryKeyColumnsField = value;
                    this.RaisePropertyChanged("PrimaryKeyColumns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PeerTableSystemCode {
            get {
                return this.PeerTableSystemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableSystemCodeField, value) != true)) {
                    this.PeerTableSystemCodeField = value;
                    this.RaisePropertyChanged("PeerTableSystemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PeerTableName {
            get {
                return this.PeerTableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerTableNameField, value) != true)) {
                    this.PeerTableNameField = value;
                    this.RaisePropertyChanged("PeerTableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtensionTable", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions", ItemName="ExtensionRow")]
    [System.SerializableAttribute()]
    public class ExtensionTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ExtensionRow> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionTableColumn", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    public partial class ExtensionTableColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnType {
            get {
                return this.ColumnTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnTypeField, value) != true)) {
                    this.ColumnTypeField = value;
                    this.RaisePropertyChanged("ColumnType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtensionRow", Namespace="http://schemas.datacontract.org/2004/07/Ice.Extensions")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.TempRowBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOOTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRowColumnOrder))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UserDefinedColumns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Guid[]))]
    public partial class ExtensionRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ColumnValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] ColumnValues {
            get {
                return this.ColumnValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValuesField, value) != true)) {
                    this.ColumnValuesField = value;
                    this.RaisePropertyChanged("ColumnValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TempRowBase", Namespace="http://schemas.datacontract.org/2004/07/Epicor.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionRow))]
    public partial class TempRowBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionRow))]
    public partial class IceRow : EpicWAS.Epicor.CustShipSvc.TempRowBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RowModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SpecifiedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.UserDefinedColumns UserDefinedColumnsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowMod {
            get {
                return this.RowModField;
            }
            set {
                if ((object.ReferenceEquals(this.RowModField, value) != true)) {
                    this.RowModField = value;
                    this.RaisePropertyChanged("RowMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SpecifiedProperties {
            get {
                return this.SpecifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecifiedPropertiesField, value) != true)) {
                    this.SpecifiedPropertiesField = value;
                    this.RaisePropertyChanged("SpecifiedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SysRowID {
            get {
                return this.SysRowIDField;
            }
            set {
                if ((this.SysRowIDField.Equals(value) != true)) {
                    this.SysRowIDField = value;
                    this.RaisePropertyChanged("SysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.UserDefinedColumns UserDefinedColumns {
            get {
                return this.UserDefinedColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedColumnsField, value) != true)) {
                    this.UserDefinedColumnsField = value;
                    this.RaisePropertyChanged("UserDefinedColumns");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartonTrkDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CartonTrkDtlRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CapturePtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaseNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredValueFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePhantomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestWtUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFlag {
            get {
                return this.CODFlagField;
            }
            set {
                if ((this.CODFlagField.Equals(value) != true)) {
                    this.CODFlagField = value;
                    this.RaisePropertyChanged("CODFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODValue {
            get {
                return this.CODValueField;
            }
            set {
                if ((this.CODValueField.Equals(value) != true)) {
                    this.CODValueField = value;
                    this.RaisePropertyChanged("CODValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapturePt {
            get {
                return this.CapturePtField;
            }
            set {
                if ((object.ReferenceEquals(this.CapturePtField, value) != true)) {
                    this.CapturePtField = value;
                    this.RaisePropertyChanged("CapturePt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseID {
            get {
                return this.CaseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseIDField, value) != true)) {
                    this.CaseIDField = value;
                    this.RaisePropertyChanged("CaseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaseNum {
            get {
                return this.CaseNumField;
            }
            set {
                if ((this.CaseNumField.Equals(value) != true)) {
                    this.CaseNumField = value;
                    this.RaisePropertyChanged("CaseNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredValue {
            get {
                return this.DeclaredValueField;
            }
            set {
                if ((this.DeclaredValueField.Equals(value) != true)) {
                    this.DeclaredValueField = value;
                    this.RaisePropertyChanged("DeclaredValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredValueFlag {
            get {
                return this.DeclaredValueFlagField;
            }
            set {
                if ((this.DeclaredValueFlagField.Equals(value) != true)) {
                    this.DeclaredValueFlagField = value;
                    this.RaisePropertyChanged("DeclaredValueFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePhantom {
            get {
                return this.EnablePhantomField;
            }
            set {
                if ((this.EnablePhantomField.Equals(value) != true)) {
                    this.EnablePhantomField = value;
                    this.RaisePropertyChanged("EnablePhantom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestHeight {
            get {
                return this.ManifestHeightField;
            }
            set {
                if ((this.ManifestHeightField.Equals(value) != true)) {
                    this.ManifestHeightField = value;
                    this.RaisePropertyChanged("ManifestHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestLength {
            get {
                return this.ManifestLengthField;
            }
            set {
                if ((this.ManifestLengthField.Equals(value) != true)) {
                    this.ManifestLengthField = value;
                    this.RaisePropertyChanged("ManifestLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSizeUOM {
            get {
                return this.ManifestSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSizeUOMField, value) != true)) {
                    this.ManifestSizeUOMField = value;
                    this.RaisePropertyChanged("ManifestSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWeight {
            get {
                return this.ManifestWeightField;
            }
            set {
                if ((this.ManifestWeightField.Equals(value) != true)) {
                    this.ManifestWeightField = value;
                    this.RaisePropertyChanged("ManifestWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWidth {
            get {
                return this.ManifestWidthField;
            }
            set {
                if ((this.ManifestWidthField.Equals(value) != true)) {
                    this.ManifestWidthField = value;
                    this.RaisePropertyChanged("ManifestWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestWtUOM {
            get {
                return this.ManifestWtUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestWtUOMField, value) != true)) {
                    this.ManifestWtUOMField = value;
                    this.RaisePropertyChanged("ManifestWtUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackStatus {
            get {
                return this.PackStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PackStatusField, value) != true)) {
                    this.PackStatusField = value;
                    this.RaisePropertyChanged("PackStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomPack {
            get {
                return this.PhantomPackField;
            }
            set {
                if ((this.PhantomPackField.Equals(value) != true)) {
                    this.PhantomPackField = value;
                    this.RaisePropertyChanged("PhantomPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWeight {
            get {
                return this.PkgWeightField;
            }
            set {
                if ((this.PkgWeightField.Equals(value) != true)) {
                    this.PkgWeightField = value;
                    this.RaisePropertyChanged("PkgWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipmentType {
            get {
                return this.ShipmentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipmentTypeField, value) != true)) {
                    this.ShipmentTypeField = value;
                    this.RaisePropertyChanged("ShipmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumGenOptsRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PeriodPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDspTransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowTransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeID2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransYearSuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspTransYear {
            get {
                return this.DspTransYearField;
            }
            set {
                if ((object.ReferenceEquals(this.DspTransYearField, value) != true)) {
                    this.DspTransYearField = value;
                    this.RaisePropertyChanged("DspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrefix {
            get {
                return this.EnablePrefixField;
            }
            set {
                if ((this.EnablePrefixField.Equals(value) != true)) {
                    this.EnablePrefixField = value;
                    this.RaisePropertyChanged("EnablePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSuffix {
            get {
                return this.EnableSuffixField;
            }
            set {
                if ((this.EnableSuffixField.Equals(value) != true)) {
                    this.EnableSuffixField = value;
                    this.RaisePropertyChanged("EnableSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationOption {
            get {
                return this.GenerationOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationOptionField, value) != true)) {
                    this.GenerationOptionField = value;
                    this.RaisePropertyChanged("GenerationOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberID {
            get {
                return this.LegalNumberIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberIDField, value) != true)) {
                    this.LegalNumberIDField = value;
                    this.RaisePropertyChanged("LegalNumberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PeriodPrefix {
            get {
                return this.PeriodPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PeriodPrefixField, value) != true)) {
                    this.PeriodPrefixField = value;
                    this.RaisePropertyChanged("PeriodPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDspTransYear {
            get {
                return this.ShowDspTransYearField;
            }
            set {
                if ((this.ShowDspTransYearField.Equals(value) != true)) {
                    this.ShowDspTransYearField = value;
                    this.RaisePropertyChanged("ShowDspTransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowTransPeriod {
            get {
                return this.ShowTransPeriodField;
            }
            set {
                if ((this.ShowTransPeriodField.Equals(value) != true)) {
                    this.ShowTransPeriodField = value;
                    this.RaisePropertyChanged("ShowTransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID2 {
            get {
                return this.TranDocTypeID2Field;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeID2Field, value) != true)) {
                    this.TranDocTypeID2Field = value;
                    this.RaisePropertyChanged("TranDocTypeID2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransPeriod {
            get {
                return this.TransPeriodField;
            }
            set {
                if ((this.TransPeriodField.Equals(value) != true)) {
                    this.TransPeriodField = value;
                    this.RaisePropertyChanged("TransPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransYear {
            get {
                return this.TransYearField;
            }
            set {
                if ((this.TransYearField.Equals(value) != true)) {
                    this.TransYearField = value;
                    this.RaisePropertyChanged("TransYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransYearSuffix {
            get {
                return this.TransYearSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.TransYearSuffixField, value) != true)) {
                    this.TransYearSuffixField = value;
                    this.RaisePropertyChanged("TransYearSuffix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumberGenerateRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LegalNumberGenerateRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableNumberPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableNumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenerationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalNumberNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrefixListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalParams {
            get {
                return this.AdditionalParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalParamsField, value) != true)) {
                    this.AdditionalParamsField = value;
                    this.RaisePropertyChanged("AdditionalParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableNumberPrefix {
            get {
                return this.EnableNumberPrefixField;
            }
            set {
                if ((this.EnableNumberPrefixField.Equals(value) != true)) {
                    this.EnableNumberPrefixField = value;
                    this.RaisePropertyChanged("EnableNumberPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableNumberSuffix {
            get {
                return this.EnableNumberSuffixField;
            }
            set {
                if ((this.EnableNumberSuffixField.Equals(value) != true)) {
                    this.EnableNumberSuffixField = value;
                    this.RaisePropertyChanged("EnableNumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenerationType {
            get {
                return this.GenerationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GenerationTypeField, value) != true)) {
                    this.GenerationTypeField = value;
                    this.RaisePropertyChanged("GenerationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalNumberNum {
            get {
                return this.LegalNumberNumField;
            }
            set {
                if ((this.LegalNumberNumField.Equals(value) != true)) {
                    this.LegalNumberNumField = value;
                    this.RaisePropertyChanged("LegalNumberNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberOption {
            get {
                return this.NumberOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberOptionField, value) != true)) {
                    this.NumberOptionField = value;
                    this.RaisePropertyChanged("NumberOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberPrefix {
            get {
                return this.NumberPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberPrefixField, value) != true)) {
                    this.NumberPrefixField = value;
                    this.RaisePropertyChanged("NumberPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberSuffix {
            get {
                return this.NumberSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberSuffixField, value) != true)) {
                    this.NumberSuffixField = value;
                    this.RaisePropertyChanged("NumberSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberType {
            get {
                return this.NumberTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberTypeField, value) != true)) {
                    this.NumberTypeField = value;
                    this.RaisePropertyChanged("NumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberYear {
            get {
                return this.NumberYearField;
            }
            set {
                if ((this.NumberYearField.Equals(value) != true)) {
                    this.NumberYearField = value;
                    this.RaisePropertyChanged("NumberYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrefixList {
            get {
                return this.PrefixListField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixListField, value) != true)) {
                    this.PrefixListField = value;
                    this.RaisePropertyChanged("PrefixList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplicatedPacksRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ReplicatedPacksRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplicatedPackNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplicatedPackNum {
            get {
                return this.ReplicatedPackNumField;
            }
            set {
                if ((this.ReplicatedPackNumField.Equals(value) != true)) {
                    this.ReplicatedPackNumField = value;
                    this.RaisePropertyChanged("ReplicatedPackNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SNFormatRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskExampleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialMaskMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SerialMaskMaskTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartIUM {
            get {
                return this.PartIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartIUMField, value) != true)) {
                    this.PartIUMField = value;
                    this.RaisePropertyChanged("PartIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartDescription {
            get {
                return this.PartPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartDescriptionField, value) != true)) {
                    this.PartPartDescriptionField = value;
                    this.RaisePropertyChanged("PartPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPricePerCode {
            get {
                return this.PartPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPricePerCodeField, value) != true)) {
                    this.PartPricePerCodeField = value;
                    this.RaisePropertyChanged("PartPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSalesUM {
            get {
                return this.PartSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSalesUMField, value) != true)) {
                    this.PartSalesUMField = value;
                    this.RaisePropertyChanged("PartSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartSellingFactor {
            get {
                return this.PartSellingFactorField;
            }
            set {
                if ((this.PartSellingFactorField.Equals(value) != true)) {
                    this.PartSellingFactorField = value;
                    this.RaisePropertyChanged("PartSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackDimension {
            get {
                return this.PartTrackDimensionField;
            }
            set {
                if ((this.PartTrackDimensionField.Equals(value) != true)) {
                    this.PartTrackDimensionField = value;
                    this.RaisePropertyChanged("PartTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackLots {
            get {
                return this.PartTrackLotsField;
            }
            set {
                if ((this.PartTrackLotsField.Equals(value) != true)) {
                    this.PartTrackLotsField = value;
                    this.RaisePropertyChanged("PartTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartTrackSerialNum {
            get {
                return this.PartTrackSerialNumField;
            }
            set {
                if ((this.PartTrackSerialNumField.Equals(value) != true)) {
                    this.PartTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskDescription {
            get {
                return this.SerialMaskDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskDescriptionField, value) != true)) {
                    this.SerialMaskDescriptionField = value;
                    this.RaisePropertyChanged("SerialMaskDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskExample {
            get {
                return this.SerialMaskExampleField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskExampleField, value) != true)) {
                    this.SerialMaskExampleField = value;
                    this.RaisePropertyChanged("SerialMaskExample");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialMaskMask {
            get {
                return this.SerialMaskMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialMaskMaskField, value) != true)) {
                    this.SerialMaskMaskField = value;
                    this.RaisePropertyChanged("SerialMaskMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SerialMaskMaskType {
            get {
                return this.SerialMaskMaskTypeField;
            }
            set {
                if ((this.SerialMaskMaskTypeField.Equals(value) != true)) {
                    this.SerialMaskMaskTypeField = value;
                    this.RaisePropertyChanged("SerialMaskMaskType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesKitCompIssueRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SalesKitCompIssueRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitBinNumEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KitQtyFromInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitQtyFromInvEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitSerialTrackedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWarehouseCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitBinNum {
            get {
                return this.KitBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitBinNumField, value) != true)) {
                    this.KitBinNumField = value;
                    this.RaisePropertyChanged("KitBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitBinNumEnabled {
            get {
                return this.KitBinNumEnabledField;
            }
            set {
                if ((this.KitBinNumEnabledField.Equals(value) != true)) {
                    this.KitBinNumEnabledField = value;
                    this.RaisePropertyChanged("KitBinNumEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitDescription {
            get {
                return this.KitDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KitDescriptionField, value) != true)) {
                    this.KitDescriptionField = value;
                    this.RaisePropertyChanged("KitDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitIUM {
            get {
                return this.KitIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.KitIUMField, value) != true)) {
                    this.KitIUMField = value;
                    this.RaisePropertyChanged("KitIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitLotNum {
            get {
                return this.KitLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitLotNumField, value) != true)) {
                    this.KitLotNumField = value;
                    this.RaisePropertyChanged("KitLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPartNum {
            get {
                return this.KitPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPartNumField, value) != true)) {
                    this.KitPartNumField = value;
                    this.RaisePropertyChanged("KitPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KitQtyFromInv {
            get {
                return this.KitQtyFromInvField;
            }
            set {
                if ((this.KitQtyFromInvField.Equals(value) != true)) {
                    this.KitQtyFromInvField = value;
                    this.RaisePropertyChanged("KitQtyFromInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitQtyFromInvEnabled {
            get {
                return this.KitQtyFromInvEnabledField;
            }
            set {
                if ((this.KitQtyFromInvEnabledField.Equals(value) != true)) {
                    this.KitQtyFromInvEnabledField = value;
                    this.RaisePropertyChanged("KitQtyFromInvEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitSerialTracked {
            get {
                return this.KitSerialTrackedField;
            }
            set {
                if ((this.KitSerialTrackedField.Equals(value) != true)) {
                    this.KitSerialTrackedField = value;
                    this.RaisePropertyChanged("KitSerialTracked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitTrackLots {
            get {
                return this.KitTrackLotsField;
            }
            set {
                if ((this.KitTrackLotsField.Equals(value) != true)) {
                    this.KitTrackLotsField = value;
                    this.RaisePropertyChanged("KitTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWarehouse {
            get {
                return this.KitWarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWarehouseField, value) != true)) {
                    this.KitWarehouseField = value;
                    this.RaisePropertyChanged("KitWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWarehouseCodeDesc {
            get {
                return this.KitWarehouseCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWarehouseCodeDescField, value) != true)) {
                    this.KitWarehouseCodeDescField = value;
                    this.RaisePropertyChanged("KitWarehouseCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedIDNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedIDNumbersRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDNumber {
            get {
                return this.IDNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IDNumberField, value) != true)) {
                    this.IDNumberField = value;
                    this.RaisePropertyChanged("IDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectedSerialNumbersRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipCOORow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipCOORow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipCOORowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyPercField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedToFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValuePercField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipCOORowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryDescription {
            get {
                return this.CountryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryDescriptionField, value) != true)) {
                    this.CountryDescriptionField = value;
                    this.RaisePropertyChanged("CountryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrigCountry {
            get {
                return this.OrigCountryField;
            }
            set {
                if ((this.OrigCountryField.Equals(value) != true)) {
                    this.OrigCountryField = value;
                    this.RaisePropertyChanged("OrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Primary {
            get {
                return this.PrimaryField;
            }
            set {
                if ((this.PrimaryField.Equals(value) != true)) {
                    this.PrimaryField = value;
                    this.RaisePropertyChanged("Primary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QtyPerc {
            get {
                return this.QtyPercField;
            }
            set {
                if ((this.QtyPercField.Equals(value) != true)) {
                    this.QtyPercField = value;
                    this.RaisePropertyChanged("QtyPerc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedToFile {
            get {
                return this.RelatedToFileField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedToFileField, value) != true)) {
                    this.RelatedToFileField = value;
                    this.RaisePropertyChanged("RelatedToFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValuePerc {
            get {
                return this.ValuePercField;
            }
            set {
                if ((this.ValuePercField.Equals(value) != true)) {
                    this.ValuePercField = value;
                    this.RaisePropertyChanged("ValuePerc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipDtlRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllowedOversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AllowedUndersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BuyToOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractCodeContractDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustContainerPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustNumSendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimensionDimCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DisplayInvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocInUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocLineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DockingStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DtlErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInvIDBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInvSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableJobFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableKitIDBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableMfgIDBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableMfgSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableOBInvSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableOBMfgSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePOSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePackageControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FSAEquipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FSAInstallationCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAInstallationOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAInstallationOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FSAInstallationRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FSAInstallationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GetLocIDNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvLegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitBackFlushField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitCompIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitCompShipCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitLotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitMassIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitParentIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KitParentLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal KitQtyFromInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitQtyFromInvEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitSerialTrackedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KitTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWarehouseCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LabCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LaborDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LaborExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaborModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineContentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotPartLotDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkForAddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MatCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaterialDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MaterialExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaterialModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MiscCoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MiscDurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> MiscExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscModField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NotAllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotCompliantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFCountryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTMFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFFaxNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTMFZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineProdCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumPSCurrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderRelOurReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurInventoryShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurJobShipIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurRemainQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurRemainUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurReqUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurShippedUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurStockShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PCIDItemSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PCIDParentLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackNumShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PackNumUseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartAESExpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartECNNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartExpLicNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartExpLicTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHazClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHazGvrnmtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartHazItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHazPackInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHazSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartHazTechNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNAFTAOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNAFTAPrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNAFTAProdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumFSAEquipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumSendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumWarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartOrigCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartSchedBcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartUseHTSDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PickedAutoAllocatedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RenewalNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InExtPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3InUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3LineTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SelectedLocationIDQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingFactorDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingInventoryShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingJobShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingRemainQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingRemainUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingReqQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingReqUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipmentQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingShipmentUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShippedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SellingShippedUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipCmplField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipOversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToWarningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StockPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TMBillingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalNetWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TranLocationIDQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpdatedInventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTMFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseShipDtlInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIPBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIPWarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WIPWarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WarrantyCodeSendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCodeWarrDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarrantyCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WarrantySendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllowedOvers {
            get {
                return this.AllowedOversField;
            }
            set {
                if ((this.AllowedOversField.Equals(value) != true)) {
                    this.AllowedOversField = value;
                    this.RaisePropertyChanged("AllowedOvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AllowedUnders {
            get {
                return this.AllowedUndersField;
            }
            set {
                if ((this.AllowedUndersField.Equals(value) != true)) {
                    this.AllowedUndersField = value;
                    this.RaisePropertyChanged("AllowedUnders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinType {
            get {
                return this.BinTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BinTypeField, value) != true)) {
                    this.BinTypeField = value;
                    this.RaisePropertyChanged("BinType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuyToOrder {
            get {
                return this.BuyToOrderField;
            }
            set {
                if ((this.BuyToOrderField.Equals(value) != true)) {
                    this.BuyToOrderField = value;
                    this.RaisePropertyChanged("BuyToOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplianceMsg {
            get {
                return this.ComplianceMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceMsgField, value) != true)) {
                    this.ComplianceMsgField = value;
                    this.RaisePropertyChanged("ComplianceMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCode {
            get {
                return this.ContractCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeField, value) != true)) {
                    this.ContractCodeField = value;
                    this.RaisePropertyChanged("ContractCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractCodeContractDescription {
            get {
                return this.ContractCodeContractDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractCodeContractDescriptionField, value) != true)) {
                    this.ContractCodeContractDescriptionField = value;
                    this.RaisePropertyChanged("ContractCodeContractDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((this.ContractNumField.Equals(value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustContainerPartNum {
            get {
                return this.CustContainerPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustContainerPartNumField, value) != true)) {
                    this.CustContainerPartNumField = value;
                    this.RaisePropertyChanged("CustContainerPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustNumSendToFSA {
            get {
                return this.CustNumSendToFSAField;
            }
            set {
                if ((this.CustNumSendToFSAField.Equals(value) != true)) {
                    this.CustNumSendToFSAField = value;
                    this.RaisePropertyChanged("CustNumSendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCodeList {
            get {
                return this.DimCodeListField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeListField, value) != true)) {
                    this.DimCodeListField = value;
                    this.RaisePropertyChanged("DimCodeList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimensionDimCodeDescription {
            get {
                return this.DimensionDimCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DimensionDimCodeDescriptionField, value) != true)) {
                    this.DimensionDimCodeDescriptionField = value;
                    this.RaisePropertyChanged("DimensionDimCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercent {
            get {
                return this.DiscountPercentField;
            }
            set {
                if ((this.DiscountPercentField.Equals(value) != true)) {
                    this.DiscountPercentField = value;
                    this.RaisePropertyChanged("DiscountPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DisplayInvQty {
            get {
                return this.DisplayInvQtyField;
            }
            set {
                if ((this.DisplayInvQtyField.Equals(value) != true)) {
                    this.DisplayInvQtyField = value;
                    this.RaisePropertyChanged("DisplayInvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocExtPrice {
            get {
                return this.DocExtPriceField;
            }
            set {
                if ((this.DocExtPriceField.Equals(value) != true)) {
                    this.DocExtPriceField = value;
                    this.RaisePropertyChanged("DocExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInDiscount {
            get {
                return this.DocInDiscountField;
            }
            set {
                if ((this.DocInDiscountField.Equals(value) != true)) {
                    this.DocInDiscountField = value;
                    this.RaisePropertyChanged("DocInDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInExtPrice {
            get {
                return this.DocInExtPriceField;
            }
            set {
                if ((this.DocInExtPriceField.Equals(value) != true)) {
                    this.DocInExtPriceField = value;
                    this.RaisePropertyChanged("DocInExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocInUnitPrice {
            get {
                return this.DocInUnitPriceField;
            }
            set {
                if ((this.DocInUnitPriceField.Equals(value) != true)) {
                    this.DocInUnitPriceField = value;
                    this.RaisePropertyChanged("DocInUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocLineTax {
            get {
                return this.DocLineTaxField;
            }
            set {
                if ((this.DocLineTaxField.Equals(value) != true)) {
                    this.DocLineTaxField = value;
                    this.RaisePropertyChanged("DocLineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocUnitPrice {
            get {
                return this.DocUnitPriceField;
            }
            set {
                if ((this.DocUnitPriceField.Equals(value) != true)) {
                    this.DocUnitPriceField = value;
                    this.RaisePropertyChanged("DocUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DockingStation {
            get {
                return this.DockingStationField;
            }
            set {
                if ((object.ReferenceEquals(this.DockingStationField, value) != true)) {
                    this.DockingStationField = value;
                    this.RaisePropertyChanged("DockingStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DtlError {
            get {
                return this.DtlErrorField;
            }
            set {
                if ((this.DtlErrorField.Equals(value) != true)) {
                    this.DtlErrorField = value;
                    this.RaisePropertyChanged("DtlError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInvIDBtn {
            get {
                return this.EnableInvIDBtnField;
            }
            set {
                if ((this.EnableInvIDBtnField.Equals(value) != true)) {
                    this.EnableInvIDBtnField = value;
                    this.RaisePropertyChanged("EnableInvIDBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInvSerialBtn {
            get {
                return this.EnableInvSerialBtnField;
            }
            set {
                if ((this.EnableInvSerialBtnField.Equals(value) != true)) {
                    this.EnableInvSerialBtnField = value;
                    this.RaisePropertyChanged("EnableInvSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableJobFields {
            get {
                return this.EnableJobFieldsField;
            }
            set {
                if ((this.EnableJobFieldsField.Equals(value) != true)) {
                    this.EnableJobFieldsField = value;
                    this.RaisePropertyChanged("EnableJobFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableKitIDBtn {
            get {
                return this.EnableKitIDBtnField;
            }
            set {
                if ((this.EnableKitIDBtnField.Equals(value) != true)) {
                    this.EnableKitIDBtnField = value;
                    this.RaisePropertyChanged("EnableKitIDBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableMfgIDBtn {
            get {
                return this.EnableMfgIDBtnField;
            }
            set {
                if ((this.EnableMfgIDBtnField.Equals(value) != true)) {
                    this.EnableMfgIDBtnField = value;
                    this.RaisePropertyChanged("EnableMfgIDBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableMfgSerialBtn {
            get {
                return this.EnableMfgSerialBtnField;
            }
            set {
                if ((this.EnableMfgSerialBtnField.Equals(value) != true)) {
                    this.EnableMfgSerialBtnField = value;
                    this.RaisePropertyChanged("EnableMfgSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableOBInvSerialBtn {
            get {
                return this.EnableOBInvSerialBtnField;
            }
            set {
                if ((this.EnableOBInvSerialBtnField.Equals(value) != true)) {
                    this.EnableOBInvSerialBtnField = value;
                    this.RaisePropertyChanged("EnableOBInvSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableOBMfgSerialBtn {
            get {
                return this.EnableOBMfgSerialBtnField;
            }
            set {
                if ((this.EnableOBMfgSerialBtnField.Equals(value) != true)) {
                    this.EnableOBMfgSerialBtnField = value;
                    this.RaisePropertyChanged("EnableOBMfgSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePOSerialBtn {
            get {
                return this.EnablePOSerialBtnField;
            }
            set {
                if ((this.EnablePOSerialBtnField.Equals(value) != true)) {
                    this.EnablePOSerialBtnField = value;
                    this.RaisePropertyChanged("EnablePOSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePackageControl {
            get {
                return this.EnablePackageControlField;
            }
            set {
                if ((this.EnablePackageControlField.Equals(value) != true)) {
                    this.EnablePackageControlField = value;
                    this.RaisePropertyChanged("EnablePackageControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtJobNum {
            get {
                return this.ExtJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtJobNumField, value) != true)) {
                    this.ExtJobNumField = value;
                    this.RaisePropertyChanged("ExtJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtPrice {
            get {
                return this.ExtPriceField;
            }
            set {
                if ((this.ExtPriceField.Equals(value) != true)) {
                    this.ExtPriceField = value;
                    this.RaisePropertyChanged("ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FSAEquipment {
            get {
                return this.FSAEquipmentField;
            }
            set {
                if ((this.FSAEquipmentField.Equals(value) != true)) {
                    this.FSAEquipmentField = value;
                    this.RaisePropertyChanged("FSAEquipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FSAInstallationCost {
            get {
                return this.FSAInstallationCostField;
            }
            set {
                if ((this.FSAInstallationCostField.Equals(value) != true)) {
                    this.FSAInstallationCostField = value;
                    this.RaisePropertyChanged("FSAInstallationCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAInstallationOrderLine {
            get {
                return this.FSAInstallationOrderLineField;
            }
            set {
                if ((this.FSAInstallationOrderLineField.Equals(value) != true)) {
                    this.FSAInstallationOrderLineField = value;
                    this.RaisePropertyChanged("FSAInstallationOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAInstallationOrderNum {
            get {
                return this.FSAInstallationOrderNumField;
            }
            set {
                if ((this.FSAInstallationOrderNumField.Equals(value) != true)) {
                    this.FSAInstallationOrderNumField = value;
                    this.RaisePropertyChanged("FSAInstallationOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FSAInstallationRequired {
            get {
                return this.FSAInstallationRequiredField;
            }
            set {
                if ((this.FSAInstallationRequiredField.Equals(value) != true)) {
                    this.FSAInstallationRequiredField = value;
                    this.RaisePropertyChanged("FSAInstallationRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FSAInstallationType {
            get {
                return this.FSAInstallationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FSAInstallationTypeField, value) != true)) {
                    this.FSAInstallationTypeField = value;
                    this.RaisePropertyChanged("FSAInstallationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetLocIDNum {
            get {
                return this.GetLocIDNumField;
            }
            set {
                if ((this.GetLocIDNumField.Equals(value) != true)) {
                    this.GetLocIDNumField = value;
                    this.RaisePropertyChanged("GetLocIDNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderShipComment {
            get {
                return this.HeaderShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderShipCommentField, value) != true)) {
                    this.HeaderShipCommentField = value;
                    this.RaisePropertyChanged("HeaderShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InDiscount {
            get {
                return this.InDiscountField;
            }
            set {
                if ((this.InDiscountField.Equals(value) != true)) {
                    this.InDiscountField = value;
                    this.RaisePropertyChanged("InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InExtPrice {
            get {
                return this.InExtPriceField;
            }
            set {
                if ((this.InExtPriceField.Equals(value) != true)) {
                    this.InExtPriceField = value;
                    this.RaisePropertyChanged("InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InUnitPrice {
            get {
                return this.InUnitPriceField;
            }
            set {
                if ((this.InUnitPriceField.Equals(value) != true)) {
                    this.InUnitPriceField = value;
                    this.RaisePropertyChanged("InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvLegalNumber {
            get {
                return this.InvLegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.InvLegalNumberField, value) != true)) {
                    this.InvLegalNumberField = value;
                    this.RaisePropertyChanged("InvLegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryShipUOM {
            get {
                return this.InventoryShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryShipUOMField, value) != true)) {
                    this.InventoryShipUOMField = value;
                    this.RaisePropertyChanged("InventoryShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobLotNum {
            get {
                return this.JobLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobLotNumField, value) != true)) {
                    this.JobLotNumField = value;
                    this.RaisePropertyChanged("JobLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobShipUOM {
            get {
                return this.JobShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.JobShipUOMField, value) != true)) {
                    this.JobShipUOMField = value;
                    this.RaisePropertyChanged("JobShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitBackFlush {
            get {
                return this.KitBackFlushField;
            }
            set {
                if ((this.KitBackFlushField.Equals(value) != true)) {
                    this.KitBackFlushField = value;
                    this.RaisePropertyChanged("KitBackFlush");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitBinNum {
            get {
                return this.KitBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitBinNumField, value) != true)) {
                    this.KitBinNumField = value;
                    this.RaisePropertyChanged("KitBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitCompIssue {
            get {
                return this.KitCompIssueField;
            }
            set {
                if ((this.KitCompIssueField.Equals(value) != true)) {
                    this.KitCompIssueField = value;
                    this.RaisePropertyChanged("KitCompIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitCompShipComplete {
            get {
                return this.KitCompShipCompleteField;
            }
            set {
                if ((this.KitCompShipCompleteField.Equals(value) != true)) {
                    this.KitCompShipCompleteField = value;
                    this.RaisePropertyChanged("KitCompShipComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitDescription {
            get {
                return this.KitDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KitDescriptionField, value) != true)) {
                    this.KitDescriptionField = value;
                    this.RaisePropertyChanged("KitDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitFlag {
            get {
                return this.KitFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.KitFlagField, value) != true)) {
                    this.KitFlagField = value;
                    this.RaisePropertyChanged("KitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitIUM {
            get {
                return this.KitIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.KitIUMField, value) != true)) {
                    this.KitIUMField = value;
                    this.RaisePropertyChanged("KitIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitLotNum {
            get {
                return this.KitLotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitLotNumField, value) != true)) {
                    this.KitLotNumField = value;
                    this.RaisePropertyChanged("KitLotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitMassIssue {
            get {
                return this.KitMassIssueField;
            }
            set {
                if ((this.KitMassIssueField.Equals(value) != true)) {
                    this.KitMassIssueField = value;
                    this.RaisePropertyChanged("KitMassIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitParentIssue {
            get {
                return this.KitParentIssueField;
            }
            set {
                if ((this.KitParentIssueField.Equals(value) != true)) {
                    this.KitParentIssueField = value;
                    this.RaisePropertyChanged("KitParentIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KitParentLine {
            get {
                return this.KitParentLineField;
            }
            set {
                if ((this.KitParentLineField.Equals(value) != true)) {
                    this.KitParentLineField = value;
                    this.RaisePropertyChanged("KitParentLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPartNum {
            get {
                return this.KitPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPartNumField, value) != true)) {
                    this.KitPartNumField = value;
                    this.RaisePropertyChanged("KitPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal KitQtyFromInv {
            get {
                return this.KitQtyFromInvField;
            }
            set {
                if ((this.KitQtyFromInvField.Equals(value) != true)) {
                    this.KitQtyFromInvField = value;
                    this.RaisePropertyChanged("KitQtyFromInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitQtyFromInvEnabled {
            get {
                return this.KitQtyFromInvEnabledField;
            }
            set {
                if ((this.KitQtyFromInvEnabledField.Equals(value) != true)) {
                    this.KitQtyFromInvEnabledField = value;
                    this.RaisePropertyChanged("KitQtyFromInvEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitSerialTracked {
            get {
                return this.KitSerialTrackedField;
            }
            set {
                if ((this.KitSerialTrackedField.Equals(value) != true)) {
                    this.KitSerialTrackedField = value;
                    this.RaisePropertyChanged("KitSerialTracked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KitTrackLots {
            get {
                return this.KitTrackLotsField;
            }
            set {
                if ((this.KitTrackLotsField.Equals(value) != true)) {
                    this.KitTrackLotsField = value;
                    this.RaisePropertyChanged("KitTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWarehouse {
            get {
                return this.KitWarehouseField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWarehouseField, value) != true)) {
                    this.KitWarehouseField = value;
                    this.RaisePropertyChanged("KitWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWarehouseCodeDesc {
            get {
                return this.KitWarehouseCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWarehouseCodeDescField, value) != true)) {
                    this.KitWarehouseCodeDescField = value;
                    this.RaisePropertyChanged("KitWarehouseCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabCovered {
            get {
                return this.LabCoveredField;
            }
            set {
                if ((this.LabCoveredField.Equals(value) != true)) {
                    this.LabCoveredField = value;
                    this.RaisePropertyChanged("LabCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelType {
            get {
                return this.LabelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelTypeField, value) != true)) {
                    this.LabelTypeField = value;
                    this.RaisePropertyChanged("LabelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LaborDuration {
            get {
                return this.LaborDurationField;
            }
            set {
                if ((this.LaborDurationField.Equals(value) != true)) {
                    this.LaborDurationField = value;
                    this.RaisePropertyChanged("LaborDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LaborExpiration {
            get {
                return this.LaborExpirationField;
            }
            set {
                if ((this.LaborExpirationField.Equals(value) != true)) {
                    this.LaborExpirationField = value;
                    this.RaisePropertyChanged("LaborExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LaborMod {
            get {
                return this.LaborModField;
            }
            set {
                if ((object.ReferenceEquals(this.LaborModField, value) != true)) {
                    this.LaborModField = value;
                    this.RaisePropertyChanged("LaborMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastExpiration {
            get {
                return this.LastExpirationField;
            }
            set {
                if ((this.LastExpirationField.Equals(value) != true)) {
                    this.LastExpirationField = value;
                    this.RaisePropertyChanged("LastExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineContentValue {
            get {
                return this.LineContentValueField;
            }
            set {
                if ((this.LineContentValueField.Equals(value) != true)) {
                    this.LineContentValueField = value;
                    this.RaisePropertyChanged("LineContentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LineTax {
            get {
                return this.LineTaxField;
            }
            set {
                if ((this.LineTaxField.Equals(value) != true)) {
                    this.LineTaxField = value;
                    this.RaisePropertyChanged("LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkMsg {
            get {
                return this.LinkMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkMsgField, value) != true)) {
                    this.LinkMsgField = value;
                    this.RaisePropertyChanged("LinkMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotPartLotDescription {
            get {
                return this.LotPartLotDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LotPartLotDescriptionField, value) != true)) {
                    this.LotPartLotDescriptionField = value;
                    this.RaisePropertyChanged("LotPartLotDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCustID {
            get {
                return this.MFCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCustIDField, value) != true)) {
                    this.MFCustIDField = value;
                    this.RaisePropertyChanged("MFCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFCustNum {
            get {
                return this.MFCustNumField;
            }
            set {
                if ((this.MFCustNumField.Equals(value) != true)) {
                    this.MFCustNumField = value;
                    this.RaisePropertyChanged("MFCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFShipToNum {
            get {
                return this.MFShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFShipToNumField, value) != true)) {
                    this.MFShipToNumField = value;
                    this.RaisePropertyChanged("MFShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarkForAddrList {
            get {
                return this.MarkForAddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkForAddrListField, value) != true)) {
                    this.MarkForAddrListField = value;
                    this.RaisePropertyChanged("MarkForAddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MatCovered {
            get {
                return this.MatCoveredField;
            }
            set {
                if ((this.MatCoveredField.Equals(value) != true)) {
                    this.MatCoveredField = value;
                    this.RaisePropertyChanged("MatCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaterialDuration {
            get {
                return this.MaterialDurationField;
            }
            set {
                if ((this.MaterialDurationField.Equals(value) != true)) {
                    this.MaterialDurationField = value;
                    this.RaisePropertyChanged("MaterialDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MaterialExpiration {
            get {
                return this.MaterialExpirationField;
            }
            set {
                if ((this.MaterialExpirationField.Equals(value) != true)) {
                    this.MaterialExpirationField = value;
                    this.RaisePropertyChanged("MaterialExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaterialMod {
            get {
                return this.MaterialModField;
            }
            set {
                if ((object.ReferenceEquals(this.MaterialModField, value) != true)) {
                    this.MaterialModField = value;
                    this.RaisePropertyChanged("MaterialMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MiscCovered {
            get {
                return this.MiscCoveredField;
            }
            set {
                if ((this.MiscCoveredField.Equals(value) != true)) {
                    this.MiscCoveredField = value;
                    this.RaisePropertyChanged("MiscCovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MiscDuration {
            get {
                return this.MiscDurationField;
            }
            set {
                if ((this.MiscDurationField.Equals(value) != true)) {
                    this.MiscDurationField = value;
                    this.RaisePropertyChanged("MiscDuration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> MiscExpiration {
            get {
                return this.MiscExpirationField;
            }
            set {
                if ((this.MiscExpirationField.Equals(value) != true)) {
                    this.MiscExpirationField = value;
                    this.RaisePropertyChanged("MiscExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscMod {
            get {
                return this.MiscModField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscModField, value) != true)) {
                    this.MiscModField = value;
                    this.RaisePropertyChanged("MiscMod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NotAllocatedQty {
            get {
                return this.NotAllocatedQtyField;
            }
            set {
                if ((this.NotAllocatedQtyField.Equals(value) != true)) {
                    this.NotAllocatedQtyField = value;
                    this.RaisePropertyChanged("NotAllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotCompliant {
            get {
                return this.NotCompliantField;
            }
            set {
                if ((this.NotCompliantField.Equals(value) != true)) {
                    this.NotCompliantField = value;
                    this.RaisePropertyChanged("NotCompliant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress1 {
            get {
                return this.OTMFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress1Field, value) != true)) {
                    this.OTMFAddress1Field = value;
                    this.RaisePropertyChanged("OTMFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress2 {
            get {
                return this.OTMFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress2Field, value) != true)) {
                    this.OTMFAddress2Field = value;
                    this.RaisePropertyChanged("OTMFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFAddress3 {
            get {
                return this.OTMFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFAddress3Field, value) != true)) {
                    this.OTMFAddress3Field = value;
                    this.RaisePropertyChanged("OTMFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFCity {
            get {
                return this.OTMFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFCityField, value) != true)) {
                    this.OTMFCityField = value;
                    this.RaisePropertyChanged("OTMFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFContact {
            get {
                return this.OTMFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFContactField, value) != true)) {
                    this.OTMFContactField = value;
                    this.RaisePropertyChanged("OTMFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFCountryDescription {
            get {
                return this.OTMFCountryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFCountryDescriptionField, value) != true)) {
                    this.OTMFCountryDescriptionField = value;
                    this.RaisePropertyChanged("OTMFCountryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTMFCountryNum {
            get {
                return this.OTMFCountryNumField;
            }
            set {
                if ((this.OTMFCountryNumField.Equals(value) != true)) {
                    this.OTMFCountryNumField = value;
                    this.RaisePropertyChanged("OTMFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFFaxNum {
            get {
                return this.OTMFFaxNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFFaxNumField, value) != true)) {
                    this.OTMFFaxNumField = value;
                    this.RaisePropertyChanged("OTMFFaxNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFName {
            get {
                return this.OTMFNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFNameField, value) != true)) {
                    this.OTMFNameField = value;
                    this.RaisePropertyChanged("OTMFName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFPhoneNum {
            get {
                return this.OTMFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFPhoneNumField, value) != true)) {
                    this.OTMFPhoneNumField = value;
                    this.RaisePropertyChanged("OTMFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFState {
            get {
                return this.OTMFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFStateField, value) != true)) {
                    this.OTMFStateField = value;
                    this.RaisePropertyChanged("OTMFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTMFZIP {
            get {
                return this.OTMFZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OTMFZIPField, value) != true)) {
                    this.OTMFZIPField = value;
                    this.RaisePropertyChanged("OTMFZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Onsite {
            get {
                return this.OnsiteField;
            }
            set {
                if ((this.OnsiteField.Equals(value) != true)) {
                    this.OnsiteField = value;
                    this.RaisePropertyChanged("Onsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHold {
            get {
                return this.OrderHoldField;
            }
            set {
                if ((this.OrderHoldField.Equals(value) != true)) {
                    this.OrderHoldField = value;
                    this.RaisePropertyChanged("OrderHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineProdCode {
            get {
                return this.OrderLineProdCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineProdCodeField, value) != true)) {
                    this.OrderLineProdCodeField = value;
                    this.RaisePropertyChanged("OrderLineProdCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumPSCurrCode {
            get {
                return this.OrderNumPSCurrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumPSCurrCodeField, value) != true)) {
                    this.OrderNumPSCurrCodeField = value;
                    this.RaisePropertyChanged("OrderNumPSCurrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderRelOurReqQty {
            get {
                return this.OrderRelOurReqQtyField;
            }
            set {
                if ((this.OrderRelOurReqQtyField.Equals(value) != true)) {
                    this.OrderRelOurReqQtyField = value;
                    this.RaisePropertyChanged("OrderRelOurReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurInventoryShipQty {
            get {
                return this.OurInventoryShipQtyField;
            }
            set {
                if ((this.OurInventoryShipQtyField.Equals(value) != true)) {
                    this.OurInventoryShipQtyField = value;
                    this.RaisePropertyChanged("OurInventoryShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurJobShipIUM {
            get {
                return this.OurJobShipIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.OurJobShipIUMField, value) != true)) {
                    this.OurJobShipIUMField = value;
                    this.RaisePropertyChanged("OurJobShipIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobShipQty {
            get {
                return this.OurJobShipQtyField;
            }
            set {
                if ((this.OurJobShipQtyField.Equals(value) != true)) {
                    this.OurJobShipQtyField = value;
                    this.RaisePropertyChanged("OurJobShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobShippedQty {
            get {
                return this.OurJobShippedQtyField;
            }
            set {
                if ((this.OurJobShippedQtyField.Equals(value) != true)) {
                    this.OurJobShippedQtyField = value;
                    this.RaisePropertyChanged("OurJobShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurRemainQty {
            get {
                return this.OurRemainQtyField;
            }
            set {
                if ((this.OurRemainQtyField.Equals(value) != true)) {
                    this.OurRemainQtyField = value;
                    this.RaisePropertyChanged("OurRemainQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurRemainUM {
            get {
                return this.OurRemainUMField;
            }
            set {
                if ((object.ReferenceEquals(this.OurRemainUMField, value) != true)) {
                    this.OurRemainUMField = value;
                    this.RaisePropertyChanged("OurRemainUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurReqQty {
            get {
                return this.OurReqQtyField;
            }
            set {
                if ((this.OurReqQtyField.Equals(value) != true)) {
                    this.OurReqQtyField = value;
                    this.RaisePropertyChanged("OurReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurReqUM {
            get {
                return this.OurReqUMField;
            }
            set {
                if ((object.ReferenceEquals(this.OurReqUMField, value) != true)) {
                    this.OurReqUMField = value;
                    this.RaisePropertyChanged("OurReqUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurShippedQty {
            get {
                return this.OurShippedQtyField;
            }
            set {
                if ((this.OurShippedQtyField.Equals(value) != true)) {
                    this.OurShippedQtyField = value;
                    this.RaisePropertyChanged("OurShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurShippedUM {
            get {
                return this.OurShippedUMField;
            }
            set {
                if ((object.ReferenceEquals(this.OurShippedUMField, value) != true)) {
                    this.OurShippedUMField = value;
                    this.RaisePropertyChanged("OurShippedUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurStockShippedQty {
            get {
                return this.OurStockShippedQtyField;
            }
            set {
                if ((this.OurStockShippedQtyField.Equals(value) != true)) {
                    this.OurStockShippedQtyField = value;
                    this.RaisePropertyChanged("OurStockShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PCIDItemSeq {
            get {
                return this.PCIDItemSeqField;
            }
            set {
                if ((this.PCIDItemSeqField.Equals(value) != true)) {
                    this.PCIDItemSeqField = value;
                    this.RaisePropertyChanged("PCIDItemSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PCIDParentLine {
            get {
                return this.PCIDParentLineField;
            }
            set {
                if ((this.PCIDParentLineField.Equals(value) != true)) {
                    this.PCIDParentLineField = value;
                    this.RaisePropertyChanged("PCIDParentLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackNumShipStatus {
            get {
                return this.PackNumShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PackNumShipStatusField, value) != true)) {
                    this.PackNumShipStatusField = value;
                    this.RaisePropertyChanged("PackNumShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PackNumUseOTS {
            get {
                return this.PackNumUseOTSField;
            }
            set {
                if ((this.PackNumUseOTSField.Equals(value) != true)) {
                    this.PackNumUseOTSField = value;
                    this.RaisePropertyChanged("PackNumUseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Packages {
            get {
                return this.PackagesField;
            }
            set {
                if ((this.PackagesField.Equals(value) != true)) {
                    this.PackagesField = value;
                    this.RaisePropertyChanged("Packages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartAESExp {
            get {
                return this.PartAESExpField;
            }
            set {
                if ((object.ReferenceEquals(this.PartAESExpField, value) != true)) {
                    this.PartAESExpField = value;
                    this.RaisePropertyChanged("PartAESExp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartCompany {
            get {
                return this.PartCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCompanyField, value) != true)) {
                    this.PartCompanyField = value;
                    this.RaisePropertyChanged("PartCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartECNNumber {
            get {
                return this.PartECNNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartECNNumberField, value) != true)) {
                    this.PartECNNumberField = value;
                    this.RaisePropertyChanged("PartECNNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartExpLicNumber {
            get {
                return this.PartExpLicNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PartExpLicNumberField, value) != true)) {
                    this.PartExpLicNumberField = value;
                    this.RaisePropertyChanged("PartExpLicNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartExpLicType {
            get {
                return this.PartExpLicTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartExpLicTypeField, value) != true)) {
                    this.PartExpLicTypeField = value;
                    this.RaisePropertyChanged("PartExpLicType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHTS {
            get {
                return this.PartHTSField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHTSField, value) != true)) {
                    this.PartHTSField = value;
                    this.RaisePropertyChanged("PartHTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHazClass {
            get {
                return this.PartHazClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHazClassField, value) != true)) {
                    this.PartHazClassField = value;
                    this.RaisePropertyChanged("PartHazClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHazGvrnmtID {
            get {
                return this.PartHazGvrnmtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHazGvrnmtIDField, value) != true)) {
                    this.PartHazGvrnmtIDField = value;
                    this.RaisePropertyChanged("PartHazGvrnmtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartHazItem {
            get {
                return this.PartHazItemField;
            }
            set {
                if ((this.PartHazItemField.Equals(value) != true)) {
                    this.PartHazItemField = value;
                    this.RaisePropertyChanged("PartHazItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHazPackInstr {
            get {
                return this.PartHazPackInstrField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHazPackInstrField, value) != true)) {
                    this.PartHazPackInstrField = value;
                    this.RaisePropertyChanged("PartHazPackInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHazSub {
            get {
                return this.PartHazSubField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHazSubField, value) != true)) {
                    this.PartHazSubField = value;
                    this.RaisePropertyChanged("PartHazSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartHazTechName {
            get {
                return this.PartHazTechNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PartHazTechNameField, value) != true)) {
                    this.PartHazTechNameField = value;
                    this.RaisePropertyChanged("PartHazTechName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNAFTAOrigCountry {
            get {
                return this.PartNAFTAOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNAFTAOrigCountryField, value) != true)) {
                    this.PartNAFTAOrigCountryField = value;
                    this.RaisePropertyChanged("PartNAFTAOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNAFTAPref {
            get {
                return this.PartNAFTAPrefField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNAFTAPrefField, value) != true)) {
                    this.PartNAFTAPrefField = value;
                    this.RaisePropertyChanged("PartNAFTAPref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNAFTAProd {
            get {
                return this.PartNAFTAProdField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNAFTAProdField, value) != true)) {
                    this.PartNAFTAProdField = value;
                    this.RaisePropertyChanged("PartNAFTAProd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumFSAEquipment {
            get {
                return this.PartNumFSAEquipmentField;
            }
            set {
                if ((this.PartNumFSAEquipmentField.Equals(value) != true)) {
                    this.PartNumFSAEquipmentField = value;
                    this.RaisePropertyChanged("PartNumFSAEquipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumSendToFSA {
            get {
                return this.PartNumSendToFSAField;
            }
            set {
                if ((this.PartNumSendToFSAField.Equals(value) != true)) {
                    this.PartNumSendToFSAField = value;
                    this.RaisePropertyChanged("PartNumSendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumWarrantyCode {
            get {
                return this.PartNumWarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumWarrantyCodeField, value) != true)) {
                    this.PartNumWarrantyCodeField = value;
                    this.RaisePropertyChanged("PartNumWarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartOrigCountry {
            get {
                return this.PartOrigCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOrigCountryField, value) != true)) {
                    this.PartOrigCountryField = value;
                    this.RaisePropertyChanged("PartOrigCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartPartNum {
            get {
                return this.PartPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartPartNumField, value) != true)) {
                    this.PartPartNumField = value;
                    this.RaisePropertyChanged("PartPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartSchedBcode {
            get {
                return this.PartSchedBcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartSchedBcodeField, value) != true)) {
                    this.PartSchedBcodeField = value;
                    this.RaisePropertyChanged("PartSchedBcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartUseHTSDesc {
            get {
                return this.PartUseHTSDescField;
            }
            set {
                if ((this.PartUseHTSDescField.Equals(value) != true)) {
                    this.PartUseHTSDescField = value;
                    this.RaisePropertyChanged("PartUseHTSDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PickedAutoAllocatedQty {
            get {
                return this.PickedAutoAllocatedQtyField;
            }
            set {
                if ((this.PickedAutoAllocatedQtyField.Equals(value) != true)) {
                    this.PickedAutoAllocatedQtyField = value;
                    this.RaisePropertyChanged("PickedAutoAllocatedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCodePartNum {
            get {
                return this.PkgCodePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodePartNumField, value) != true)) {
                    this.PkgCodePartNumField = value;
                    this.RaisePropertyChanged("PkgCodePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PricePerCode {
            get {
                return this.PricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PricePerCodeField, value) != true)) {
                    this.PricePerCodeField = value;
                    this.RaisePropertyChanged("PricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RenewalNbr {
            get {
                return this.RenewalNbrField;
            }
            set {
                if ((this.RenewalNbrField.Equals(value) != true)) {
                    this.RenewalNbrField = value;
                    this.RaisePropertyChanged("RenewalNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ExtPrice {
            get {
                return this.Rpt1ExtPriceField;
            }
            set {
                if ((this.Rpt1ExtPriceField.Equals(value) != true)) {
                    this.Rpt1ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InDiscount {
            get {
                return this.Rpt1InDiscountField;
            }
            set {
                if ((this.Rpt1InDiscountField.Equals(value) != true)) {
                    this.Rpt1InDiscountField = value;
                    this.RaisePropertyChanged("Rpt1InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InExtPrice {
            get {
                return this.Rpt1InExtPriceField;
            }
            set {
                if ((this.Rpt1InExtPriceField.Equals(value) != true)) {
                    this.Rpt1InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt1InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1InUnitPrice {
            get {
                return this.Rpt1InUnitPriceField;
            }
            set {
                if ((this.Rpt1InUnitPriceField.Equals(value) != true)) {
                    this.Rpt1InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1LineTax {
            get {
                return this.Rpt1LineTaxField;
            }
            set {
                if ((this.Rpt1LineTaxField.Equals(value) != true)) {
                    this.Rpt1LineTaxField = value;
                    this.RaisePropertyChanged("Rpt1LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1UnitPrice {
            get {
                return this.Rpt1UnitPriceField;
            }
            set {
                if ((this.Rpt1UnitPriceField.Equals(value) != true)) {
                    this.Rpt1UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt1UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ExtPrice {
            get {
                return this.Rpt2ExtPriceField;
            }
            set {
                if ((this.Rpt2ExtPriceField.Equals(value) != true)) {
                    this.Rpt2ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InDiscount {
            get {
                return this.Rpt2InDiscountField;
            }
            set {
                if ((this.Rpt2InDiscountField.Equals(value) != true)) {
                    this.Rpt2InDiscountField = value;
                    this.RaisePropertyChanged("Rpt2InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InExtPrice {
            get {
                return this.Rpt2InExtPriceField;
            }
            set {
                if ((this.Rpt2InExtPriceField.Equals(value) != true)) {
                    this.Rpt2InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt2InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2InUnitPrice {
            get {
                return this.Rpt2InUnitPriceField;
            }
            set {
                if ((this.Rpt2InUnitPriceField.Equals(value) != true)) {
                    this.Rpt2InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2LineTax {
            get {
                return this.Rpt2LineTaxField;
            }
            set {
                if ((this.Rpt2LineTaxField.Equals(value) != true)) {
                    this.Rpt2LineTaxField = value;
                    this.RaisePropertyChanged("Rpt2LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2UnitPrice {
            get {
                return this.Rpt2UnitPriceField;
            }
            set {
                if ((this.Rpt2UnitPriceField.Equals(value) != true)) {
                    this.Rpt2UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt2UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ExtPrice {
            get {
                return this.Rpt3ExtPriceField;
            }
            set {
                if ((this.Rpt3ExtPriceField.Equals(value) != true)) {
                    this.Rpt3ExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3ExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InDiscount {
            get {
                return this.Rpt3InDiscountField;
            }
            set {
                if ((this.Rpt3InDiscountField.Equals(value) != true)) {
                    this.Rpt3InDiscountField = value;
                    this.RaisePropertyChanged("Rpt3InDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InExtPrice {
            get {
                return this.Rpt3InExtPriceField;
            }
            set {
                if ((this.Rpt3InExtPriceField.Equals(value) != true)) {
                    this.Rpt3InExtPriceField = value;
                    this.RaisePropertyChanged("Rpt3InExtPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3InUnitPrice {
            get {
                return this.Rpt3InUnitPriceField;
            }
            set {
                if ((this.Rpt3InUnitPriceField.Equals(value) != true)) {
                    this.Rpt3InUnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3InUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3LineTax {
            get {
                return this.Rpt3LineTaxField;
            }
            set {
                if ((this.Rpt3LineTaxField.Equals(value) != true)) {
                    this.Rpt3LineTaxField = value;
                    this.RaisePropertyChanged("Rpt3LineTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3UnitPrice {
            get {
                return this.Rpt3UnitPriceField;
            }
            set {
                if ((this.Rpt3UnitPriceField.Equals(value) != true)) {
                    this.Rpt3UnitPriceField = value;
                    this.RaisePropertyChanged("Rpt3UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SelectedLocationIDQty {
            get {
                return this.SelectedLocationIDQtyField;
            }
            set {
                if ((this.SelectedLocationIDQtyField.Equals(value) != true)) {
                    this.SelectedLocationIDQtyField = value;
                    this.RaisePropertyChanged("SelectedLocationIDQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingFactor {
            get {
                return this.SellingFactorField;
            }
            set {
                if ((this.SellingFactorField.Equals(value) != true)) {
                    this.SellingFactorField = value;
                    this.RaisePropertyChanged("SellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingFactorDirection {
            get {
                return this.SellingFactorDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingFactorDirectionField, value) != true)) {
                    this.SellingFactorDirectionField = value;
                    this.RaisePropertyChanged("SellingFactorDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingInventoryShipQty {
            get {
                return this.SellingInventoryShipQtyField;
            }
            set {
                if ((this.SellingInventoryShipQtyField.Equals(value) != true)) {
                    this.SellingInventoryShipQtyField = value;
                    this.RaisePropertyChanged("SellingInventoryShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingJobShipQty {
            get {
                return this.SellingJobShipQtyField;
            }
            set {
                if ((this.SellingJobShipQtyField.Equals(value) != true)) {
                    this.SellingJobShipQtyField = value;
                    this.RaisePropertyChanged("SellingJobShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingRemainQty {
            get {
                return this.SellingRemainQtyField;
            }
            set {
                if ((this.SellingRemainQtyField.Equals(value) != true)) {
                    this.SellingRemainQtyField = value;
                    this.RaisePropertyChanged("SellingRemainQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingRemainUM {
            get {
                return this.SellingRemainUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingRemainUMField, value) != true)) {
                    this.SellingRemainUMField = value;
                    this.RaisePropertyChanged("SellingRemainUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingReqQty {
            get {
                return this.SellingReqQtyField;
            }
            set {
                if ((this.SellingReqQtyField.Equals(value) != true)) {
                    this.SellingReqQtyField = value;
                    this.RaisePropertyChanged("SellingReqQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingReqUM {
            get {
                return this.SellingReqUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingReqUMField, value) != true)) {
                    this.SellingReqUMField = value;
                    this.RaisePropertyChanged("SellingReqUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipmentQty {
            get {
                return this.SellingShipmentQtyField;
            }
            set {
                if ((this.SellingShipmentQtyField.Equals(value) != true)) {
                    this.SellingShipmentQtyField = value;
                    this.RaisePropertyChanged("SellingShipmentQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingShipmentUM {
            get {
                return this.SellingShipmentUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingShipmentUMField, value) != true)) {
                    this.SellingShipmentUMField = value;
                    this.RaisePropertyChanged("SellingShipmentUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShippedQty {
            get {
                return this.SellingShippedQtyField;
            }
            set {
                if ((this.SellingShippedQtyField.Equals(value) != true)) {
                    this.SellingShippedQtyField = value;
                    this.RaisePropertyChanged("SellingShippedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SellingShippedUM {
            get {
                return this.SellingShippedUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SellingShippedUMField, value) != true)) {
                    this.SellingShippedUMField = value;
                    this.RaisePropertyChanged("SellingShippedUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipCmpl {
            get {
                return this.ShipCmplField;
            }
            set {
                if ((this.ShipCmplField.Equals(value) != true)) {
                    this.ShipCmplField = value;
                    this.RaisePropertyChanged("ShipCmpl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipOvers {
            get {
                return this.ShipOversField;
            }
            set {
                if ((this.ShipOversField.Equals(value) != true)) {
                    this.ShipOversField = value;
                    this.RaisePropertyChanged("ShipOvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToWarning {
            get {
                return this.ShipToWarningField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToWarningField, value) != true)) {
                    this.ShipToWarningField = value;
                    this.RaisePropertyChanged("ShipToWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StockPart {
            get {
                return this.StockPartField;
            }
            set {
                if ((this.StockPartField.Equals(value) != true)) {
                    this.StockPartField = value;
                    this.RaisePropertyChanged("StockPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TMBilling {
            get {
                return this.TMBillingField;
            }
            set {
                if ((this.TMBillingField.Equals(value) != true)) {
                    this.TMBillingField = value;
                    this.RaisePropertyChanged("TMBilling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalNetWeight {
            get {
                return this.TotalNetWeightField;
            }
            set {
                if ((this.TotalNetWeightField.Equals(value) != true)) {
                    this.TotalNetWeightField = value;
                    this.RaisePropertyChanged("TotalNetWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackID {
            get {
                return this.TrackIDField;
            }
            set {
                if ((this.TrackIDField.Equals(value) != true)) {
                    this.TrackIDField = value;
                    this.RaisePropertyChanged("TrackID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrackSerialNum {
            get {
                return this.TrackSerialNumField;
            }
            set {
                if ((this.TrackSerialNumField.Equals(value) != true)) {
                    this.TrackSerialNumField = value;
                    this.RaisePropertyChanged("TrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TranLocationIDQty {
            get {
                return this.TranLocationIDQtyField;
            }
            set {
                if ((this.TranLocationIDQtyField.Equals(value) != true)) {
                    this.TranLocationIDQtyField = value;
                    this.RaisePropertyChanged("TranLocationIDQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedInventory {
            get {
                return this.UpdatedInventoryField;
            }
            set {
                if ((this.UpdatedInventoryField.Equals(value) != true)) {
                    this.UpdatedInventoryField = value;
                    this.RaisePropertyChanged("UpdatedInventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTMF {
            get {
                return this.UseOTMFField;
            }
            set {
                if ((this.UseOTMFField.Equals(value) != true)) {
                    this.UseOTMFField = value;
                    this.RaisePropertyChanged("UseOTMF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseShipDtlInfo {
            get {
                return this.UseShipDtlInfoField;
            }
            set {
                if ((this.UseShipDtlInfoField.Equals(value) != true)) {
                    this.UseShipDtlInfoField = value;
                    this.RaisePropertyChanged("UseShipDtlInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIPBinNum {
            get {
                return this.WIPBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.WIPBinNumField, value) != true)) {
                    this.WIPBinNumField = value;
                    this.RaisePropertyChanged("WIPBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIPWarehouseCode {
            get {
                return this.WIPWarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WIPWarehouseCodeField, value) != true)) {
                    this.WIPWarehouseCodeField = value;
                    this.RaisePropertyChanged("WIPWarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WIPWarehouseCodeDescription {
            get {
                return this.WIPWarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WIPWarehouseCodeDescriptionField, value) != true)) {
                    this.WIPWarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WIPWarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WUM {
            get {
                return this.WUMField;
            }
            set {
                if ((object.ReferenceEquals(this.WUMField, value) != true)) {
                    this.WUMField = value;
                    this.RaisePropertyChanged("WUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCode {
            get {
                return this.WarrantyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeField, value) != true)) {
                    this.WarrantyCodeField = value;
                    this.RaisePropertyChanged("WarrantyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WarrantyCodeSendToFSA {
            get {
                return this.WarrantyCodeSendToFSAField;
            }
            set {
                if ((this.WarrantyCodeSendToFSAField.Equals(value) != true)) {
                    this.WarrantyCodeSendToFSAField = value;
                    this.RaisePropertyChanged("WarrantyCodeSendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyCodeWarrDescription {
            get {
                return this.WarrantyCodeWarrDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCodeWarrDescriptionField, value) != true)) {
                    this.WarrantyCodeWarrDescriptionField = value;
                    this.RaisePropertyChanged("WarrantyCodeWarrDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarrantyComment {
            get {
                return this.WarrantyCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.WarrantyCommentField, value) != true)) {
                    this.WarrantyCommentField = value;
                    this.RaisePropertyChanged("WarrantyComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WarrantySendToFSA {
            get {
                return this.WarrantySendToFSAField;
            }
            set {
                if ((this.WarrantySendToFSAField.Equals(value) != true)) {
                    this.WarrantySendToFSAField = value;
                    this.RaisePropertyChanged("WarrantySendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseList {
            get {
                return this.WhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseListField, value) != true)) {
                    this.WhseListField = value;
                    this.RaisePropertyChanged("WhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipDtlAttchRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlPackagingRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipDtlPackagingRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentPkgNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurQty {
            get {
                return this.OurQtyField;
            }
            set {
                if ((this.OurQtyField.Equals(value) != true)) {
                    this.OurQtyField = value;
                    this.RaisePropertyChanged("OurQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentPkgNum {
            get {
                return this.ParentPkgNumField;
            }
            set {
                if ((this.ParentPkgNumField.Equals(value) != true)) {
                    this.ParentPkgNumField = value;
                    this.RaisePropertyChanged("ParentPkgNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCodeDesc {
            get {
                return this.PkgCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeDescField, value) != true)) {
                    this.PkgCodeDescField = value;
                    this.RaisePropertyChanged("PkgCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgSerialNum {
            get {
                return this.PkgSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgSerialNumField, value) != true)) {
                    this.PkgSerialNumField = value;
                    this.RaisePropertyChanged("PkgSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SizeUOM {
            get {
                return this.SizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeUOMField, value) != true)) {
                    this.SizeUOMField = value;
                    this.RaisePropertyChanged("SizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDesc {
            get {
                return this.TranDocTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescField, value) != true)) {
                    this.TranDocTypeDescField = value;
                    this.RaisePropertyChanged("TranDocTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlTaxRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipDtlTaxRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescCollectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocFixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ECAcquisitionSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExemptPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExemptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResolutionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResolutionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReverseChargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DedTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DefTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3FixedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesTaxDescDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxRateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionType {
            get {
                return this.CollectionTypeField;
            }
            set {
                if ((this.CollectionTypeField.Equals(value) != true)) {
                    this.CollectionTypeField = value;
                    this.RaisePropertyChanged("CollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DedTaxAmt {
            get {
                return this.DedTaxAmtField;
            }
            set {
                if ((this.DedTaxAmtField.Equals(value) != true)) {
                    this.DedTaxAmtField = value;
                    this.RaisePropertyChanged("DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxAmt {
            get {
                return this.DefTaxAmtField;
            }
            set {
                if ((this.DefTaxAmtField.Equals(value) != true)) {
                    this.DefTaxAmtField = value;
                    this.RaisePropertyChanged("DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DefTaxableAmt {
            get {
                return this.DefTaxableAmtField;
            }
            set {
                if ((this.DefTaxableAmtField.Equals(value) != true)) {
                    this.DefTaxableAmtField = value;
                    this.RaisePropertyChanged("DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescCollectionType {
            get {
                return this.DescCollectionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DescCollectionTypeField, value) != true)) {
                    this.DescCollectionTypeField = value;
                    this.RaisePropertyChanged("DescCollectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDedTaxAmt {
            get {
                return this.DocDedTaxAmtField;
            }
            set {
                if ((this.DocDedTaxAmtField.Equals(value) != true)) {
                    this.DocDedTaxAmtField = value;
                    this.RaisePropertyChanged("DocDedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxAmt {
            get {
                return this.DocDefTaxAmtField;
            }
            set {
                if ((this.DocDefTaxAmtField.Equals(value) != true)) {
                    this.DocDefTaxAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDefTaxableAmt {
            get {
                return this.DocDefTaxableAmtField;
            }
            set {
                if ((this.DocDefTaxableAmtField.Equals(value) != true)) {
                    this.DocDefTaxableAmtField = value;
                    this.RaisePropertyChanged("DocDefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocDiscount {
            get {
                return this.DocDiscountField;
            }
            set {
                if ((this.DocDiscountField.Equals(value) != true)) {
                    this.DocDiscountField = value;
                    this.RaisePropertyChanged("DocDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocFixedAmount {
            get {
                return this.DocFixedAmountField;
            }
            set {
                if ((this.DocFixedAmountField.Equals(value) != true)) {
                    this.DocFixedAmountField = value;
                    this.RaisePropertyChanged("DocFixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ECAcquisitionSeq {
            get {
                return this.ECAcquisitionSeqField;
            }
            set {
                if ((this.ECAcquisitionSeqField.Equals(value) != true)) {
                    this.ECAcquisitionSeqField = value;
                    this.RaisePropertyChanged("ECAcquisitionSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExemptPercent {
            get {
                return this.ExemptPercentField;
            }
            set {
                if ((this.ExemptPercentField.Equals(value) != true)) {
                    this.ExemptPercentField = value;
                    this.RaisePropertyChanged("ExemptPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExemptType {
            get {
                return this.ExemptTypeField;
            }
            set {
                if ((this.ExemptTypeField.Equals(value) != true)) {
                    this.ExemptTypeField = value;
                    this.RaisePropertyChanged("ExemptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FixedAmount {
            get {
                return this.FixedAmountField;
            }
            set {
                if ((this.FixedAmountField.Equals(value) != true)) {
                    this.FixedAmountField = value;
                    this.RaisePropertyChanged("FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManAdd {
            get {
                return this.ManAddField;
            }
            set {
                if ((this.ManAddField.Equals(value) != true)) {
                    this.ManAddField = value;
                    this.RaisePropertyChanged("ManAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Manual {
            get {
                return this.ManualField;
            }
            set {
                if ((this.ManualField.Equals(value) != true)) {
                    this.ManualField = value;
                    this.RaisePropertyChanged("Manual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDescription {
            get {
                return this.RateCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescriptionField, value) != true)) {
                    this.RateCodeDescriptionField = value;
                    this.RaisePropertyChanged("RateCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResolutionDate {
            get {
                return this.ResolutionDateField;
            }
            set {
                if ((this.ResolutionDateField.Equals(value) != true)) {
                    this.ResolutionDateField = value;
                    this.RaisePropertyChanged("ResolutionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResolutionNum {
            get {
                return this.ResolutionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolutionNumField, value) != true)) {
                    this.ResolutionNumField = value;
                    this.RaisePropertyChanged("ResolutionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReverseCharge {
            get {
                return this.ReverseChargeField;
            }
            set {
                if ((this.ReverseChargeField.Equals(value) != true)) {
                    this.ReverseChargeField = value;
                    this.RaisePropertyChanged("ReverseCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DedTaxAmt {
            get {
                return this.Rpt1DedTaxAmtField;
            }
            set {
                if ((this.Rpt1DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxAmt {
            get {
                return this.Rpt1DefTaxAmtField;
            }
            set {
                if ((this.Rpt1DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1DefTaxableAmt {
            get {
                return this.Rpt1DefTaxableAmtField;
            }
            set {
                if ((this.Rpt1DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt1DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Discount {
            get {
                return this.Rpt1DiscountField;
            }
            set {
                if ((this.Rpt1DiscountField.Equals(value) != true)) {
                    this.Rpt1DiscountField = value;
                    this.RaisePropertyChanged("Rpt1Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1FixedAmount {
            get {
                return this.Rpt1FixedAmountField;
            }
            set {
                if ((this.Rpt1FixedAmountField.Equals(value) != true)) {
                    this.Rpt1FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt1FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DedTaxAmt {
            get {
                return this.Rpt2DedTaxAmtField;
            }
            set {
                if ((this.Rpt2DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxAmt {
            get {
                return this.Rpt2DefTaxAmtField;
            }
            set {
                if ((this.Rpt2DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2DefTaxableAmt {
            get {
                return this.Rpt2DefTaxableAmtField;
            }
            set {
                if ((this.Rpt2DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt2DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Discount {
            get {
                return this.Rpt2DiscountField;
            }
            set {
                if ((this.Rpt2DiscountField.Equals(value) != true)) {
                    this.Rpt2DiscountField = value;
                    this.RaisePropertyChanged("Rpt2Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2FixedAmount {
            get {
                return this.Rpt2FixedAmountField;
            }
            set {
                if ((this.Rpt2FixedAmountField.Equals(value) != true)) {
                    this.Rpt2FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt2FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DedTaxAmt {
            get {
                return this.Rpt3DedTaxAmtField;
            }
            set {
                if ((this.Rpt3DedTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DedTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DedTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxAmt {
            get {
                return this.Rpt3DefTaxAmtField;
            }
            set {
                if ((this.Rpt3DefTaxAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3DefTaxableAmt {
            get {
                return this.Rpt3DefTaxableAmtField;
            }
            set {
                if ((this.Rpt3DefTaxableAmtField.Equals(value) != true)) {
                    this.Rpt3DefTaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3DefTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Discount {
            get {
                return this.Rpt3DiscountField;
            }
            set {
                if ((this.Rpt3DiscountField.Equals(value) != true)) {
                    this.Rpt3DiscountField = value;
                    this.RaisePropertyChanged("Rpt3Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3FixedAmount {
            get {
                return this.Rpt3FixedAmountField;
            }
            set {
                if ((this.Rpt3FixedAmountField.Equals(value) != true)) {
                    this.Rpt3FixedAmountField = value;
                    this.RaisePropertyChanged("Rpt3FixedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesTaxDescDescription {
            get {
                return this.SalesTaxDescDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesTaxDescDescriptionField, value) != true)) {
                    this.SalesTaxDescDescriptionField = value;
                    this.RaisePropertyChanged("SalesTaxDescDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxRateDate {
            get {
                return this.TaxRateDateField;
            }
            set {
                if ((this.TaxRateDateField.Equals(value) != true)) {
                    this.TaxRateDateField = value;
                    this.RaisePropertyChanged("TaxRateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxTotal {
            get {
                return this.TaxTotalField;
            }
            set {
                if ((this.TaxTotalField.Equals(value) != true)) {
                    this.TaxTotalField = value;
                    this.RaisePropertyChanged("TaxTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextCode {
            get {
                return this.TextCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextCodeField, value) != true)) {
                    this.TextCodeField = value;
                    this.RaisePropertyChanged("TextCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Timing {
            get {
                return this.TimingField;
            }
            set {
                if ((this.TimingField.Equals(value) != true)) {
                    this.TimingField = value;
                    this.RaisePropertyChanged("Timing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipHeadRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGAuthorizationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AGAuthorizationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AGCOTMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGCarrierCUITField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGDocumentLetterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGInvoicingPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGInvoicingPointDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGLegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGPrintingControlTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGShippingWayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AGTrackLicenseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ASNPrintedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowChgAfterPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutoInvoiceMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonContentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CartonStageNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckOrderMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterASNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CtnPkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CustomerSendToFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DigitalSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DispatchReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoPostUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocCopyNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWithholdingTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DspDigitalSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAssignLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePackageControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePhantomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTranDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableVoidLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalDeliveryNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FirstPrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromMasterPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCartonLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegNumCnfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazardousShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LastCartonFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MF3BAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCallTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDimWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDiscFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFFreightAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFOtherAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFOversizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFPickupNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTransNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFUse3BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MXIncotermField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManifestFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestWtUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterpackPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultipleShippersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurSupplierCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PBHoldNoInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayBTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomCasesExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgHeightEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgLenEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgSizeUOMEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgWidthEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostUpdMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QSUseBOLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QSUseCOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool QSUseIntlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceChangedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReconcileQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplicateCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplicatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplicatedStatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipOversField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SignedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StageShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StagingReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusChgMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxCalcDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxCalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WIPackSlipCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WayBillNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPackNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGAuthorizationCode {
            get {
                return this.AGAuthorizationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGAuthorizationCodeField, value) != true)) {
                    this.AGAuthorizationCodeField = value;
                    this.RaisePropertyChanged("AGAuthorizationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AGAuthorizationDate {
            get {
                return this.AGAuthorizationDateField;
            }
            set {
                if ((this.AGAuthorizationDateField.Equals(value) != true)) {
                    this.AGAuthorizationDateField = value;
                    this.RaisePropertyChanged("AGAuthorizationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AGCOTMark {
            get {
                return this.AGCOTMarkField;
            }
            set {
                if ((this.AGCOTMarkField.Equals(value) != true)) {
                    this.AGCOTMarkField = value;
                    this.RaisePropertyChanged("AGCOTMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGCarrierCUIT {
            get {
                return this.AGCarrierCUITField;
            }
            set {
                if ((object.ReferenceEquals(this.AGCarrierCUITField, value) != true)) {
                    this.AGCarrierCUITField = value;
                    this.RaisePropertyChanged("AGCarrierCUIT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGDocumentLetter {
            get {
                return this.AGDocumentLetterField;
            }
            set {
                if ((object.ReferenceEquals(this.AGDocumentLetterField, value) != true)) {
                    this.AGDocumentLetterField = value;
                    this.RaisePropertyChanged("AGDocumentLetter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGInvoicingPoint {
            get {
                return this.AGInvoicingPointField;
            }
            set {
                if ((object.ReferenceEquals(this.AGInvoicingPointField, value) != true)) {
                    this.AGInvoicingPointField = value;
                    this.RaisePropertyChanged("AGInvoicingPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGInvoicingPointDescription {
            get {
                return this.AGInvoicingPointDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AGInvoicingPointDescriptionField, value) != true)) {
                    this.AGInvoicingPointDescriptionField = value;
                    this.RaisePropertyChanged("AGInvoicingPointDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGLegalNumber {
            get {
                return this.AGLegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AGLegalNumberField, value) != true)) {
                    this.AGLegalNumberField = value;
                    this.RaisePropertyChanged("AGLegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGPrintingControlType {
            get {
                return this.AGPrintingControlTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AGPrintingControlTypeField, value) != true)) {
                    this.AGPrintingControlTypeField = value;
                    this.RaisePropertyChanged("AGPrintingControlType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGShippingWay {
            get {
                return this.AGShippingWayField;
            }
            set {
                if ((object.ReferenceEquals(this.AGShippingWayField, value) != true)) {
                    this.AGShippingWayField = value;
                    this.RaisePropertyChanged("AGShippingWay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AGTrackLicense {
            get {
                return this.AGTrackLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.AGTrackLicenseField, value) != true)) {
                    this.AGTrackLicenseField = value;
                    this.RaisePropertyChanged("AGTrackLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ASNPrintedDate {
            get {
                return this.ASNPrintedDateField;
            }
            set {
                if ((this.ASNPrintedDateField.Equals(value) != true)) {
                    this.ASNPrintedDateField = value;
                    this.RaisePropertyChanged("ASNPrintedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowChgAfterPrint {
            get {
                return this.AllowChgAfterPrintField;
            }
            set {
                if ((this.AllowChgAfterPrintField.Equals(value) != true)) {
                    this.AllowChgAfterPrintField = value;
                    this.RaisePropertyChanged("AllowChgAfterPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AutoInvoiceMessage {
            get {
                return this.AutoInvoiceMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AutoInvoiceMessageField, value) != true)) {
                    this.AutoInvoiceMessageField = value;
                    this.RaisePropertyChanged("AutoInvoiceMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLLine {
            get {
                return this.BOLLineField;
            }
            set {
                if ((this.BOLLineField.Equals(value) != true)) {
                    this.BOLLineField = value;
                    this.RaisePropertyChanged("BOLLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLNum {
            get {
                return this.BOLNumField;
            }
            set {
                if ((this.BOLNumField.Equals(value) != true)) {
                    this.BOLNumField = value;
                    this.RaisePropertyChanged("BOLNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddr {
            get {
                return this.BillAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddrField, value) != true)) {
                    this.BillAddrField = value;
                    this.RaisePropertyChanged("BillAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonContentValue {
            get {
                return this.CartonContentValueField;
            }
            set {
                if ((this.CartonContentValueField.Equals(value) != true)) {
                    this.CartonContentValueField = value;
                    this.RaisePropertyChanged("CartonContentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CartonStageNbr {
            get {
                return this.CartonStageNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CartonStageNbrField, value) != true)) {
                    this.CartonStageNbrField = value;
                    this.RaisePropertyChanged("CartonStageNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckOrderMessage {
            get {
                return this.CheckOrderMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckOrderMessageField, value) != true)) {
                    this.CheckOrderMessageField = value;
                    this.RaisePropertyChanged("CheckOrderMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CounterASN {
            get {
                return this.CounterASNField;
            }
            set {
                if ((this.CounterASNField.Equals(value) != true)) {
                    this.CounterASNField = value;
                    this.RaisePropertyChanged("CounterASN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCardMessage {
            get {
                return this.CreditCardMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardMessageField, value) != true)) {
                    this.CreditCardMessageField = value;
                    this.RaisePropertyChanged("CreditCardMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditHold {
            get {
                return this.CreditHoldField;
            }
            set {
                if ((this.CreditHoldField.Equals(value) != true)) {
                    this.CreditHoldField = value;
                    this.RaisePropertyChanged("CreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CtnPkgCode {
            get {
                return this.CtnPkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CtnPkgCodeField, value) != true)) {
                    this.CtnPkgCodeField = value;
                    this.RaisePropertyChanged("CtnPkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrName {
            get {
                return this.CurrencyCodeCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrNameField, value) != true)) {
                    this.CurrencyCodeCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeDocumentDesc {
            get {
                return this.CurrencyCodeDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeDocumentDescField, value) != true)) {
                    this.CurrencyCodeDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerSendToFSA {
            get {
                return this.CustomerSendToFSAField;
            }
            set {
                if ((this.CustomerSendToFSAField.Equals(value) != true)) {
                    this.CustomerSendToFSAField = value;
                    this.RaisePropertyChanged("CustomerSendToFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTypeDescription {
            get {
                return this.DeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeDescriptionField, value) != true)) {
                    this.DeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("DeliveryTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUOM {
            get {
                return this.DeviceUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUOMField, value) != true)) {
                    this.DeviceUOMField = value;
                    this.RaisePropertyChanged("DeviceUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DigitalSignature {
            get {
                return this.DigitalSignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.DigitalSignatureField, value) != true)) {
                    this.DigitalSignatureField = value;
                    this.RaisePropertyChanged("DigitalSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DispatchReason {
            get {
                return this.DispatchReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DispatchReasonField, value) != true)) {
                    this.DispatchReasonField = value;
                    this.RaisePropertyChanged("DispatchReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayInPrice {
            get {
                return this.DisplayInPriceField;
            }
            set {
                if ((this.DisplayInPriceField.Equals(value) != true)) {
                    this.DisplayInPriceField = value;
                    this.RaisePropertyChanged("DisplayInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoPostUpdate {
            get {
                return this.DoPostUpdateField;
            }
            set {
                if ((this.DoPostUpdateField.Equals(value) != true)) {
                    this.DoPostUpdateField = value;
                    this.RaisePropertyChanged("DoPostUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocCopyNum {
            get {
                return this.DocCopyNumField;
            }
            set {
                if ((this.DocCopyNumField.Equals(value) != true)) {
                    this.DocCopyNumField = value;
                    this.RaisePropertyChanged("DocCopyNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOrderAmt {
            get {
                return this.DocOrderAmtField;
            }
            set {
                if ((this.DocOrderAmtField.Equals(value) != true)) {
                    this.DocOrderAmtField = value;
                    this.RaisePropertyChanged("DocOrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRounding {
            get {
                return this.DocRoundingField;
            }
            set {
                if ((this.DocRoundingField.Equals(value) != true)) {
                    this.DocRoundingField = value;
                    this.RaisePropertyChanged("DocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalDiscount {
            get {
                return this.DocTotalDiscountField;
            }
            set {
                if ((this.DocTotalDiscountField.Equals(value) != true)) {
                    this.DocTotalDiscountField = value;
                    this.RaisePropertyChanged("DocTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalSATax {
            get {
                return this.DocTotalSATaxField;
            }
            set {
                if ((this.DocTotalSATaxField.Equals(value) != true)) {
                    this.DocTotalSATaxField = value;
                    this.RaisePropertyChanged("DocTotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalTax {
            get {
                return this.DocTotalTaxField;
            }
            set {
                if ((this.DocTotalTaxField.Equals(value) != true)) {
                    this.DocTotalTaxField = value;
                    this.RaisePropertyChanged("DocTotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalWHTax {
            get {
                return this.DocTotalWHTaxField;
            }
            set {
                if ((this.DocTotalWHTaxField.Equals(value) != true)) {
                    this.DocTotalWHTaxField = value;
                    this.RaisePropertyChanged("DocTotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWithholdingTaxAmt {
            get {
                return this.DocWithholdingTaxAmtField;
            }
            set {
                if ((this.DocWithholdingTaxAmtField.Equals(value) != true)) {
                    this.DocWithholdingTaxAmtField = value;
                    this.RaisePropertyChanged("DocWithholdingTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPrinted {
            get {
                return this.DocumentPrintedField;
            }
            set {
                if ((this.DocumentPrintedField.Equals(value) != true)) {
                    this.DocumentPrintedField = value;
                    this.RaisePropertyChanged("DocumentPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DspDigitalSignature {
            get {
                return this.DspDigitalSignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.DspDigitalSignatureField, value) != true)) {
                    this.DspDigitalSignatureField = value;
                    this.RaisePropertyChanged("DspDigitalSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIReady {
            get {
                return this.EDIReadyField;
            }
            set {
                if ((this.EDIReadyField.Equals(value) != true)) {
                    this.EDIReadyField = value;
                    this.RaisePropertyChanged("EDIReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIShipToNum {
            get {
                return this.EDIShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIShipToNumField, value) != true)) {
                    this.EDIShipToNumField = value;
                    this.RaisePropertyChanged("EDIShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOrder {
            get {
                return this.ERSOrderField;
            }
            set {
                if ((this.ERSOrderField.Equals(value) != true)) {
                    this.ERSOrderField = value;
                    this.RaisePropertyChanged("ERSOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAssignLegNum {
            get {
                return this.EnableAssignLegNumField;
            }
            set {
                if ((this.EnableAssignLegNumField.Equals(value) != true)) {
                    this.EnableAssignLegNumField = value;
                    this.RaisePropertyChanged("EnableAssignLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePackageControl {
            get {
                return this.EnablePackageControlField;
            }
            set {
                if ((this.EnablePackageControlField.Equals(value) != true)) {
                    this.EnablePackageControlField = value;
                    this.RaisePropertyChanged("EnablePackageControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePhantom {
            get {
                return this.EnablePhantomField;
            }
            set {
                if ((this.EnablePhantomField.Equals(value) != true)) {
                    this.EnablePhantomField = value;
                    this.RaisePropertyChanged("EnablePhantom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableShipped {
            get {
                return this.EnableShippedField;
            }
            set {
                if ((this.EnableShippedField.Equals(value) != true)) {
                    this.EnableShippedField = value;
                    this.RaisePropertyChanged("EnableShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTax {
            get {
                return this.EnableTaxField;
            }
            set {
                if ((this.EnableTaxField.Equals(value) != true)) {
                    this.EnableTaxField = value;
                    this.RaisePropertyChanged("EnableTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTranDocType {
            get {
                return this.EnableTranDocTypeField;
            }
            set {
                if ((this.EnableTranDocTypeField.Equals(value) != true)) {
                    this.EnableTranDocTypeField = value;
                    this.RaisePropertyChanged("EnableTranDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVoidLegNum {
            get {
                return this.EnableVoidLegNumField;
            }
            set {
                if ((this.EnableVoidLegNumField.Equals(value) != true)) {
                    this.EnableVoidLegNumField = value;
                    this.RaisePropertyChanged("EnableVoidLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableWeight {
            get {
                return this.EnableWeightField;
            }
            set {
                if ((this.EnableWeightField.Equals(value) != true)) {
                    this.EnableWeightField = value;
                    this.RaisePropertyChanged("EnableWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalDeliveryNote {
            get {
                return this.ExternalDeliveryNoteField;
            }
            set {
                if ((this.ExternalDeliveryNoteField.Equals(value) != true)) {
                    this.ExternalDeliveryNoteField = value;
                    this.RaisePropertyChanged("ExternalDeliveryNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FirstPrintDate {
            get {
                return this.FirstPrintDateField;
            }
            set {
                if ((this.FirstPrintDateField.Equals(value) != true)) {
                    this.FirstPrintDateField = value;
                    this.RaisePropertyChanged("FirstPrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCode {
            get {
                return this.FreightedShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeField, value) != true)) {
                    this.FreightedShipViaCodeField = value;
                    this.RaisePropertyChanged("FreightedShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCodeDescription {
            get {
                return this.FreightedShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeDescriptionField, value) != true)) {
                    this.FreightedShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("FreightedShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCodeWebDesc {
            get {
                return this.FreightedShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeWebDescField, value) != true)) {
                    this.FreightedShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("FreightedShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromMasterPack {
            get {
                return this.FromMasterPackField;
            }
            set {
                if ((this.FromMasterPackField.Equals(value) != true)) {
                    this.FromMasterPackField = value;
                    this.RaisePropertyChanged("FromMasterPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCartonLines {
            get {
                return this.HasCartonLinesField;
            }
            set {
                if ((this.HasCartonLinesField.Equals(value) != true)) {
                    this.HasCartonLinesField = value;
                    this.RaisePropertyChanged("HasCartonLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegNumCnfg {
            get {
                return this.HasLegNumCnfgField;
            }
            set {
                if ((this.HasLegNumCnfgField.Equals(value) != true)) {
                    this.HasLegNumCnfgField = value;
                    this.RaisePropertyChanged("HasLegNumCnfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazardousShipment {
            get {
                return this.HazardousShipmentField;
            }
            set {
                if ((this.HazardousShipmentField.Equals(value) != true)) {
                    this.HazardousShipmentField = value;
                    this.RaisePropertyChanged("HazardousShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICReceived {
            get {
                return this.ICReceivedField;
            }
            set {
                if ((this.ICReceivedField.Equals(value) != true)) {
                    this.ICReceivedField = value;
                    this.RaisePropertyChanged("ICReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelComment {
            get {
                return this.LabelCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelCommentField, value) != true)) {
                    this.LabelCommentField = value;
                    this.RaisePropertyChanged("LabelComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LastCartonFlag {
            get {
                return this.LastCartonFlagField;
            }
            set {
                if ((this.LastCartonFlagField.Equals(value) != true)) {
                    this.LastCartonFlagField = value;
                    this.RaisePropertyChanged("LastCartonFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MF3BAccount {
            get {
                return this.MF3BAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.MF3BAccountField, value) != true)) {
                    this.MF3BAccountField = value;
                    this.RaisePropertyChanged("MF3BAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCallTag {
            get {
                return this.MFCallTagField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCallTagField, value) != true)) {
                    this.MFCallTagField = value;
                    this.RaisePropertyChanged("MFCallTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDimWeight {
            get {
                return this.MFDimWeightField;
            }
            set {
                if ((this.MFDimWeightField.Equals(value) != true)) {
                    this.MFDimWeightField = value;
                    this.RaisePropertyChanged("MFDimWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDiscFreight {
            get {
                return this.MFDiscFreightField;
            }
            set {
                if ((this.MFDiscFreightField.Equals(value) != true)) {
                    this.MFDiscFreightField = value;
                    this.RaisePropertyChanged("MFDiscFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFFreightAmt {
            get {
                return this.MFFreightAmtField;
            }
            set {
                if ((this.MFFreightAmtField.Equals(value) != true)) {
                    this.MFFreightAmtField = value;
                    this.RaisePropertyChanged("MFFreightAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFOtherAmt {
            get {
                return this.MFOtherAmtField;
            }
            set {
                if ((this.MFOtherAmtField.Equals(value) != true)) {
                    this.MFOtherAmtField = value;
                    this.RaisePropertyChanged("MFOtherAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFOversized {
            get {
                return this.MFOversizedField;
            }
            set {
                if ((this.MFOversizedField.Equals(value) != true)) {
                    this.MFOversizedField = value;
                    this.RaisePropertyChanged("MFOversized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFPickupNum {
            get {
                return this.MFPickupNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFPickupNumField, value) != true)) {
                    this.MFPickupNumField = value;
                    this.RaisePropertyChanged("MFPickupNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTemplate {
            get {
                return this.MFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTemplateField, value) != true)) {
                    this.MFTemplateField = value;
                    this.RaisePropertyChanged("MFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTransNum {
            get {
                return this.MFTransNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTransNumField, value) != true)) {
                    this.MFTransNumField = value;
                    this.RaisePropertyChanged("MFTransNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFUse3B {
            get {
                return this.MFUse3BField;
            }
            set {
                if ((this.MFUse3BField.Equals(value) != true)) {
                    this.MFUse3BField = value;
                    this.RaisePropertyChanged("MFUse3B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFZone {
            get {
                return this.MFZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MFZoneField, value) != true)) {
                    this.MFZoneField = value;
                    this.RaisePropertyChanged("MFZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MXIncoterm {
            get {
                return this.MXIncotermField;
            }
            set {
                if ((object.ReferenceEquals(this.MXIncotermField, value) != true)) {
                    this.MXIncotermField = value;
                    this.RaisePropertyChanged("MXIncoterm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManifestFlag {
            get {
                return this.ManifestFlagField;
            }
            set {
                if ((this.ManifestFlagField.Equals(value) != true)) {
                    this.ManifestFlagField = value;
                    this.RaisePropertyChanged("ManifestFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestHeight {
            get {
                return this.ManifestHeightField;
            }
            set {
                if ((this.ManifestHeightField.Equals(value) != true)) {
                    this.ManifestHeightField = value;
                    this.RaisePropertyChanged("ManifestHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestLength {
            get {
                return this.ManifestLengthField;
            }
            set {
                if ((this.ManifestLengthField.Equals(value) != true)) {
                    this.ManifestLengthField = value;
                    this.RaisePropertyChanged("ManifestLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSizeUOM {
            get {
                return this.ManifestSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSizeUOMField, value) != true)) {
                    this.ManifestSizeUOMField = value;
                    this.RaisePropertyChanged("ManifestSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWeight {
            get {
                return this.ManifestWeightField;
            }
            set {
                if ((this.ManifestWeightField.Equals(value) != true)) {
                    this.ManifestWeightField = value;
                    this.RaisePropertyChanged("ManifestWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWidth {
            get {
                return this.ManifestWidthField;
            }
            set {
                if ((this.ManifestWidthField.Equals(value) != true)) {
                    this.ManifestWidthField = value;
                    this.RaisePropertyChanged("ManifestWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestWtUOM {
            get {
                return this.ManifestWtUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestWtUOMField, value) != true)) {
                    this.ManifestWtUOMField = value;
                    this.RaisePropertyChanged("ManifestWtUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterpackPackNum {
            get {
                return this.MasterpackPackNumField;
            }
            set {
                if ((this.MasterpackPackNumField.Equals(value) != true)) {
                    this.MasterpackPackNumField = value;
                    this.RaisePropertyChanged("MasterpackPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultipleShippers {
            get {
                return this.MultipleShippersField;
            }
            set {
                if ((this.MultipleShippersField.Equals(value) != true)) {
                    this.MultipleShippersField = value;
                    this.RaisePropertyChanged("MultipleShippers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSOrderNum {
            get {
                return this.OTSOrderNumField;
            }
            set {
                if ((this.OTSOrderNumField.Equals(value) != true)) {
                    this.OTSOrderNumField = value;
                    this.RaisePropertyChanged("OTSOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderAmt {
            get {
                return this.OrderAmtField;
            }
            set {
                if ((this.OrderAmtField.Equals(value) != true)) {
                    this.OrderAmtField = value;
                    this.RaisePropertyChanged("OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHold {
            get {
                return this.OrderHoldField;
            }
            set {
                if ((this.OrderHoldField.Equals(value) != true)) {
                    this.OrderHoldField = value;
                    this.RaisePropertyChanged("OrderHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBank {
            get {
                return this.OurBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankField, value) != true)) {
                    this.OurBankField = value;
                    this.RaisePropertyChanged("OurBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankName {
            get {
                return this.OurBankBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankNameField, value) != true)) {
                    this.OurBankBankNameField = value;
                    this.RaisePropertyChanged("OurBankBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankDescription {
            get {
                return this.OurBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankDescriptionField, value) != true)) {
                    this.OurBankDescriptionField = value;
                    this.RaisePropertyChanged("OurBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurSupplierCode {
            get {
                return this.OurSupplierCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OurSupplierCodeField, value) != true)) {
                    this.OurSupplierCodeField = value;
                    this.RaisePropertyChanged("OurSupplierCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PBHoldNoInv {
            get {
                return this.PBHoldNoInvField;
            }
            set {
                if ((this.PBHoldNoInvField.Equals(value) != true)) {
                    this.PBHoldNoInvField = value;
                    this.RaisePropertyChanged("PBHoldNoInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAccount {
            get {
                return this.PayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAccountField, value) != true)) {
                    this.PayAccountField = value;
                    this.RaisePropertyChanged("PayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress1 {
            get {
                return this.PayBTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress1Field, value) != true)) {
                    this.PayBTAddress1Field = value;
                    this.RaisePropertyChanged("PayBTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress2 {
            get {
                return this.PayBTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress2Field, value) != true)) {
                    this.PayBTAddress2Field = value;
                    this.RaisePropertyChanged("PayBTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress3 {
            get {
                return this.PayBTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress3Field, value) != true)) {
                    this.PayBTAddress3Field = value;
                    this.RaisePropertyChanged("PayBTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCity {
            get {
                return this.PayBTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCityField, value) != true)) {
                    this.PayBTCityField = value;
                    this.RaisePropertyChanged("PayBTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCountry {
            get {
                return this.PayBTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCountryField, value) != true)) {
                    this.PayBTCountryField = value;
                    this.RaisePropertyChanged("PayBTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayBTCountryNum {
            get {
                return this.PayBTCountryNumField;
            }
            set {
                if ((this.PayBTCountryNumField.Equals(value) != true)) {
                    this.PayBTCountryNumField = value;
                    this.RaisePropertyChanged("PayBTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTPhone {
            get {
                return this.PayBTPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTPhoneField, value) != true)) {
                    this.PayBTPhoneField = value;
                    this.RaisePropertyChanged("PayBTPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTState {
            get {
                return this.PayBTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTStateField, value) != true)) {
                    this.PayBTStateField = value;
                    this.RaisePropertyChanged("PayBTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTZip {
            get {
                return this.PayBTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTZipField, value) != true)) {
                    this.PayBTZipField = value;
                    this.RaisePropertyChanged("PayBTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayFlag {
            get {
                return this.PayFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PayFlagField, value) != true)) {
                    this.PayFlagField = value;
                    this.RaisePropertyChanged("PayFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomCasesExist {
            get {
                return this.PhantomCasesExistField;
            }
            set {
                if ((this.PhantomCasesExistField.Equals(value) != true)) {
                    this.PhantomCasesExistField = value;
                    this.RaisePropertyChanged("PhantomCasesExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomPack {
            get {
                return this.PhantomPackField;
            }
            set {
                if ((this.PhantomPackField.Equals(value) != true)) {
                    this.PhantomPackField = value;
                    this.RaisePropertyChanged("PhantomPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgClass {
            get {
                return this.PkgClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgClassField, value) != true)) {
                    this.PkgClassField = value;
                    this.RaisePropertyChanged("PkgClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgHeightEnable {
            get {
                return this.PkgHeightEnableField;
            }
            set {
                if ((this.PkgHeightEnableField.Equals(value) != true)) {
                    this.PkgHeightEnableField = value;
                    this.RaisePropertyChanged("PkgHeightEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgLenEnable {
            get {
                return this.PkgLenEnableField;
            }
            set {
                if ((this.PkgLenEnableField.Equals(value) != true)) {
                    this.PkgLenEnableField = value;
                    this.RaisePropertyChanged("PkgLenEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgSizeUOM {
            get {
                return this.PkgSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgSizeUOMField, value) != true)) {
                    this.PkgSizeUOMField = value;
                    this.RaisePropertyChanged("PkgSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgSizeUOMEnable {
            get {
                return this.PkgSizeUOMEnableField;
            }
            set {
                if ((this.PkgSizeUOMEnableField.Equals(value) != true)) {
                    this.PkgSizeUOMEnableField = value;
                    this.RaisePropertyChanged("PkgSizeUOMEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgWidthEnable {
            get {
                return this.PkgWidthEnableField;
            }
            set {
                if ((this.PkgWidthEnableField.Equals(value) != true)) {
                    this.PkgWidthEnableField = value;
                    this.RaisePropertyChanged("PkgWidthEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostUpdMessage {
            get {
                return this.PostUpdMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.PostUpdMessageField, value) != true)) {
                    this.PostUpdMessageField = value;
                    this.RaisePropertyChanged("PostUpdMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QSUseBOL {
            get {
                return this.QSUseBOLField;
            }
            set {
                if ((this.QSUseBOLField.Equals(value) != true)) {
                    this.QSUseBOLField = value;
                    this.RaisePropertyChanged("QSUseBOL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QSUseCO {
            get {
                return this.QSUseCOField;
            }
            set {
                if ((this.QSUseCOField.Equals(value) != true)) {
                    this.QSUseCOField = value;
                    this.RaisePropertyChanged("QSUseCO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QSUseIntl {
            get {
                return this.QSUseIntlField;
            }
            set {
                if ((this.QSUseIntlField.Equals(value) != true)) {
                    this.QSUseIntlField = value;
                    this.RaisePropertyChanged("QSUseIntl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoiceChanged {
            get {
                return this.ReadyToInvoiceChangedField;
            }
            set {
                if ((this.ReadyToInvoiceChangedField.Equals(value) != true)) {
                    this.ReadyToInvoiceChangedField = value;
                    this.RaisePropertyChanged("ReadyToInvoiceChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReconcileQty {
            get {
                return this.ReconcileQtyField;
            }
            set {
                if ((this.ReconcileQtyField.Equals(value) != true)) {
                    this.ReconcileQtyField = value;
                    this.RaisePropertyChanged("ReconcileQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplicateCount {
            get {
                return this.ReplicateCountField;
            }
            set {
                if ((this.ReplicateCountField.Equals(value) != true)) {
                    this.ReplicateCountField = value;
                    this.RaisePropertyChanged("ReplicateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplicatedFrom {
            get {
                return this.ReplicatedFromField;
            }
            set {
                if ((this.ReplicatedFromField.Equals(value) != true)) {
                    this.ReplicatedFromField = value;
                    this.RaisePropertyChanged("ReplicatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplicatedStat {
            get {
                return this.ReplicatedStatField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplicatedStatField, value) != true)) {
                    this.ReplicatedStatField = value;
                    this.RaisePropertyChanged("ReplicatedStat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rounding {
            get {
                return this.RoundingField;
            }
            set {
                if ((this.RoundingField.Equals(value) != true)) {
                    this.RoundingField = value;
                    this.RaisePropertyChanged("Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OrderAmt {
            get {
                return this.Rpt1OrderAmtField;
            }
            set {
                if ((this.Rpt1OrderAmtField.Equals(value) != true)) {
                    this.Rpt1OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt1OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Rounding {
            get {
                return this.Rpt1RoundingField;
            }
            set {
                if ((this.Rpt1RoundingField.Equals(value) != true)) {
                    this.Rpt1RoundingField = value;
                    this.RaisePropertyChanged("Rpt1Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalDiscount {
            get {
                return this.Rpt1TotalDiscountField;
            }
            set {
                if ((this.Rpt1TotalDiscountField.Equals(value) != true)) {
                    this.Rpt1TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt1TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalSATax {
            get {
                return this.Rpt1TotalSATaxField;
            }
            set {
                if ((this.Rpt1TotalSATaxField.Equals(value) != true)) {
                    this.Rpt1TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalTax {
            get {
                return this.Rpt1TotalTaxField;
            }
            set {
                if ((this.Rpt1TotalTaxField.Equals(value) != true)) {
                    this.Rpt1TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalWHTax {
            get {
                return this.Rpt1TotalWHTaxField;
            }
            set {
                if ((this.Rpt1TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt1TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OrderAmt {
            get {
                return this.Rpt2OrderAmtField;
            }
            set {
                if ((this.Rpt2OrderAmtField.Equals(value) != true)) {
                    this.Rpt2OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt2OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Rounding {
            get {
                return this.Rpt2RoundingField;
            }
            set {
                if ((this.Rpt2RoundingField.Equals(value) != true)) {
                    this.Rpt2RoundingField = value;
                    this.RaisePropertyChanged("Rpt2Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalDiscount {
            get {
                return this.Rpt2TotalDiscountField;
            }
            set {
                if ((this.Rpt2TotalDiscountField.Equals(value) != true)) {
                    this.Rpt2TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt2TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalSATax {
            get {
                return this.Rpt2TotalSATaxField;
            }
            set {
                if ((this.Rpt2TotalSATaxField.Equals(value) != true)) {
                    this.Rpt2TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalTax {
            get {
                return this.Rpt2TotalTaxField;
            }
            set {
                if ((this.Rpt2TotalTaxField.Equals(value) != true)) {
                    this.Rpt2TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalWHTax {
            get {
                return this.Rpt2TotalWHTaxField;
            }
            set {
                if ((this.Rpt2TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt2TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OrderAmt {
            get {
                return this.Rpt3OrderAmtField;
            }
            set {
                if ((this.Rpt3OrderAmtField.Equals(value) != true)) {
                    this.Rpt3OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt3OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Rounding {
            get {
                return this.Rpt3RoundingField;
            }
            set {
                if ((this.Rpt3RoundingField.Equals(value) != true)) {
                    this.Rpt3RoundingField = value;
                    this.RaisePropertyChanged("Rpt3Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalDiscount {
            get {
                return this.Rpt3TotalDiscountField;
            }
            set {
                if ((this.Rpt3TotalDiscountField.Equals(value) != true)) {
                    this.Rpt3TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt3TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalSATax {
            get {
                return this.Rpt3TotalSATaxField;
            }
            set {
                if ((this.Rpt3TotalSATaxField.Equals(value) != true)) {
                    this.Rpt3TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalTax {
            get {
                return this.Rpt3TotalTaxField;
            }
            set {
                if ((this.Rpt3TotalTaxField.Equals(value) != true)) {
                    this.Rpt3TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalWHTax {
            get {
                return this.Rpt3TotalWHTaxField;
            }
            set {
                if ((this.Rpt3TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt3TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNumber {
            get {
                return this.ScheduleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNumberField, value) != true)) {
                    this.ScheduleNumberField = value;
                    this.RaisePropertyChanged("ScheduleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendShipment {
            get {
                return this.SendShipmentField;
            }
            set {
                if ((this.SendShipmentField.Equals(value) != true)) {
                    this.SendShipmentField = value;
                    this.RaisePropertyChanged("SendShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipGroup {
            get {
                return this.ShipGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipGroupField, value) != true)) {
                    this.ShipGroupField = value;
                    this.RaisePropertyChanged("ShipGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipLog {
            get {
                return this.ShipLogField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipLogField, value) != true)) {
                    this.ShipLogField = value;
                    this.RaisePropertyChanged("ShipLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipOvers {
            get {
                return this.ShipOversField;
            }
            set {
                if ((this.ShipOversField.Equals(value) != true)) {
                    this.ShipOversField = value;
                    this.RaisePropertyChanged("ShipOvers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipPerson {
            get {
                return this.ShipPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipPersonField, value) != true)) {
                    this.ShipPersonField = value;
                    this.RaisePropertyChanged("ShipPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustBTName {
            get {
                return this.ShipToCustBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustBTNameField, value) != true)) {
                    this.ShipToCustBTNameField = value;
                    this.RaisePropertyChanged("ShipToCustBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustCustID {
            get {
                return this.ShipToCustCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustCustIDField, value) != true)) {
                    this.ShipToCustCustIDField = value;
                    this.RaisePropertyChanged("ShipToCustCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustName {
            get {
                return this.ShipToCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNameField, value) != true)) {
                    this.ShipToCustNameField = value;
                    this.RaisePropertyChanged("ShipToCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNumName {
            get {
                return this.ShipToNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumNameField, value) != true)) {
                    this.ShipToNumNameField = value;
                    this.RaisePropertyChanged("ShipToNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignedBy {
            get {
                return this.SignedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedByField, value) != true)) {
                    this.SignedByField = value;
                    this.RaisePropertyChanged("SignedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SignedOn {
            get {
                return this.SignedOnField;
            }
            set {
                if ((this.SignedOnField.Equals(value) != true)) {
                    this.SignedOnField = value;
                    this.RaisePropertyChanged("SignedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SlipStatus {
            get {
                return this.SlipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SlipStatusField, value) != true)) {
                    this.SlipStatusField = value;
                    this.RaisePropertyChanged("SlipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StageShipped {
            get {
                return this.StageShippedField;
            }
            set {
                if ((this.StageShippedField.Equals(value) != true)) {
                    this.StageShippedField = value;
                    this.RaisePropertyChanged("StageShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StagingReq {
            get {
                return this.StagingReqField;
            }
            set {
                if ((this.StagingReqField.Equals(value) != true)) {
                    this.StagingReqField = value;
                    this.RaisePropertyChanged("StagingReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusChgMessage {
            get {
                return this.StatusChgMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusChgMessageField, value) != true)) {
                    this.StatusChgMessageField = value;
                    this.RaisePropertyChanged("StatusChgMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxCalcDate {
            get {
                return this.TaxCalcDateField;
            }
            set {
                if ((this.TaxCalcDateField.Equals(value) != true)) {
                    this.TaxCalcDateField = value;
                    this.RaisePropertyChanged("TaxCalcDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxCalculated {
            get {
                return this.TaxCalculatedField;
            }
            set {
                if ((this.TaxCalculatedField.Equals(value) != true)) {
                    this.TaxCalculatedField = value;
                    this.RaisePropertyChanged("TaxCalculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDiscount {
            get {
                return this.TotalDiscountField;
            }
            set {
                if ((this.TotalDiscountField.Equals(value) != true)) {
                    this.TotalDiscountField = value;
                    this.RaisePropertyChanged("TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSATax {
            get {
                return this.TotalSATaxField;
            }
            set {
                if ((this.TotalSATaxField.Equals(value) != true)) {
                    this.TotalSATaxField = value;
                    this.RaisePropertyChanged("TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWHTax {
            get {
                return this.TotalWHTaxField;
            }
            set {
                if ((this.TotalWHTaxField.Equals(value) != true)) {
                    this.TotalWHTaxField = value;
                    this.RaisePropertyChanged("TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WIPackSlipCreated {
            get {
                return this.WIPackSlipCreatedField;
            }
            set {
                if ((this.WIPackSlipCreatedField.Equals(value) != true)) {
                    this.WIPackSlipCreatedField = value;
                    this.RaisePropertyChanged("WIPackSlipCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WayBillNbr {
            get {
                return this.WayBillNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.WayBillNbrField, value) != true)) {
                    this.WayBillNbrField = value;
                    this.RaisePropertyChanged("WayBillNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPackNum {
            get {
                return this.XRefPackNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPackNumField, value) != true)) {
                    this.XRefPackNumField = value;
                    this.RaisePropertyChanged("XRefPackNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadAttchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipHeadAttchRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrawDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrawingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ForeignSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDMDocIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XFileRefNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeID {
            get {
                return this.DocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeIDField, value) != true)) {
                    this.DocTypeIDField = value;
                    this.RaisePropertyChanged("DocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawDesc {
            get {
                return this.DrawDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DrawDescField, value) != true)) {
                    this.DrawDescField = value;
                    this.RaisePropertyChanged("DrawDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawingSeq {
            get {
                return this.DrawingSeqField;
            }
            set {
                if ((this.DrawingSeqField.Equals(value) != true)) {
                    this.DrawingSeqField = value;
                    this.RaisePropertyChanged("DrawingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ForeignSysRowID {
            get {
                return this.ForeignSysRowIDField;
            }
            set {
                if ((this.ForeignSysRowIDField.Equals(value) != true)) {
                    this.ForeignSysRowIDField = value;
                    this.RaisePropertyChanged("ForeignSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDMDocID {
            get {
                return this.PDMDocIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PDMDocIDField, value) != true)) {
                    this.PDMDocIDField = value;
                    this.RaisePropertyChanged("PDMDocID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XFileRefNum {
            get {
                return this.XFileRefNumField;
            }
            set {
                if ((this.XFileRefNumField.Equals(value) != true)) {
                    this.XFileRefNumField = value;
                    this.RaisePropertyChanged("XFileRefNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipMiscRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipMiscRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipMiscRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DspMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InMiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MiscAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackNumShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeqNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceDBRecidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WIIsAutoCreatedMiscField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDateTime {
            get {
                return this.ChangeDateTimeField;
            }
            set {
                if ((this.ChangeDateTimeField.Equals(value) != true)) {
                    this.ChangeDateTimeField = value;
                    this.RaisePropertyChanged("ChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipMiscRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocMiscAmt {
            get {
                return this.DocMiscAmtField;
            }
            set {
                if ((this.DocMiscAmtField.Equals(value) != true)) {
                    this.DocMiscAmtField = value;
                    this.RaisePropertyChanged("DocMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DspMiscAmt {
            get {
                return this.DspMiscAmtField;
            }
            set {
                if ((this.DspMiscAmtField.Equals(value) != true)) {
                    this.DspMiscAmtField = value;
                    this.RaisePropertyChanged("DspMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InMiscAmt {
            get {
                return this.InMiscAmtField;
            }
            set {
                if ((this.InMiscAmtField.Equals(value) != true)) {
                    this.InMiscAmtField = value;
                    this.RaisePropertyChanged("InMiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MiscAmt {
            get {
                return this.MiscAmtField;
            }
            set {
                if ((this.MiscAmtField.Equals(value) != true)) {
                    this.MiscAmtField = value;
                    this.RaisePropertyChanged("MiscAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCode {
            get {
                return this.MiscCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeField, value) != true)) {
                    this.MiscCodeField = value;
                    this.RaisePropertyChanged("MiscCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscCodeDescription {
            get {
                return this.MiscCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscCodeDescriptionField, value) != true)) {
                    this.MiscCodeDescriptionField = value;
                    this.RaisePropertyChanged("MiscCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackNumShipStatus {
            get {
                return this.PackNumShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PackNumShipStatusField, value) != true)) {
                    this.PackNumShipStatusField = value;
                    this.RaisePropertyChanged("PackNumShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percentage {
            get {
                return this.PercentageField;
            }
            set {
                if ((this.PercentageField.Equals(value) != true)) {
                    this.PercentageField = value;
                    this.RaisePropertyChanged("Percentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeqNum {
            get {
                return this.SeqNumField;
            }
            set {
                if ((this.SeqNumField.Equals(value) != true)) {
                    this.SeqNumField = value;
                    this.RaisePropertyChanged("SeqNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceDBRecid {
            get {
                return this.SourceDBRecidField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceDBRecidField, value) != true)) {
                    this.SourceDBRecidField = value;
                    this.RaisePropertyChanged("SourceDBRecid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WIIsAutoCreatedMisc {
            get {
                return this.WIIsAutoCreatedMiscField;
            }
            set {
                if ((this.WIIsAutoCreatedMiscField.Equals(value) != true)) {
                    this.WIIsAutoCreatedMiscField = value;
                    this.RaisePropertyChanged("WIIsAutoCreatedMisc");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipTaxSumRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipTaxSumRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipTaxSumRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CurrencySwitchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDisplaySymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLIneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3ReportableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxableAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxableAmtField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipTaxSumRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurrencySwitch {
            get {
                return this.CurrencySwitchField;
            }
            set {
                if ((this.CurrencySwitchField.Equals(value) != true)) {
                    this.CurrencySwitchField = value;
                    this.RaisePropertyChanged("CurrencySwitch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplaySymbol {
            get {
                return this.DisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplaySymbolField, value) != true)) {
                    this.DisplaySymbolField = value;
                    this.RaisePropertyChanged("DisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDisplaySymbol {
            get {
                return this.DocDisplaySymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDisplaySymbolField, value) != true)) {
                    this.DocDisplaySymbolField = value;
                    this.RaisePropertyChanged("DocDisplaySymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocReportableAmt {
            get {
                return this.DocReportableAmtField;
            }
            set {
                if ((this.DocReportableAmtField.Equals(value) != true)) {
                    this.DocReportableAmtField = value;
                    this.RaisePropertyChanged("DocReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxableAmt {
            get {
                return this.DocTaxableAmtField;
            }
            set {
                if ((this.DocTaxableAmtField.Equals(value) != true)) {
                    this.DocTaxableAmtField = value;
                    this.RaisePropertyChanged("DocTaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLIne {
            get {
                return this.PackLIneField;
            }
            set {
                if ((this.PackLIneField.Equals(value) != true)) {
                    this.PackLIneField = value;
                    this.RaisePropertyChanged("PackLIne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Percent {
            get {
                return this.PercentField;
            }
            set {
                if ((this.PercentField.Equals(value) != true)) {
                    this.PercentField = value;
                    this.RaisePropertyChanged("Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCode {
            get {
                return this.RateCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeField, value) != true)) {
                    this.RateCodeField = value;
                    this.RaisePropertyChanged("RateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateCodeDesc {
            get {
                return this.RateCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RateCodeDescField, value) != true)) {
                    this.RateCodeDescField = value;
                    this.RaisePropertyChanged("RateCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReportableAmt {
            get {
                return this.ReportableAmtField;
            }
            set {
                if ((this.ReportableAmtField.Equals(value) != true)) {
                    this.ReportableAmtField = value;
                    this.RaisePropertyChanged("ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1ReportableAmt {
            get {
                return this.Rpt1ReportableAmtField;
            }
            set {
                if ((this.Rpt1ReportableAmtField.Equals(value) != true)) {
                    this.Rpt1ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt1ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxableAmt {
            get {
                return this.Rpt1TaxableAmtField;
            }
            set {
                if ((this.Rpt1TaxableAmtField.Equals(value) != true)) {
                    this.Rpt1TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2ReportableAmt {
            get {
                return this.Rpt2ReportableAmtField;
            }
            set {
                if ((this.Rpt2ReportableAmtField.Equals(value) != true)) {
                    this.Rpt2ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt2ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxableAmt {
            get {
                return this.Rpt2TaxableAmtField;
            }
            set {
                if ((this.Rpt2TaxableAmtField.Equals(value) != true)) {
                    this.Rpt2TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3ReportableAmt {
            get {
                return this.Rpt3ReportableAmtField;
            }
            set {
                if ((this.Rpt3ReportableAmtField.Equals(value) != true)) {
                    this.Rpt3ReportableAmtField = value;
                    this.RaisePropertyChanged("Rpt3ReportableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxableAmt {
            get {
                return this.Rpt3TaxableAmtField;
            }
            set {
                if ((this.Rpt3TaxableAmtField.Equals(value) != true)) {
                    this.Rpt3TaxableAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxableAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxDescription {
            get {
                return this.TaxDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxDescriptionField, value) != true)) {
                    this.TaxDescriptionField = value;
                    this.RaisePropertyChanged("TaxDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxableAmt {
            get {
                return this.TaxableAmtField;
            }
            set {
                if ((this.TaxableAmtField.Equals(value) != true)) {
                    this.TaxableAmtField = value;
                    this.RaisePropertyChanged("TaxableAmt");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipUPSRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipUPSRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipUPSRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeliveryNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FailureNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipmentNotifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UPSQVSeqField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipUPSRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeliveryNotify {
            get {
                return this.DeliveryNotifyField;
            }
            set {
                if ((this.DeliveryNotifyField.Equals(value) != true)) {
                    this.DeliveryNotifyField = value;
                    this.RaisePropertyChanged("DeliveryNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableQuantumView {
            get {
                return this.EnableQuantumViewField;
            }
            set {
                if ((this.EnableQuantumViewField.Equals(value) != true)) {
                    this.EnableQuantumViewField = value;
                    this.RaisePropertyChanged("EnableQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FailureNotify {
            get {
                return this.FailureNotifyField;
            }
            set {
                if ((this.FailureNotifyField.Equals(value) != true)) {
                    this.FailureNotifyField = value;
                    this.RaisePropertyChanged("FailureNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipmentNotify {
            get {
                return this.ShipmentNotifyField;
            }
            set {
                if ((this.ShipmentNotifyField.Equals(value) != true)) {
                    this.ShipmentNotifyField = value;
                    this.RaisePropertyChanged("ShipmentNotify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UPSQVSeq {
            get {
                return this.UPSQVSeqField;
            }
            set {
                if ((this.UPSQVSeqField.Equals(value) != true)) {
                    this.UPSQVSeqField = value;
                    this.RaisePropertyChanged("UPSQVSeq");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadListRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipHeadListRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AddlHdlgFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowChgAfterPrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoPrintReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonContentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CartonStageNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CertOfOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadListRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CommercialInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CounterASNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CreditHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CtnPkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeCurrencyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyCodeDocumentDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisplayInPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocOrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocRoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocTotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DocWithholdingTaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EDIReadyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ERSOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAssignLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePhantomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableShippedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTranDocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableVoidLegNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExternalDeliveryNoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCompNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FFCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FFZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCartonLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLegNumCnfgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazardousShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ICReceivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndividualPackIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IntrntlShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LastCartonFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LetterOfInstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MF3BAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCallTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDimWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDiscFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFFreightAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFOtherAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFOversizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFPickupNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTransNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFUse3BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ManifestFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ManifestWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestWtUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterpackPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultipleShippersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStdPkgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OTSOrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankBankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurBankDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PBHoldNoInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackToMasterpackDtlPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PayBTCountryNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayBTZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomCasesExistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgHeightEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgLenEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgSizeUOMEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgWidthEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RateGrpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReconcileQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplicateCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReplicatedFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReplicatedStatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt1TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt2TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3OrderAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3RoundingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rpt3TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendShipmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipExprtDeclartnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StagingReqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaxCalcDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxCalculatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxRegionDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSATaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalWHTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVMemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPSQVShipFromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UPSQuantumViewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseOTSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WayBillNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPackNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddlHdlgFlag {
            get {
                return this.AddlHdlgFlagField;
            }
            set {
                if ((this.AddlHdlgFlagField.Equals(value) != true)) {
                    this.AddlHdlgFlagField = value;
                    this.RaisePropertyChanged("AddlHdlgFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrList {
            get {
                return this.AddrListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrListField, value) != true)) {
                    this.AddrListField = value;
                    this.RaisePropertyChanged("AddrList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowChgAfterPrint {
            get {
                return this.AllowChgAfterPrintField;
            }
            set {
                if ((this.AllowChgAfterPrintField.Equals(value) != true)) {
                    this.AllowChgAfterPrintField = value;
                    this.RaisePropertyChanged("AllowChgAfterPrint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoPrintReady {
            get {
                return this.AutoPrintReadyField;
            }
            set {
                if ((this.AutoPrintReadyField.Equals(value) != true)) {
                    this.AutoPrintReadyField = value;
                    this.RaisePropertyChanged("AutoPrintReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLLine {
            get {
                return this.BOLLineField;
            }
            set {
                if ((this.BOLLineField.Equals(value) != true)) {
                    this.BOLLineField = value;
                    this.RaisePropertyChanged("BOLLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLNum {
            get {
                return this.BOLNumField;
            }
            set {
                if ((this.BOLNumField.Equals(value) != true)) {
                    this.BOLNumField = value;
                    this.RaisePropertyChanged("BOLNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillAddr {
            get {
                return this.BillAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.BillAddrField, value) != true)) {
                    this.BillAddrField = value;
                    this.RaisePropertyChanged("BillAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonContentValue {
            get {
                return this.CartonContentValueField;
            }
            set {
                if ((this.CartonContentValueField.Equals(value) != true)) {
                    this.CartonContentValueField = value;
                    this.RaisePropertyChanged("CartonContentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CartonStageNbr {
            get {
                return this.CartonStageNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CartonStageNbrField, value) != true)) {
                    this.CartonStageNbrField = value;
                    this.RaisePropertyChanged("CartonStageNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CertOfOrigin {
            get {
                return this.CertOfOriginField;
            }
            set {
                if ((this.CertOfOriginField.Equals(value) != true)) {
                    this.CertOfOriginField = value;
                    this.RaisePropertyChanged("CertOfOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedBy {
            get {
                return this.ChangedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByField, value) != true)) {
                    this.ChangedByField = value;
                    this.RaisePropertyChanged("ChangedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommercialInvoice {
            get {
                return this.CommercialInvoiceField;
            }
            set {
                if ((this.CommercialInvoiceField.Equals(value) != true)) {
                    this.CommercialInvoiceField = value;
                    this.RaisePropertyChanged("CommercialInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CounterASN {
            get {
                return this.CounterASNField;
            }
            set {
                if ((this.CounterASNField.Equals(value) != true)) {
                    this.CounterASNField = value;
                    this.RaisePropertyChanged("CounterASN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CreditHold {
            get {
                return this.CreditHoldField;
            }
            set {
                if ((this.CreditHoldField.Equals(value) != true)) {
                    this.CreditHoldField = value;
                    this.RaisePropertyChanged("CreditHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CtnPkgCode {
            get {
                return this.CtnPkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CtnPkgCodeField, value) != true)) {
                    this.CtnPkgCodeField = value;
                    this.RaisePropertyChanged("CtnPkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode {
            get {
                return this.CurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeField, value) != true)) {
                    this.CurrencyCodeField = value;
                    this.RaisePropertyChanged("CurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrDesc {
            get {
                return this.CurrencyCodeCurrDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrDescField, value) != true)) {
                    this.CurrencyCodeCurrDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrName {
            get {
                return this.CurrencyCodeCurrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrNameField, value) != true)) {
                    this.CurrencyCodeCurrNameField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrSymbol {
            get {
                return this.CurrencyCodeCurrSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrSymbolField, value) != true)) {
                    this.CurrencyCodeCurrSymbolField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeCurrencyID {
            get {
                return this.CurrencyCodeCurrencyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeCurrencyIDField, value) != true)) {
                    this.CurrencyCodeCurrencyIDField = value;
                    this.RaisePropertyChanged("CurrencyCodeCurrencyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCodeDocumentDesc {
            get {
                return this.CurrencyCodeDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyCodeDocumentDescField, value) != true)) {
                    this.CurrencyCodeDocumentDescField = value;
                    this.RaisePropertyChanged("CurrencyCodeDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerBTName {
            get {
                return this.CustomerBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerBTNameField, value) != true)) {
                    this.CustomerBTNameField = value;
                    this.RaisePropertyChanged("CustomerBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCustID {
            get {
                return this.CustomerCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCustIDField, value) != true)) {
                    this.CustomerCustIDField = value;
                    this.RaisePropertyChanged("CustomerCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryConf {
            get {
                return this.DeliveryConfField;
            }
            set {
                if ((this.DeliveryConfField.Equals(value) != true)) {
                    this.DeliveryConfField = value;
                    this.RaisePropertyChanged("DeliveryConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTypeDescription {
            get {
                return this.DeliveryTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeDescriptionField, value) != true)) {
                    this.DeliveryTypeDescriptionField = value;
                    this.RaisePropertyChanged("DeliveryTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceUOM {
            get {
                return this.DeviceUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceUOMField, value) != true)) {
                    this.DeviceUOMField = value;
                    this.RaisePropertyChanged("DeviceUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisplayInPrice {
            get {
                return this.DisplayInPriceField;
            }
            set {
                if ((this.DisplayInPriceField.Equals(value) != true)) {
                    this.DisplayInPriceField = value;
                    this.RaisePropertyChanged("DisplayInPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocOrderAmt {
            get {
                return this.DocOrderAmtField;
            }
            set {
                if ((this.DocOrderAmtField.Equals(value) != true)) {
                    this.DocOrderAmtField = value;
                    this.RaisePropertyChanged("DocOrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocRounding {
            get {
                return this.DocRoundingField;
            }
            set {
                if ((this.DocRoundingField.Equals(value) != true)) {
                    this.DocRoundingField = value;
                    this.RaisePropertyChanged("DocRounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTaxAmt {
            get {
                return this.DocTaxAmtField;
            }
            set {
                if ((this.DocTaxAmtField.Equals(value) != true)) {
                    this.DocTaxAmtField = value;
                    this.RaisePropertyChanged("DocTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalDiscount {
            get {
                return this.DocTotalDiscountField;
            }
            set {
                if ((this.DocTotalDiscountField.Equals(value) != true)) {
                    this.DocTotalDiscountField = value;
                    this.RaisePropertyChanged("DocTotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalSATax {
            get {
                return this.DocTotalSATaxField;
            }
            set {
                if ((this.DocTotalSATaxField.Equals(value) != true)) {
                    this.DocTotalSATaxField = value;
                    this.RaisePropertyChanged("DocTotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalTax {
            get {
                return this.DocTotalTaxField;
            }
            set {
                if ((this.DocTotalTaxField.Equals(value) != true)) {
                    this.DocTotalTaxField = value;
                    this.RaisePropertyChanged("DocTotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocTotalWHTax {
            get {
                return this.DocTotalWHTaxField;
            }
            set {
                if ((this.DocTotalWHTaxField.Equals(value) != true)) {
                    this.DocTotalWHTaxField = value;
                    this.RaisePropertyChanged("DocTotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DocWithholdingTaxAmt {
            get {
                return this.DocWithholdingTaxAmtField;
            }
            set {
                if ((this.DocWithholdingTaxAmtField.Equals(value) != true)) {
                    this.DocWithholdingTaxAmtField = value;
                    this.RaisePropertyChanged("DocWithholdingTaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPrinted {
            get {
                return this.DocumentPrintedField;
            }
            set {
                if ((this.DocumentPrintedField.Equals(value) != true)) {
                    this.DocumentPrintedField = value;
                    this.RaisePropertyChanged("DocumentPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EDIReady {
            get {
                return this.EDIReadyField;
            }
            set {
                if ((this.EDIReadyField.Equals(value) != true)) {
                    this.EDIReadyField = value;
                    this.RaisePropertyChanged("EDIReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ERSOrder {
            get {
                return this.ERSOrderField;
            }
            set {
                if ((this.ERSOrderField.Equals(value) != true)) {
                    this.ERSOrderField = value;
                    this.RaisePropertyChanged("ERSOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAssignLegNum {
            get {
                return this.EnableAssignLegNumField;
            }
            set {
                if ((this.EnableAssignLegNumField.Equals(value) != true)) {
                    this.EnableAssignLegNumField = value;
                    this.RaisePropertyChanged("EnableAssignLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePhantom {
            get {
                return this.EnablePhantomField;
            }
            set {
                if ((this.EnablePhantomField.Equals(value) != true)) {
                    this.EnablePhantomField = value;
                    this.RaisePropertyChanged("EnablePhantom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableShipped {
            get {
                return this.EnableShippedField;
            }
            set {
                if ((this.EnableShippedField.Equals(value) != true)) {
                    this.EnableShippedField = value;
                    this.RaisePropertyChanged("EnableShipped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTax {
            get {
                return this.EnableTaxField;
            }
            set {
                if ((this.EnableTaxField.Equals(value) != true)) {
                    this.EnableTaxField = value;
                    this.RaisePropertyChanged("EnableTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTranDocType {
            get {
                return this.EnableTranDocTypeField;
            }
            set {
                if ((this.EnableTranDocTypeField.Equals(value) != true)) {
                    this.EnableTranDocTypeField = value;
                    this.RaisePropertyChanged("EnableTranDocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVoidLegNum {
            get {
                return this.EnableVoidLegNumField;
            }
            set {
                if ((this.EnableVoidLegNumField.Equals(value) != true)) {
                    this.EnableVoidLegNumField = value;
                    this.RaisePropertyChanged("EnableVoidLegNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableWeight {
            get {
                return this.EnableWeightField;
            }
            set {
                if ((this.EnableWeightField.Equals(value) != true)) {
                    this.EnableWeightField = value;
                    this.RaisePropertyChanged("EnableWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExternalDeliveryNote {
            get {
                return this.ExternalDeliveryNoteField;
            }
            set {
                if ((this.ExternalDeliveryNoteField.Equals(value) != true)) {
                    this.ExternalDeliveryNoteField = value;
                    this.RaisePropertyChanged("ExternalDeliveryNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress1 {
            get {
                return this.FFAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress1Field, value) != true)) {
                    this.FFAddress1Field = value;
                    this.RaisePropertyChanged("FFAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress2 {
            get {
                return this.FFAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress2Field, value) != true)) {
                    this.FFAddress2Field = value;
                    this.RaisePropertyChanged("FFAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFAddress3 {
            get {
                return this.FFAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.FFAddress3Field, value) != true)) {
                    this.FFAddress3Field = value;
                    this.RaisePropertyChanged("FFAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCity {
            get {
                return this.FFCityField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCityField, value) != true)) {
                    this.FFCityField = value;
                    this.RaisePropertyChanged("FFCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCompName {
            get {
                return this.FFCompNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCompNameField, value) != true)) {
                    this.FFCompNameField = value;
                    this.RaisePropertyChanged("FFCompName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFContact {
            get {
                return this.FFContactField;
            }
            set {
                if ((object.ReferenceEquals(this.FFContactField, value) != true)) {
                    this.FFContactField = value;
                    this.RaisePropertyChanged("FFContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFCountry {
            get {
                return this.FFCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FFCountryField, value) != true)) {
                    this.FFCountryField = value;
                    this.RaisePropertyChanged("FFCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FFCountryNum {
            get {
                return this.FFCountryNumField;
            }
            set {
                if ((this.FFCountryNumField.Equals(value) != true)) {
                    this.FFCountryNumField = value;
                    this.RaisePropertyChanged("FFCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFID {
            get {
                return this.FFIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FFIDField, value) != true)) {
                    this.FFIDField = value;
                    this.RaisePropertyChanged("FFID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFPhoneNum {
            get {
                return this.FFPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FFPhoneNumField, value) != true)) {
                    this.FFPhoneNumField = value;
                    this.RaisePropertyChanged("FFPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFState {
            get {
                return this.FFStateField;
            }
            set {
                if ((object.ReferenceEquals(this.FFStateField, value) != true)) {
                    this.FFStateField = value;
                    this.RaisePropertyChanged("FFState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FFZip {
            get {
                return this.FFZipField;
            }
            set {
                if ((object.ReferenceEquals(this.FFZipField, value) != true)) {
                    this.FFZipField = value;
                    this.RaisePropertyChanged("FFZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCode {
            get {
                return this.FreightedShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeField, value) != true)) {
                    this.FreightedShipViaCodeField = value;
                    this.RaisePropertyChanged("FreightedShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCodeDescription {
            get {
                return this.FreightedShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeDescriptionField, value) != true)) {
                    this.FreightedShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("FreightedShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCodeWebDesc {
            get {
                return this.FreightedShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeWebDescField, value) != true)) {
                    this.FreightedShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("FreightedShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCartonLines {
            get {
                return this.HasCartonLinesField;
            }
            set {
                if ((this.HasCartonLinesField.Equals(value) != true)) {
                    this.HasCartonLinesField = value;
                    this.RaisePropertyChanged("HasCartonLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLegNumCnfg {
            get {
                return this.HasLegNumCnfgField;
            }
            set {
                if ((this.HasLegNumCnfgField.Equals(value) != true)) {
                    this.HasLegNumCnfgField = value;
                    this.RaisePropertyChanged("HasLegNumCnfg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HazardousShipment {
            get {
                return this.HazardousShipmentField;
            }
            set {
                if ((this.HazardousShipmentField.Equals(value) != true)) {
                    this.HazardousShipmentField = value;
                    this.RaisePropertyChanged("HazardousShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ICReceived {
            get {
                return this.ICReceivedField;
            }
            set {
                if ((this.ICReceivedField.Equals(value) != true)) {
                    this.ICReceivedField = value;
                    this.RaisePropertyChanged("ICReceived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InPrice {
            get {
                return this.InPriceField;
            }
            set {
                if ((this.InPriceField.Equals(value) != true)) {
                    this.InPriceField = value;
                    this.RaisePropertyChanged("InPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndividualPackIDs {
            get {
                return this.IndividualPackIDsField;
            }
            set {
                if ((this.IndividualPackIDsField.Equals(value) != true)) {
                    this.IndividualPackIDsField = value;
                    this.RaisePropertyChanged("IndividualPackIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IntrntlShip {
            get {
                return this.IntrntlShipField;
            }
            set {
                if ((this.IntrntlShipField.Equals(value) != true)) {
                    this.IntrntlShipField = value;
                    this.RaisePropertyChanged("IntrntlShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelComment {
            get {
                return this.LabelCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelCommentField, value) != true)) {
                    this.LabelCommentField = value;
                    this.RaisePropertyChanged("LabelComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LastCartonFlag {
            get {
                return this.LastCartonFlagField;
            }
            set {
                if ((this.LastCartonFlagField.Equals(value) != true)) {
                    this.LastCartonFlagField = value;
                    this.RaisePropertyChanged("LastCartonFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LetterOfInstr {
            get {
                return this.LetterOfInstrField;
            }
            set {
                if ((this.LetterOfInstrField.Equals(value) != true)) {
                    this.LetterOfInstrField = value;
                    this.RaisePropertyChanged("LetterOfInstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MF3BAccount {
            get {
                return this.MF3BAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.MF3BAccountField, value) != true)) {
                    this.MF3BAccountField = value;
                    this.RaisePropertyChanged("MF3BAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCallTag {
            get {
                return this.MFCallTagField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCallTagField, value) != true)) {
                    this.MFCallTagField = value;
                    this.RaisePropertyChanged("MFCallTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDimWeight {
            get {
                return this.MFDimWeightField;
            }
            set {
                if ((this.MFDimWeightField.Equals(value) != true)) {
                    this.MFDimWeightField = value;
                    this.RaisePropertyChanged("MFDimWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDiscFreight {
            get {
                return this.MFDiscFreightField;
            }
            set {
                if ((this.MFDiscFreightField.Equals(value) != true)) {
                    this.MFDiscFreightField = value;
                    this.RaisePropertyChanged("MFDiscFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFFreightAmt {
            get {
                return this.MFFreightAmtField;
            }
            set {
                if ((this.MFFreightAmtField.Equals(value) != true)) {
                    this.MFFreightAmtField = value;
                    this.RaisePropertyChanged("MFFreightAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFOtherAmt {
            get {
                return this.MFOtherAmtField;
            }
            set {
                if ((this.MFOtherAmtField.Equals(value) != true)) {
                    this.MFOtherAmtField = value;
                    this.RaisePropertyChanged("MFOtherAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFOversized {
            get {
                return this.MFOversizedField;
            }
            set {
                if ((this.MFOversizedField.Equals(value) != true)) {
                    this.MFOversizedField = value;
                    this.RaisePropertyChanged("MFOversized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFPickupNum {
            get {
                return this.MFPickupNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFPickupNumField, value) != true)) {
                    this.MFPickupNumField = value;
                    this.RaisePropertyChanged("MFPickupNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTemplate {
            get {
                return this.MFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTemplateField, value) != true)) {
                    this.MFTemplateField = value;
                    this.RaisePropertyChanged("MFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTransNum {
            get {
                return this.MFTransNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTransNumField, value) != true)) {
                    this.MFTransNumField = value;
                    this.RaisePropertyChanged("MFTransNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFUse3B {
            get {
                return this.MFUse3BField;
            }
            set {
                if ((this.MFUse3BField.Equals(value) != true)) {
                    this.MFUse3BField = value;
                    this.RaisePropertyChanged("MFUse3B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFZone {
            get {
                return this.MFZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MFZoneField, value) != true)) {
                    this.MFZoneField = value;
                    this.RaisePropertyChanged("MFZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManifestFlag {
            get {
                return this.ManifestFlagField;
            }
            set {
                if ((this.ManifestFlagField.Equals(value) != true)) {
                    this.ManifestFlagField = value;
                    this.RaisePropertyChanged("ManifestFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestHeight {
            get {
                return this.ManifestHeightField;
            }
            set {
                if ((this.ManifestHeightField.Equals(value) != true)) {
                    this.ManifestHeightField = value;
                    this.RaisePropertyChanged("ManifestHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestLength {
            get {
                return this.ManifestLengthField;
            }
            set {
                if ((this.ManifestLengthField.Equals(value) != true)) {
                    this.ManifestLengthField = value;
                    this.RaisePropertyChanged("ManifestLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSizeUOM {
            get {
                return this.ManifestSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSizeUOMField, value) != true)) {
                    this.ManifestSizeUOMField = value;
                    this.RaisePropertyChanged("ManifestSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWeight {
            get {
                return this.ManifestWeightField;
            }
            set {
                if ((this.ManifestWeightField.Equals(value) != true)) {
                    this.ManifestWeightField = value;
                    this.RaisePropertyChanged("ManifestWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ManifestWidth {
            get {
                return this.ManifestWidthField;
            }
            set {
                if ((this.ManifestWidthField.Equals(value) != true)) {
                    this.ManifestWidthField = value;
                    this.RaisePropertyChanged("ManifestWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestWtUOM {
            get {
                return this.ManifestWtUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestWtUOMField, value) != true)) {
                    this.ManifestWtUOMField = value;
                    this.RaisePropertyChanged("ManifestWtUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterpackPackNum {
            get {
                return this.MasterpackPackNumField;
            }
            set {
                if ((this.MasterpackPackNumField.Equals(value) != true)) {
                    this.MasterpackPackNumField = value;
                    this.RaisePropertyChanged("MasterpackPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultipleShippers {
            get {
                return this.MultipleShippersField;
            }
            set {
                if ((this.MultipleShippersField.Equals(value) != true)) {
                    this.MultipleShippersField = value;
                    this.RaisePropertyChanged("MultipleShippers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStdPkg {
            get {
                return this.NonStdPkgField;
            }
            set {
                if ((this.NonStdPkgField.Equals(value) != true)) {
                    this.NonStdPkgField = value;
                    this.RaisePropertyChanged("NonStdPkg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OTSOrderNum {
            get {
                return this.OTSOrderNumField;
            }
            set {
                if ((this.OTSOrderNumField.Equals(value) != true)) {
                    this.OTSOrderNumField = value;
                    this.RaisePropertyChanged("OTSOrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderAmt {
            get {
                return this.OrderAmtField;
            }
            set {
                if ((this.OrderAmtField.Equals(value) != true)) {
                    this.OrderAmtField = value;
                    this.RaisePropertyChanged("OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHold {
            get {
                return this.OrderHoldField;
            }
            set {
                if ((this.OrderHoldField.Equals(value) != true)) {
                    this.OrderHoldField = value;
                    this.RaisePropertyChanged("OrderHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBank {
            get {
                return this.OurBankField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankField, value) != true)) {
                    this.OurBankField = value;
                    this.RaisePropertyChanged("OurBank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankBankName {
            get {
                return this.OurBankBankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankBankNameField, value) != true)) {
                    this.OurBankBankNameField = value;
                    this.RaisePropertyChanged("OurBankBankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurBankDescription {
            get {
                return this.OurBankDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OurBankDescriptionField, value) != true)) {
                    this.OurBankDescriptionField = value;
                    this.RaisePropertyChanged("OurBankDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PBHoldNoInv {
            get {
                return this.PBHoldNoInvField;
            }
            set {
                if ((this.PBHoldNoInvField.Equals(value) != true)) {
                    this.PBHoldNoInvField = value;
                    this.RaisePropertyChanged("PBHoldNoInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackToMasterpackDtlPackNum {
            get {
                return this.PackToMasterpackDtlPackNumField;
            }
            set {
                if ((this.PackToMasterpackDtlPackNumField.Equals(value) != true)) {
                    this.PackToMasterpackDtlPackNumField = value;
                    this.RaisePropertyChanged("PackToMasterpackDtlPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayAccount {
            get {
                return this.PayAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PayAccountField, value) != true)) {
                    this.PayAccountField = value;
                    this.RaisePropertyChanged("PayAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress1 {
            get {
                return this.PayBTAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress1Field, value) != true)) {
                    this.PayBTAddress1Field = value;
                    this.RaisePropertyChanged("PayBTAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress2 {
            get {
                return this.PayBTAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress2Field, value) != true)) {
                    this.PayBTAddress2Field = value;
                    this.RaisePropertyChanged("PayBTAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTAddress3 {
            get {
                return this.PayBTAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTAddress3Field, value) != true)) {
                    this.PayBTAddress3Field = value;
                    this.RaisePropertyChanged("PayBTAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCity {
            get {
                return this.PayBTCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCityField, value) != true)) {
                    this.PayBTCityField = value;
                    this.RaisePropertyChanged("PayBTCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTCountry {
            get {
                return this.PayBTCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTCountryField, value) != true)) {
                    this.PayBTCountryField = value;
                    this.RaisePropertyChanged("PayBTCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PayBTCountryNum {
            get {
                return this.PayBTCountryNumField;
            }
            set {
                if ((this.PayBTCountryNumField.Equals(value) != true)) {
                    this.PayBTCountryNumField = value;
                    this.RaisePropertyChanged("PayBTCountryNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTPhone {
            get {
                return this.PayBTPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTPhoneField, value) != true)) {
                    this.PayBTPhoneField = value;
                    this.RaisePropertyChanged("PayBTPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTState {
            get {
                return this.PayBTStateField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTStateField, value) != true)) {
                    this.PayBTStateField = value;
                    this.RaisePropertyChanged("PayBTState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayBTZip {
            get {
                return this.PayBTZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PayBTZipField, value) != true)) {
                    this.PayBTZipField = value;
                    this.RaisePropertyChanged("PayBTZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayFlag {
            get {
                return this.PayFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.PayFlagField, value) != true)) {
                    this.PayFlagField = value;
                    this.RaisePropertyChanged("PayFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomCasesExist {
            get {
                return this.PhantomCasesExistField;
            }
            set {
                if ((this.PhantomCasesExistField.Equals(value) != true)) {
                    this.PhantomCasesExistField = value;
                    this.RaisePropertyChanged("PhantomCasesExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomPack {
            get {
                return this.PhantomPackField;
            }
            set {
                if ((this.PhantomPackField.Equals(value) != true)) {
                    this.PhantomPackField = value;
                    this.RaisePropertyChanged("PhantomPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgClass {
            get {
                return this.PkgClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgClassField, value) != true)) {
                    this.PkgClassField = value;
                    this.RaisePropertyChanged("PkgClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgHeightEnable {
            get {
                return this.PkgHeightEnableField;
            }
            set {
                if ((this.PkgHeightEnableField.Equals(value) != true)) {
                    this.PkgHeightEnableField = value;
                    this.RaisePropertyChanged("PkgHeightEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgLenEnable {
            get {
                return this.PkgLenEnableField;
            }
            set {
                if ((this.PkgLenEnableField.Equals(value) != true)) {
                    this.PkgLenEnableField = value;
                    this.RaisePropertyChanged("PkgLenEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgSizeUOM {
            get {
                return this.PkgSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgSizeUOMField, value) != true)) {
                    this.PkgSizeUOMField = value;
                    this.RaisePropertyChanged("PkgSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgSizeUOMEnable {
            get {
                return this.PkgSizeUOMEnableField;
            }
            set {
                if ((this.PkgSizeUOMEnableField.Equals(value) != true)) {
                    this.PkgSizeUOMEnableField = value;
                    this.RaisePropertyChanged("PkgSizeUOMEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgWidthEnable {
            get {
                return this.PkgWidthEnableField;
            }
            set {
                if ((this.PkgWidthEnableField.Equals(value) != true)) {
                    this.PkgWidthEnableField = value;
                    this.RaisePropertyChanged("PkgWidthEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateGrpCode {
            get {
                return this.RateGrpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RateGrpCodeField, value) != true)) {
                    this.RateGrpCodeField = value;
                    this.RaisePropertyChanged("RateGrpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReconcileQty {
            get {
                return this.ReconcileQtyField;
            }
            set {
                if ((this.ReconcileQtyField.Equals(value) != true)) {
                    this.ReconcileQtyField = value;
                    this.RaisePropertyChanged("ReconcileQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplicateCount {
            get {
                return this.ReplicateCountField;
            }
            set {
                if ((this.ReplicateCountField.Equals(value) != true)) {
                    this.ReplicateCountField = value;
                    this.RaisePropertyChanged("ReplicateCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplicatedFrom {
            get {
                return this.ReplicatedFromField;
            }
            set {
                if ((this.ReplicatedFromField.Equals(value) != true)) {
                    this.ReplicatedFromField = value;
                    this.RaisePropertyChanged("ReplicatedFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReplicatedStat {
            get {
                return this.ReplicatedStatField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplicatedStatField, value) != true)) {
                    this.ReplicatedStatField = value;
                    this.RaisePropertyChanged("ReplicatedStat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rounding {
            get {
                return this.RoundingField;
            }
            set {
                if ((this.RoundingField.Equals(value) != true)) {
                    this.RoundingField = value;
                    this.RaisePropertyChanged("Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1OrderAmt {
            get {
                return this.Rpt1OrderAmtField;
            }
            set {
                if ((this.Rpt1OrderAmtField.Equals(value) != true)) {
                    this.Rpt1OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt1OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1Rounding {
            get {
                return this.Rpt1RoundingField;
            }
            set {
                if ((this.Rpt1RoundingField.Equals(value) != true)) {
                    this.Rpt1RoundingField = value;
                    this.RaisePropertyChanged("Rpt1Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TaxAmt {
            get {
                return this.Rpt1TaxAmtField;
            }
            set {
                if ((this.Rpt1TaxAmtField.Equals(value) != true)) {
                    this.Rpt1TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt1TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalDiscount {
            get {
                return this.Rpt1TotalDiscountField;
            }
            set {
                if ((this.Rpt1TotalDiscountField.Equals(value) != true)) {
                    this.Rpt1TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt1TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalSATax {
            get {
                return this.Rpt1TotalSATaxField;
            }
            set {
                if ((this.Rpt1TotalSATaxField.Equals(value) != true)) {
                    this.Rpt1TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalTax {
            get {
                return this.Rpt1TotalTaxField;
            }
            set {
                if ((this.Rpt1TotalTaxField.Equals(value) != true)) {
                    this.Rpt1TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt1TotalWHTax {
            get {
                return this.Rpt1TotalWHTaxField;
            }
            set {
                if ((this.Rpt1TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt1TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt1TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2OrderAmt {
            get {
                return this.Rpt2OrderAmtField;
            }
            set {
                if ((this.Rpt2OrderAmtField.Equals(value) != true)) {
                    this.Rpt2OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt2OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2Rounding {
            get {
                return this.Rpt2RoundingField;
            }
            set {
                if ((this.Rpt2RoundingField.Equals(value) != true)) {
                    this.Rpt2RoundingField = value;
                    this.RaisePropertyChanged("Rpt2Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TaxAmt {
            get {
                return this.Rpt2TaxAmtField;
            }
            set {
                if ((this.Rpt2TaxAmtField.Equals(value) != true)) {
                    this.Rpt2TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt2TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalDiscount {
            get {
                return this.Rpt2TotalDiscountField;
            }
            set {
                if ((this.Rpt2TotalDiscountField.Equals(value) != true)) {
                    this.Rpt2TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt2TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalSATax {
            get {
                return this.Rpt2TotalSATaxField;
            }
            set {
                if ((this.Rpt2TotalSATaxField.Equals(value) != true)) {
                    this.Rpt2TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalTax {
            get {
                return this.Rpt2TotalTaxField;
            }
            set {
                if ((this.Rpt2TotalTaxField.Equals(value) != true)) {
                    this.Rpt2TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt2TotalWHTax {
            get {
                return this.Rpt2TotalWHTaxField;
            }
            set {
                if ((this.Rpt2TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt2TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt2TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3OrderAmt {
            get {
                return this.Rpt3OrderAmtField;
            }
            set {
                if ((this.Rpt3OrderAmtField.Equals(value) != true)) {
                    this.Rpt3OrderAmtField = value;
                    this.RaisePropertyChanged("Rpt3OrderAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3Rounding {
            get {
                return this.Rpt3RoundingField;
            }
            set {
                if ((this.Rpt3RoundingField.Equals(value) != true)) {
                    this.Rpt3RoundingField = value;
                    this.RaisePropertyChanged("Rpt3Rounding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TaxAmt {
            get {
                return this.Rpt3TaxAmtField;
            }
            set {
                if ((this.Rpt3TaxAmtField.Equals(value) != true)) {
                    this.Rpt3TaxAmtField = value;
                    this.RaisePropertyChanged("Rpt3TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalDiscount {
            get {
                return this.Rpt3TotalDiscountField;
            }
            set {
                if ((this.Rpt3TotalDiscountField.Equals(value) != true)) {
                    this.Rpt3TotalDiscountField = value;
                    this.RaisePropertyChanged("Rpt3TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalSATax {
            get {
                return this.Rpt3TotalSATaxField;
            }
            set {
                if ((this.Rpt3TotalSATaxField.Equals(value) != true)) {
                    this.Rpt3TotalSATaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalTax {
            get {
                return this.Rpt3TotalTaxField;
            }
            set {
                if ((this.Rpt3TotalTaxField.Equals(value) != true)) {
                    this.Rpt3TotalTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rpt3TotalWHTax {
            get {
                return this.Rpt3TotalWHTaxField;
            }
            set {
                if ((this.Rpt3TotalWHTaxField.Equals(value) != true)) {
                    this.Rpt3TotalWHTaxField = value;
                    this.RaisePropertyChanged("Rpt3TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNumber {
            get {
                return this.ScheduleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNumberField, value) != true)) {
                    this.ScheduleNumberField = value;
                    this.RaisePropertyChanged("ScheduleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendShipment {
            get {
                return this.SendShipmentField;
            }
            set {
                if ((this.SendShipmentField.Equals(value) != true)) {
                    this.SendShipmentField = value;
                    this.RaisePropertyChanged("SendShipment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipExprtDeclartn {
            get {
                return this.ShipExprtDeclartnField;
            }
            set {
                if ((this.ShipExprtDeclartnField.Equals(value) != true)) {
                    this.ShipExprtDeclartnField = value;
                    this.RaisePropertyChanged("ShipExprtDeclartn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipGroup {
            get {
                return this.ShipGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipGroupField, value) != true)) {
                    this.ShipGroupField = value;
                    this.RaisePropertyChanged("ShipGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipLog {
            get {
                return this.ShipLogField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipLogField, value) != true)) {
                    this.ShipLogField = value;
                    this.RaisePropertyChanged("ShipLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipPerson {
            get {
                return this.ShipPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipPersonField, value) != true)) {
                    this.ShipPersonField = value;
                    this.RaisePropertyChanged("ShipPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustBTName {
            get {
                return this.ShipToCustBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustBTNameField, value) != true)) {
                    this.ShipToCustBTNameField = value;
                    this.RaisePropertyChanged("ShipToCustBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustCustID {
            get {
                return this.ShipToCustCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustCustIDField, value) != true)) {
                    this.ShipToCustCustIDField = value;
                    this.RaisePropertyChanged("ShipToCustCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCustName {
            get {
                return this.ShipToCustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCustNameField, value) != true)) {
                    this.ShipToCustNameField = value;
                    this.RaisePropertyChanged("ShipToCustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNumName {
            get {
                return this.ShipToNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumNameField, value) != true)) {
                    this.ShipToNumNameField = value;
                    this.RaisePropertyChanged("ShipToNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SlipStatus {
            get {
                return this.SlipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.SlipStatusField, value) != true)) {
                    this.SlipStatusField = value;
                    this.RaisePropertyChanged("SlipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StagingReq {
            get {
                return this.StagingReqField;
            }
            set {
                if ((this.StagingReqField.Equals(value) != true)) {
                    this.StagingReqField = value;
                    this.RaisePropertyChanged("StagingReq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxAmt {
            get {
                return this.TaxAmtField;
            }
            set {
                if ((this.TaxAmtField.Equals(value) != true)) {
                    this.TaxAmtField = value;
                    this.RaisePropertyChanged("TaxAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaxCalcDate {
            get {
                return this.TaxCalcDateField;
            }
            set {
                if ((this.TaxCalcDateField.Equals(value) != true)) {
                    this.TaxCalcDateField = value;
                    this.RaisePropertyChanged("TaxCalcDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxCalculated {
            get {
                return this.TaxCalculatedField;
            }
            set {
                if ((this.TaxCalculatedField.Equals(value) != true)) {
                    this.TaxCalculatedField = value;
                    this.RaisePropertyChanged("TaxCalculated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionCode {
            get {
                return this.TaxRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionCodeField, value) != true)) {
                    this.TaxRegionCodeField = value;
                    this.RaisePropertyChanged("TaxRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxRegionDescription {
            get {
                return this.TaxRegionDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxRegionDescriptionField, value) != true)) {
                    this.TaxRegionDescriptionField = value;
                    this.RaisePropertyChanged("TaxRegionDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalDiscount {
            get {
                return this.TotalDiscountField;
            }
            set {
                if ((this.TotalDiscountField.Equals(value) != true)) {
                    this.TotalDiscountField = value;
                    this.RaisePropertyChanged("TotalDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSATax {
            get {
                return this.TotalSATaxField;
            }
            set {
                if ((this.TotalSATaxField.Equals(value) != true)) {
                    this.TotalSATaxField = value;
                    this.RaisePropertyChanged("TotalSATax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalTax {
            get {
                return this.TotalTaxField;
            }
            set {
                if ((this.TotalTaxField.Equals(value) != true)) {
                    this.TotalTaxField = value;
                    this.RaisePropertyChanged("TotalTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalWHTax {
            get {
                return this.TotalWHTaxField;
            }
            set {
                if ((this.TotalWHTaxField.Equals(value) != true)) {
                    this.TotalWHTaxField = value;
                    this.RaisePropertyChanged("TotalWHTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVMemo {
            get {
                return this.UPSQVMemoField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVMemoField, value) != true)) {
                    this.UPSQVMemoField = value;
                    this.RaisePropertyChanged("UPSQVMemo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPSQVShipFromName {
            get {
                return this.UPSQVShipFromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UPSQVShipFromNameField, value) != true)) {
                    this.UPSQVShipFromNameField = value;
                    this.RaisePropertyChanged("UPSQVShipFromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UPSQuantumView {
            get {
                return this.UPSQuantumViewField;
            }
            set {
                if ((this.UPSQuantumViewField.Equals(value) != true)) {
                    this.UPSQuantumViewField = value;
                    this.RaisePropertyChanged("UPSQuantumView");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseOTS {
            get {
                return this.UseOTSField;
            }
            set {
                if ((this.UseOTSField.Equals(value) != true)) {
                    this.UseOTSField = value;
                    this.RaisePropertyChanged("UseOTS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WayBillNbr {
            get {
                return this.WayBillNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.WayBillNbrField, value) != true)) {
                    this.WayBillNbrField = value;
                    this.RaisePropertyChanged("WayBillNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPackNum {
            get {
                return this.XRefPackNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPackNumField, value) != true)) {
                    this.XRefPackNumField = value;
                    this.RaisePropertyChanged("XRefPackNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageControlPackVoidRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PackageControlPackVoidRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustContainerPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDIShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurDockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustContainerPartNum {
            get {
                return this.CustContainerPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.CustContainerPartNumField, value) != true)) {
                    this.CustContainerPartNumField = value;
                    this.RaisePropertyChanged("CustContainerPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDIShipToNum {
            get {
                return this.EDIShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.EDIShipToNumField, value) != true)) {
                    this.EDIShipToNumField = value;
                    this.RaisePropertyChanged("EDIShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurDock {
            get {
                return this.OurDockField;
            }
            set {
                if ((object.ReferenceEquals(this.OurDockField, value) != true)) {
                    this.OurDockField = value;
                    this.RaisePropertyChanged("OurDock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LLComSerMatchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LLComSerMatchRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChildPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LLComSerMatchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPartDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildPartDesc {
            get {
                return this.ChildPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPartDescField, value) != true)) {
                    this.ChildPartDescField = value;
                    this.RaisePropertyChanged("ChildPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildPartNum {
            get {
                return this.ChildPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildPartNumField, value) != true)) {
                    this.ChildPartNumField = value;
                    this.RaisePropertyChanged("ChildPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LLComSerMatchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPartDesc {
            get {
                return this.ParentPartDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPartDescField, value) != true)) {
                    this.ParentPartDescField = value;
                    this.RaisePropertyChanged("ParentPartDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPartNum {
            get {
                return this.ParentPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPartNumField, value) != true)) {
                    this.ParentPartNumField = value;
                    this.RaisePropertyChanged("ParentPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentSerialNum {
            get {
                return this.ParentSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentSerialNumField, value) != true)) {
                    this.ParentSerialNumField = value;
                    this.RaisePropertyChanged("ParentSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="serialNumbersToMatchRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class serialNumbersToMatchRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool validSerialNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool validSerialNo {
            get {
                return this.validSerialNoField;
            }
            set {
                if ((this.validSerialNoField.Equals(value) != true)) {
                    this.validSerialNoField = value;
                    this.RaisePropertyChanged("validSerialNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipOrdTrkRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipOrdTrkRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ApplyChrgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOLNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CODFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonContentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CartonStageNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CartonWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChrgAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeclaredInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocOnlyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroundTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HazmatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LastCartonFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MF3BAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCallTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDimWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDiscFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFFreightAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFOtherAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFOversizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFPickupNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTransNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFUse3BField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToAttentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestShipToTerritoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToAttentionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManifestSoldToTerritoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotifyEMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotifyFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OrderHoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServAuthNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ServDeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServHomeDelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServInstructField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServPODField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServRef5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServReleaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSatPickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServSignatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VerbalConfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplyChrg {
            get {
                return this.ApplyChrgField;
            }
            set {
                if ((this.ApplyChrgField.Equals(value) != true)) {
                    this.ApplyChrgField = value;
                    this.RaisePropertyChanged("ApplyChrg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLLine {
            get {
                return this.BOLLineField;
            }
            set {
                if ((this.BOLLineField.Equals(value) != true)) {
                    this.BOLLineField = value;
                    this.RaisePropertyChanged("BOLLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOLNum {
            get {
                return this.BOLNumField;
            }
            set {
                if ((this.BOLNumField.Equals(value) != true)) {
                    this.BOLNumField = value;
                    this.RaisePropertyChanged("BOLNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool COD {
            get {
                return this.CODField;
            }
            set {
                if ((this.CODField.Equals(value) != true)) {
                    this.CODField = value;
                    this.RaisePropertyChanged("COD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODCheck {
            get {
                return this.CODCheckField;
            }
            set {
                if ((this.CODCheckField.Equals(value) != true)) {
                    this.CODCheckField = value;
                    this.RaisePropertyChanged("CODCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CODFreight {
            get {
                return this.CODFreightField;
            }
            set {
                if ((this.CODFreightField.Equals(value) != true)) {
                    this.CODFreightField = value;
                    this.RaisePropertyChanged("CODFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonContentValue {
            get {
                return this.CartonContentValueField;
            }
            set {
                if ((this.CartonContentValueField.Equals(value) != true)) {
                    this.CartonContentValueField = value;
                    this.RaisePropertyChanged("CartonContentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonHeight {
            get {
                return this.CartonHeightField;
            }
            set {
                if ((this.CartonHeightField.Equals(value) != true)) {
                    this.CartonHeightField = value;
                    this.RaisePropertyChanged("CartonHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonLength {
            get {
                return this.CartonLengthField;
            }
            set {
                if ((this.CartonLengthField.Equals(value) != true)) {
                    this.CartonLengthField = value;
                    this.RaisePropertyChanged("CartonLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CartonStageNbr {
            get {
                return this.CartonStageNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.CartonStageNbrField, value) != true)) {
                    this.CartonStageNbrField = value;
                    this.RaisePropertyChanged("CartonStageNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CartonWidth {
            get {
                return this.CartonWidthField;
            }
            set {
                if ((this.CartonWidthField.Equals(value) != true)) {
                    this.CartonWidthField = value;
                    this.RaisePropertyChanged("CartonWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ChrgAmount {
            get {
                return this.ChrgAmountField;
            }
            set {
                if ((this.ChrgAmountField.Equals(value) != true)) {
                    this.ChrgAmountField = value;
                    this.RaisePropertyChanged("ChrgAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeclaredIns {
            get {
                return this.DeclaredInsField;
            }
            set {
                if ((this.DeclaredInsField.Equals(value) != true)) {
                    this.DeclaredInsField = value;
                    this.RaisePropertyChanged("DeclaredIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocOnly {
            get {
                return this.DocOnlyField;
            }
            set {
                if ((this.DocOnlyField.Equals(value) != true)) {
                    this.DocOnlyField = value;
                    this.RaisePropertyChanged("DocOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroundType {
            get {
                return this.GroundTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroundTypeField, value) != true)) {
                    this.GroundTypeField = value;
                    this.RaisePropertyChanged("GroundType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hazmat {
            get {
                return this.HazmatField;
            }
            set {
                if ((this.HazmatField.Equals(value) != true)) {
                    this.HazmatField = value;
                    this.RaisePropertyChanged("Hazmat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LastCartonFlag {
            get {
                return this.LastCartonFlagField;
            }
            set {
                if ((this.LastCartonFlagField.Equals(value) != true)) {
                    this.LastCartonFlagField = value;
                    this.RaisePropertyChanged("LastCartonFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MF3BAccount {
            get {
                return this.MF3BAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.MF3BAccountField, value) != true)) {
                    this.MF3BAccountField = value;
                    this.RaisePropertyChanged("MF3BAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCallTag {
            get {
                return this.MFCallTagField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCallTagField, value) != true)) {
                    this.MFCallTagField = value;
                    this.RaisePropertyChanged("MFCallTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDimWeight {
            get {
                return this.MFDimWeightField;
            }
            set {
                if ((this.MFDimWeightField.Equals(value) != true)) {
                    this.MFDimWeightField = value;
                    this.RaisePropertyChanged("MFDimWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDiscFreight {
            get {
                return this.MFDiscFreightField;
            }
            set {
                if ((this.MFDiscFreightField.Equals(value) != true)) {
                    this.MFDiscFreightField = value;
                    this.RaisePropertyChanged("MFDiscFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFFreightAmt {
            get {
                return this.MFFreightAmtField;
            }
            set {
                if ((this.MFFreightAmtField.Equals(value) != true)) {
                    this.MFFreightAmtField = value;
                    this.RaisePropertyChanged("MFFreightAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFOtherAmt {
            get {
                return this.MFOtherAmtField;
            }
            set {
                if ((this.MFOtherAmtField.Equals(value) != true)) {
                    this.MFOtherAmtField = value;
                    this.RaisePropertyChanged("MFOtherAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFOversized {
            get {
                return this.MFOversizedField;
            }
            set {
                if ((this.MFOversizedField.Equals(value) != true)) {
                    this.MFOversizedField = value;
                    this.RaisePropertyChanged("MFOversized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFPickupNum {
            get {
                return this.MFPickupNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFPickupNumField, value) != true)) {
                    this.MFPickupNumField = value;
                    this.RaisePropertyChanged("MFPickupNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTemplate {
            get {
                return this.MFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTemplateField, value) != true)) {
                    this.MFTemplateField = value;
                    this.RaisePropertyChanged("MFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTransNum {
            get {
                return this.MFTransNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTransNumField, value) != true)) {
                    this.MFTransNumField = value;
                    this.RaisePropertyChanged("MFTransNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFUse3B {
            get {
                return this.MFUse3BField;
            }
            set {
                if ((this.MFUse3BField.Equals(value) != true)) {
                    this.MFUse3BField = value;
                    this.RaisePropertyChanged("MFUse3B");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFZone {
            get {
                return this.MFZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MFZoneField, value) != true)) {
                    this.MFZoneField = value;
                    this.RaisePropertyChanged("MFZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToAddress {
            get {
                return this.ManifestShipToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToAddressField, value) != true)) {
                    this.ManifestShipToAddressField = value;
                    this.RaisePropertyChanged("ManifestShipToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToAttention {
            get {
                return this.ManifestShipToAttentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToAttentionField, value) != true)) {
                    this.ManifestShipToAttentionField = value;
                    this.RaisePropertyChanged("ManifestShipToAttention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToCity {
            get {
                return this.ManifestShipToCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToCityField, value) != true)) {
                    this.ManifestShipToCityField = value;
                    this.RaisePropertyChanged("ManifestShipToCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToCountry {
            get {
                return this.ManifestShipToCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToCountryField, value) != true)) {
                    this.ManifestShipToCountryField = value;
                    this.RaisePropertyChanged("ManifestShipToCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToFax {
            get {
                return this.ManifestShipToFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToFaxField, value) != true)) {
                    this.ManifestShipToFaxField = value;
                    this.RaisePropertyChanged("ManifestShipToFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToName {
            get {
                return this.ManifestShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToNameField, value) != true)) {
                    this.ManifestShipToNameField = value;
                    this.RaisePropertyChanged("ManifestShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToPhone {
            get {
                return this.ManifestShipToPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToPhoneField, value) != true)) {
                    this.ManifestShipToPhoneField = value;
                    this.RaisePropertyChanged("ManifestShipToPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToPostalCode {
            get {
                return this.ManifestShipToPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToPostalCodeField, value) != true)) {
                    this.ManifestShipToPostalCodeField = value;
                    this.RaisePropertyChanged("ManifestShipToPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToRegion {
            get {
                return this.ManifestShipToRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToRegionField, value) != true)) {
                    this.ManifestShipToRegionField = value;
                    this.RaisePropertyChanged("ManifestShipToRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestShipToTerritory {
            get {
                return this.ManifestShipToTerritoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestShipToTerritoryField, value) != true)) {
                    this.ManifestShipToTerritoryField = value;
                    this.RaisePropertyChanged("ManifestShipToTerritory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToAddress {
            get {
                return this.ManifestSoldToAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToAddressField, value) != true)) {
                    this.ManifestSoldToAddressField = value;
                    this.RaisePropertyChanged("ManifestSoldToAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToAttention {
            get {
                return this.ManifestSoldToAttentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToAttentionField, value) != true)) {
                    this.ManifestSoldToAttentionField = value;
                    this.RaisePropertyChanged("ManifestSoldToAttention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToCity {
            get {
                return this.ManifestSoldToCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToCityField, value) != true)) {
                    this.ManifestSoldToCityField = value;
                    this.RaisePropertyChanged("ManifestSoldToCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToCountry {
            get {
                return this.ManifestSoldToCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToCountryField, value) != true)) {
                    this.ManifestSoldToCountryField = value;
                    this.RaisePropertyChanged("ManifestSoldToCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToFax {
            get {
                return this.ManifestSoldToFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToFaxField, value) != true)) {
                    this.ManifestSoldToFaxField = value;
                    this.RaisePropertyChanged("ManifestSoldToFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToName {
            get {
                return this.ManifestSoldToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToNameField, value) != true)) {
                    this.ManifestSoldToNameField = value;
                    this.RaisePropertyChanged("ManifestSoldToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToPhone {
            get {
                return this.ManifestSoldToPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToPhoneField, value) != true)) {
                    this.ManifestSoldToPhoneField = value;
                    this.RaisePropertyChanged("ManifestSoldToPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToPostalCode {
            get {
                return this.ManifestSoldToPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToPostalCodeField, value) != true)) {
                    this.ManifestSoldToPostalCodeField = value;
                    this.RaisePropertyChanged("ManifestSoldToPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToRegion {
            get {
                return this.ManifestSoldToRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToRegionField, value) != true)) {
                    this.ManifestSoldToRegionField = value;
                    this.RaisePropertyChanged("ManifestSoldToRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManifestSoldToTerritory {
            get {
                return this.ManifestSoldToTerritoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ManifestSoldToTerritoryField, value) != true)) {
                    this.ManifestSoldToTerritoryField = value;
                    this.RaisePropertyChanged("ManifestSoldToTerritory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NotifyEMail {
            get {
                return this.NotifyEMailField;
            }
            set {
                if ((object.ReferenceEquals(this.NotifyEMailField, value) != true)) {
                    this.NotifyEMailField = value;
                    this.RaisePropertyChanged("NotifyEMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotifyFlag {
            get {
                return this.NotifyFlagField;
            }
            set {
                if ((this.NotifyFlagField.Equals(value) != true)) {
                    this.NotifyFlagField = value;
                    this.RaisePropertyChanged("NotifyFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OrderHold {
            get {
                return this.OrderHoldField;
            }
            set {
                if ((this.OrderHoldField.Equals(value) != true)) {
                    this.OrderHoldField = value;
                    this.RaisePropertyChanged("OrderHold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((object.ReferenceEquals(this.PONumField, value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgClass {
            get {
                return this.PkgClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgClassField, value) != true)) {
                    this.PkgClassField = value;
                    this.RaisePropertyChanged("PkgClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgSizeUOM {
            get {
                return this.PkgSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgSizeUOMField, value) != true)) {
                    this.PkgSizeUOMField = value;
                    this.RaisePropertyChanged("PkgSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNotes {
            get {
                return this.RefNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNotesField, value) != true)) {
                    this.RefNotesField = value;
                    this.RaisePropertyChanged("RefNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ResDelivery {
            get {
                return this.ResDeliveryField;
            }
            set {
                if ((this.ResDeliveryField.Equals(value) != true)) {
                    this.ResDeliveryField = value;
                    this.RaisePropertyChanged("ResDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatDelivery {
            get {
                return this.SatDeliveryField;
            }
            set {
                if ((this.SatDeliveryField.Equals(value) != true)) {
                    this.SatDeliveryField = value;
                    this.RaisePropertyChanged("SatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SatPickup {
            get {
                return this.SatPickupField;
            }
            set {
                if ((this.SatPickupField.Equals(value) != true)) {
                    this.SatPickupField = value;
                    this.RaisePropertyChanged("SatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAOD {
            get {
                return this.ServAODField;
            }
            set {
                if ((this.ServAODField.Equals(value) != true)) {
                    this.ServAODField = value;
                    this.RaisePropertyChanged("ServAOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServAlert {
            get {
                return this.ServAlertField;
            }
            set {
                if ((this.ServAlertField.Equals(value) != true)) {
                    this.ServAlertField = value;
                    this.RaisePropertyChanged("ServAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServAuthNum {
            get {
                return this.ServAuthNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ServAuthNumField, value) != true)) {
                    this.ServAuthNumField = value;
                    this.RaisePropertyChanged("ServAuthNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ServDeliveryDate {
            get {
                return this.ServDeliveryDateField;
            }
            set {
                if ((this.ServDeliveryDateField.Equals(value) != true)) {
                    this.ServDeliveryDateField = value;
                    this.RaisePropertyChanged("ServDeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServHomeDel {
            get {
                return this.ServHomeDelField;
            }
            set {
                if ((this.ServHomeDelField.Equals(value) != true)) {
                    this.ServHomeDelField = value;
                    this.RaisePropertyChanged("ServHomeDel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServInstruct {
            get {
                return this.ServInstructField;
            }
            set {
                if ((object.ReferenceEquals(this.ServInstructField, value) != true)) {
                    this.ServInstructField = value;
                    this.RaisePropertyChanged("ServInstruct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServPOD {
            get {
                return this.ServPODField;
            }
            set {
                if ((this.ServPODField.Equals(value) != true)) {
                    this.ServPODField = value;
                    this.RaisePropertyChanged("ServPOD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServPhone {
            get {
                return this.ServPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ServPhoneField, value) != true)) {
                    this.ServPhoneField = value;
                    this.RaisePropertyChanged("ServPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef1 {
            get {
                return this.ServRef1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef1Field, value) != true)) {
                    this.ServRef1Field = value;
                    this.RaisePropertyChanged("ServRef1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef2 {
            get {
                return this.ServRef2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef2Field, value) != true)) {
                    this.ServRef2Field = value;
                    this.RaisePropertyChanged("ServRef2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef3 {
            get {
                return this.ServRef3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef3Field, value) != true)) {
                    this.ServRef3Field = value;
                    this.RaisePropertyChanged("ServRef3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef4 {
            get {
                return this.ServRef4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef4Field, value) != true)) {
                    this.ServRef4Field = value;
                    this.RaisePropertyChanged("ServRef4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServRef5 {
            get {
                return this.ServRef5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ServRef5Field, value) != true)) {
                    this.ServRef5Field = value;
                    this.RaisePropertyChanged("ServRef5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServRelease {
            get {
                return this.ServReleaseField;
            }
            set {
                if ((this.ServReleaseField.Equals(value) != true)) {
                    this.ServReleaseField = value;
                    this.RaisePropertyChanged("ServRelease");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatDelivery {
            get {
                return this.ServSatDeliveryField;
            }
            set {
                if ((this.ServSatDeliveryField.Equals(value) != true)) {
                    this.ServSatDeliveryField = value;
                    this.RaisePropertyChanged("ServSatDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSatPickup {
            get {
                return this.ServSatPickupField;
            }
            set {
                if ((this.ServSatPickupField.Equals(value) != true)) {
                    this.ServSatPickupField = value;
                    this.RaisePropertyChanged("ServSatPickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServSignature {
            get {
                return this.ServSignatureField;
            }
            set {
                if ((this.ServSignatureField.Equals(value) != true)) {
                    this.ServSignatureField = value;
                    this.RaisePropertyChanged("ServSignature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipGroup {
            get {
                return this.ShipGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipGroupField, value) != true)) {
                    this.ShipGroupField = value;
                    this.RaisePropertyChanged("ShipGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipLog {
            get {
                return this.ShipLogField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipLogField, value) != true)) {
                    this.ShipLogField = value;
                    this.RaisePropertyChanged("ShipLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipPerson {
            get {
                return this.ShipPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipPersonField, value) != true)) {
                    this.ShipPersonField = value;
                    this.RaisePropertyChanged("ShipPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VerbalConf {
            get {
                return this.VerbalConfField;
            }
            set {
                if ((this.VerbalConfField.Equals(value) != true)) {
                    this.VerbalConfField = value;
                    this.RaisePropertyChanged("VerbalConf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSNFormatRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POSNFormatRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.POSNFormatRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LeadingZeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfDigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseDataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNLastUsedSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.POSNFormatRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasSerialNumbers {
            get {
                return this.HasSerialNumbersField;
            }
            set {
                if ((this.HasSerialNumbersField.Equals(value) != true)) {
                    this.HasSerialNumbersField = value;
                    this.RaisePropertyChanged("HasSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LeadingZeroes {
            get {
                return this.LeadingZeroesField;
            }
            set {
                if ((this.LeadingZeroesField.Equals(value) != true)) {
                    this.LeadingZeroesField = value;
                    this.RaisePropertyChanged("LeadingZeroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfDigits {
            get {
                return this.NumberOfDigitsField;
            }
            set {
                if ((this.NumberOfDigitsField.Equals(value) != true)) {
                    this.NumberOfDigitsField = value;
                    this.RaisePropertyChanged("NumberOfDigits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseDataType {
            get {
                return this.SNBaseDataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseDataTypeField, value) != true)) {
                    this.SNBaseDataTypeField = value;
                    this.RaisePropertyChanged("SNBaseDataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNLastUsedSeq {
            get {
                return this.SNLastUsedSeqField;
            }
            set {
                if ((object.ReferenceEquals(this.SNLastUsedSeqField, value) != true)) {
                    this.SNLastUsedSeqField = value;
                    this.RaisePropertyChanged("SNLastUsedSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskPrefix {
            get {
                return this.SNMaskPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskPrefixField, value) != true)) {
                    this.SNMaskPrefixField = value;
                    this.RaisePropertyChanged("SNMaskPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMaskSuffix {
            get {
                return this.SNMaskSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskSuffixField, value) != true)) {
                    this.SNMaskSuffixField = value;
                    this.RaisePropertyChanged("SNMaskSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSelectedSerialNumbersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class POSelectedSerialNumbersRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KBLbrActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KBLbrActionDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitWhseListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NotSavedToDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PassedInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreDeselectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PreventDeselectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RawSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonCodeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNBaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SNPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ScrappedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScrappedReasonCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SerialNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRefPartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deselected {
            get {
                return this.DeselectedField;
            }
            set {
                if ((this.DeselectedField.Equals(value) != true)) {
                    this.DeselectedField = value;
                    this.RaisePropertyChanged("Deselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KBLbrAction {
            get {
                return this.KBLbrActionField;
            }
            set {
                if ((this.KBLbrActionField.Equals(value) != true)) {
                    this.KBLbrActionField = value;
                    this.RaisePropertyChanged("KBLbrAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KBLbrActionDesc {
            get {
                return this.KBLbrActionDescField;
            }
            set {
                if ((object.ReferenceEquals(this.KBLbrActionDescField, value) != true)) {
                    this.KBLbrActionDescField = value;
                    this.RaisePropertyChanged("KBLbrActionDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitWhseList {
            get {
                return this.KitWhseListField;
            }
            set {
                if ((object.ReferenceEquals(this.KitWhseListField, value) != true)) {
                    this.KitWhseListField = value;
                    this.RaisePropertyChanged("KitWhseList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NotSavedToDB {
            get {
                return this.NotSavedToDBField;
            }
            set {
                if ((this.NotSavedToDBField.Equals(value) != true)) {
                    this.NotSavedToDBField = value;
                    this.RaisePropertyChanged("NotSavedToDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PassedInspection {
            get {
                return this.PassedInspectionField;
            }
            set {
                if ((this.PassedInspectionField.Equals(value) != true)) {
                    this.PassedInspectionField = value;
                    this.RaisePropertyChanged("PassedInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreDeselected {
            get {
                return this.PreDeselectedField;
            }
            set {
                if ((this.PreDeselectedField.Equals(value) != true)) {
                    this.PreDeselectedField = value;
                    this.RaisePropertyChanged("PreDeselected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreventDeselect {
            get {
                return this.PreventDeselectField;
            }
            set {
                if ((this.PreventDeselectField.Equals(value) != true)) {
                    this.PreventDeselectField = value;
                    this.RaisePropertyChanged("PreventDeselect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RawSerialNum {
            get {
                return this.RawSerialNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RawSerialNumField, value) != true)) {
                    this.RawSerialNumField = value;
                    this.RaisePropertyChanged("RawSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeDesc {
            get {
                return this.ReasonCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeDescField, value) != true)) {
                    this.ReasonCodeDescField = value;
                    this.RaisePropertyChanged("ReasonCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReasonCodeType {
            get {
                return this.ReasonCodeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonCodeTypeField, value) != true)) {
                    this.ReasonCodeTypeField = value;
                    this.RaisePropertyChanged("ReasonCodeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNBaseNumber {
            get {
                return this.SNBaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SNBaseNumberField, value) != true)) {
                    this.SNBaseNumberField = value;
                    this.RaisePropertyChanged("SNBaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNMask {
            get {
                return this.SNMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.SNMaskField, value) != true)) {
                    this.SNMaskField = value;
                    this.RaisePropertyChanged("SNMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SNPrefix {
            get {
                return this.SNPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.SNPrefixField, value) != true)) {
                    this.SNPrefixField = value;
                    this.RaisePropertyChanged("SNPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Scrapped {
            get {
                return this.ScrappedField;
            }
            set {
                if ((this.ScrappedField.Equals(value) != true)) {
                    this.ScrappedField = value;
                    this.RaisePropertyChanged("Scrapped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScrappedReasonCode {
            get {
                return this.ScrappedReasonCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScrappedReasonCodeField, value) != true)) {
                    this.ScrappedReasonCodeField = value;
                    this.RaisePropertyChanged("ScrappedReasonCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SerialNumber {
            get {
                return this.SerialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                    this.SerialNumberField = value;
                    this.RaisePropertyChanged("SerialNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceRowID {
            get {
                return this.SourceRowIDField;
            }
            set {
                if ((this.SourceRowIDField.Equals(value) != true)) {
                    this.SourceRowIDField = value;
                    this.RaisePropertyChanged("SourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransType {
            get {
                return this.TransTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransTypeField, value) != true)) {
                    this.TransTypeField = value;
                    this.RaisePropertyChanged("TransType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Voided {
            get {
                return this.VoidedField;
            }
            set {
                if ((this.VoidedField.Equals(value) != true)) {
                    this.VoidedField = value;
                    this.RaisePropertyChanged("Voided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartNum {
            get {
                return this.XRefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartNumField, value) != true)) {
                    this.XRefPartNumField = value;
                    this.RaisePropertyChanged("XRefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRefPartType {
            get {
                return this.XRefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.XRefPartTypeField, value) != true)) {
                    this.XRefPartTypeField = value;
                    this.RaisePropertyChanged("XRefPartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackOutRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PackOutRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CODAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PackOutRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DeclaredAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DimCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DimConvFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DocumentPrintedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePOSerialBtnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePackageControlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableWhseBinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightedShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCartonLinesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InvQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KitPartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFCallTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDimWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFDiscFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFFreightAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MFOtherAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MFOversizedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFPickUpNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTransNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFZoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MasterpackPackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumMatchsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OprSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurInventoryShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackOutNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PackQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhantomPackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgHeightEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgLenEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PkgSizeUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgSizeUOMEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PkgWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PkgWidthEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptKitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptKitRevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptOrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptOrderRelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PromptPartRevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RemainQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShipCmplField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipStatusXlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToWarningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShpConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StockPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TFOrdNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotPackedQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotRelQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranDocTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WayBillNbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightUOMField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoQuantity {
            get {
                return this.AutoQuantityField;
            }
            set {
                if ((this.AutoQuantityField.Equals(value) != true)) {
                    this.AutoQuantityField = value;
                    this.RaisePropertyChanged("AutoQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CODAmount {
            get {
                return this.CODAmountField;
            }
            set {
                if ((this.CODAmountField.Equals(value) != true)) {
                    this.CODAmountField = value;
                    this.RaisePropertyChanged("CODAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PackOutRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DUM {
            get {
                return this.DUMField;
            }
            set {
                if ((object.ReferenceEquals(this.DUMField, value) != true)) {
                    this.DUMField = value;
                    this.RaisePropertyChanged("DUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DeclaredAmt {
            get {
                return this.DeclaredAmtField;
            }
            set {
                if ((this.DeclaredAmtField.Equals(value) != true)) {
                    this.DeclaredAmtField = value;
                    this.RaisePropertyChanged("DeclaredAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DimCode {
            get {
                return this.DimCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DimCodeField, value) != true)) {
                    this.DimCodeField = value;
                    this.RaisePropertyChanged("DimCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DimConvFactor {
            get {
                return this.DimConvFactorField;
            }
            set {
                if ((this.DimConvFactorField.Equals(value) != true)) {
                    this.DimConvFactorField = value;
                    this.RaisePropertyChanged("DimConvFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DocumentPrinted {
            get {
                return this.DocumentPrintedField;
            }
            set {
                if ((this.DocumentPrintedField.Equals(value) != true)) {
                    this.DocumentPrintedField = value;
                    this.RaisePropertyChanged("DocumentPrinted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePOSerialBtn {
            get {
                return this.EnablePOSerialBtnField;
            }
            set {
                if ((this.EnablePOSerialBtnField.Equals(value) != true)) {
                    this.EnablePOSerialBtnField = value;
                    this.RaisePropertyChanged("EnablePOSerialBtn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePackageControl {
            get {
                return this.EnablePackageControlField;
            }
            set {
                if ((this.EnablePackageControlField.Equals(value) != true)) {
                    this.EnablePackageControlField = value;
                    this.RaisePropertyChanged("EnablePackageControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableWeight {
            get {
                return this.EnableWeightField;
            }
            set {
                if ((this.EnableWeightField.Equals(value) != true)) {
                    this.EnableWeightField = value;
                    this.RaisePropertyChanged("EnableWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableWhseBin {
            get {
                return this.EnableWhseBinField;
            }
            set {
                if ((this.EnableWhseBinField.Equals(value) != true)) {
                    this.EnableWhseBinField = value;
                    this.RaisePropertyChanged("EnableWhseBin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPerson {
            get {
                return this.EntryPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPersonField, value) != true)) {
                    this.EntryPersonField = value;
                    this.RaisePropertyChanged("EntryPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightedShipViaCode {
            get {
                return this.FreightedShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightedShipViaCodeField, value) != true)) {
                    this.FreightedShipViaCodeField = value;
                    this.RaisePropertyChanged("FreightedShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromAddr {
            get {
                return this.FromAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.FromAddrField, value) != true)) {
                    this.FromAddrField = value;
                    this.RaisePropertyChanged("FromAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPlant {
            get {
                return this.FromPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPlantField, value) != true)) {
                    this.FromPlantField = value;
                    this.RaisePropertyChanged("FromPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCartonLines {
            get {
                return this.HasCartonLinesField;
            }
            set {
                if ((this.HasCartonLinesField.Equals(value) != true)) {
                    this.HasCartonLinesField = value;
                    this.RaisePropertyChanged("HasCartonLines");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InvQty {
            get {
                return this.InvQtyField;
            }
            set {
                if ((this.InvQtyField.Equals(value) != true)) {
                    this.InvQtyField = value;
                    this.RaisePropertyChanged("InvQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryShipUOM {
            get {
                return this.InventoryShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryShipUOMField, value) != true)) {
                    this.InventoryShipUOMField = value;
                    this.RaisePropertyChanged("InventoryShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceComment {
            get {
                return this.InvoiceCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCommentField, value) != true)) {
                    this.InvoiceCommentField = value;
                    this.RaisePropertyChanged("InvoiceComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInvoiced {
            get {
                return this.IsInvoicedField;
            }
            set {
                if ((this.IsInvoicedField.Equals(value) != true)) {
                    this.IsInvoicedField = value;
                    this.RaisePropertyChanged("IsInvoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobShipUOM {
            get {
                return this.JobShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.JobShipUOMField, value) != true)) {
                    this.JobShipUOMField = value;
                    this.RaisePropertyChanged("JobShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitFlag {
            get {
                return this.KitFlagField;
            }
            set {
                if ((object.ReferenceEquals(this.KitFlagField, value) != true)) {
                    this.KitFlagField = value;
                    this.RaisePropertyChanged("KitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitNumPartDescription {
            get {
                return this.KitNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KitNumPartDescriptionField, value) != true)) {
                    this.KitNumPartDescriptionField = value;
                    this.RaisePropertyChanged("KitNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPartNum {
            get {
                return this.KitPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPartNumField, value) != true)) {
                    this.KitPartNumField = value;
                    this.RaisePropertyChanged("KitPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KitPartRev {
            get {
                return this.KitPartRevField;
            }
            set {
                if ((object.ReferenceEquals(this.KitPartRevField, value) != true)) {
                    this.KitPartRevField = value;
                    this.RaisePropertyChanged("KitPartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelComment {
            get {
                return this.LabelCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelCommentField, value) != true)) {
                    this.LabelCommentField = value;
                    this.RaisePropertyChanged("LabelComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumberMessage {
            get {
                return this.LegalNumberMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberMessageField, value) != true)) {
                    this.LegalNumberMessageField = value;
                    this.RaisePropertyChanged("LegalNumberMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineType {
            get {
                return this.LineTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LineTypeField, value) != true)) {
                    this.LineTypeField = value;
                    this.RaisePropertyChanged("LineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFCallTag {
            get {
                return this.MFCallTagField;
            }
            set {
                if ((object.ReferenceEquals(this.MFCallTagField, value) != true)) {
                    this.MFCallTagField = value;
                    this.RaisePropertyChanged("MFCallTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDimWeight {
            get {
                return this.MFDimWeightField;
            }
            set {
                if ((this.MFDimWeightField.Equals(value) != true)) {
                    this.MFDimWeightField = value;
                    this.RaisePropertyChanged("MFDimWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFDiscFreight {
            get {
                return this.MFDiscFreightField;
            }
            set {
                if ((this.MFDiscFreightField.Equals(value) != true)) {
                    this.MFDiscFreightField = value;
                    this.RaisePropertyChanged("MFDiscFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFFreightAmt {
            get {
                return this.MFFreightAmtField;
            }
            set {
                if ((this.MFFreightAmtField.Equals(value) != true)) {
                    this.MFFreightAmtField = value;
                    this.RaisePropertyChanged("MFFreightAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MFOtherAmt {
            get {
                return this.MFOtherAmtField;
            }
            set {
                if ((this.MFOtherAmtField.Equals(value) != true)) {
                    this.MFOtherAmtField = value;
                    this.RaisePropertyChanged("MFOtherAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MFOversized {
            get {
                return this.MFOversizedField;
            }
            set {
                if ((this.MFOversizedField.Equals(value) != true)) {
                    this.MFOversizedField = value;
                    this.RaisePropertyChanged("MFOversized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFPickUpNum {
            get {
                return this.MFPickUpNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFPickUpNumField, value) != true)) {
                    this.MFPickUpNumField = value;
                    this.RaisePropertyChanged("MFPickUpNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTemplate {
            get {
                return this.MFTemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTemplateField, value) != true)) {
                    this.MFTemplateField = value;
                    this.RaisePropertyChanged("MFTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTransNum {
            get {
                return this.MFTransNumField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTransNumField, value) != true)) {
                    this.MFTransNumField = value;
                    this.RaisePropertyChanged("MFTransNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFZone {
            get {
                return this.MFZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MFZoneField, value) != true)) {
                    this.MFZoneField = value;
                    this.RaisePropertyChanged("MFZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MasterpackPackNum {
            get {
                return this.MasterpackPackNumField;
            }
            set {
                if ((this.MasterpackPackNumField.Equals(value) != true)) {
                    this.MasterpackPackNumField = value;
                    this.RaisePropertyChanged("MasterpackPackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumMatchs {
            get {
                return this.NumMatchsField;
            }
            set {
                if ((this.NumMatchsField.Equals(value) != true)) {
                    this.NumMatchsField = value;
                    this.RaisePropertyChanged("NumMatchs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OprSeq {
            get {
                return this.OprSeqField;
            }
            set {
                if ((this.OprSeqField.Equals(value) != true)) {
                    this.OprSeqField = value;
                    this.RaisePropertyChanged("OprSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurInventoryShipQty {
            get {
                return this.OurInventoryShipQtyField;
            }
            set {
                if ((this.OurInventoryShipQtyField.Equals(value) != true)) {
                    this.OurInventoryShipQtyField = value;
                    this.RaisePropertyChanged("OurInventoryShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobShipQty {
            get {
                return this.OurJobShipQtyField;
            }
            set {
                if ((this.OurJobShipQtyField.Equals(value) != true)) {
                    this.OurJobShipQtyField = value;
                    this.RaisePropertyChanged("OurJobShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackMode {
            get {
                return this.PackModeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackModeField, value) != true)) {
                    this.PackModeField = value;
                    this.RaisePropertyChanged("PackMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackOutNum {
            get {
                return this.PackOutNumField;
            }
            set {
                if ((this.PackOutNumField.Equals(value) != true)) {
                    this.PackOutNumField = value;
                    this.RaisePropertyChanged("PackOutNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PackQty {
            get {
                return this.PackQtyField;
            }
            set {
                if ((this.PackQtyField.Equals(value) != true)) {
                    this.PackQtyField = value;
                    this.RaisePropertyChanged("PackQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhantomPack {
            get {
                return this.PhantomPackField;
            }
            set {
                if ((this.PhantomPackField.Equals(value) != true)) {
                    this.PhantomPackField = value;
                    this.RaisePropertyChanged("PhantomPack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgClass {
            get {
                return this.PkgClassField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgClassField, value) != true)) {
                    this.PkgClassField = value;
                    this.RaisePropertyChanged("PkgClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgCode {
            get {
                return this.PkgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgCodeField, value) != true)) {
                    this.PkgCodeField = value;
                    this.RaisePropertyChanged("PkgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgHeight {
            get {
                return this.PkgHeightField;
            }
            set {
                if ((this.PkgHeightField.Equals(value) != true)) {
                    this.PkgHeightField = value;
                    this.RaisePropertyChanged("PkgHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgHeightEnable {
            get {
                return this.PkgHeightEnableField;
            }
            set {
                if ((this.PkgHeightEnableField.Equals(value) != true)) {
                    this.PkgHeightEnableField = value;
                    this.RaisePropertyChanged("PkgHeightEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgLenEnable {
            get {
                return this.PkgLenEnableField;
            }
            set {
                if ((this.PkgLenEnableField.Equals(value) != true)) {
                    this.PkgLenEnableField = value;
                    this.RaisePropertyChanged("PkgLenEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgLength {
            get {
                return this.PkgLengthField;
            }
            set {
                if ((this.PkgLengthField.Equals(value) != true)) {
                    this.PkgLengthField = value;
                    this.RaisePropertyChanged("PkgLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PkgSizeUOM {
            get {
                return this.PkgSizeUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.PkgSizeUOMField, value) != true)) {
                    this.PkgSizeUOMField = value;
                    this.RaisePropertyChanged("PkgSizeUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgSizeUOMEnable {
            get {
                return this.PkgSizeUOMEnableField;
            }
            set {
                if ((this.PkgSizeUOMEnableField.Equals(value) != true)) {
                    this.PkgSizeUOMEnableField = value;
                    this.RaisePropertyChanged("PkgSizeUOMEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PkgWidth {
            get {
                return this.PkgWidthField;
            }
            set {
                if ((this.PkgWidthField.Equals(value) != true)) {
                    this.PkgWidthField = value;
                    this.RaisePropertyChanged("PkgWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PkgWidthEnable {
            get {
                return this.PkgWidthEnableField;
            }
            set {
                if ((this.PkgWidthEnableField.Equals(value) != true)) {
                    this.PkgWidthEnableField = value;
                    this.RaisePropertyChanged("PkgWidthEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptJobNum {
            get {
                return this.PromptJobNumField;
            }
            set {
                if ((this.PromptJobNumField.Equals(value) != true)) {
                    this.PromptJobNumField = value;
                    this.RaisePropertyChanged("PromptJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptKit {
            get {
                return this.PromptKitField;
            }
            set {
                if ((this.PromptKitField.Equals(value) != true)) {
                    this.PromptKitField = value;
                    this.RaisePropertyChanged("PromptKit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptKitRevision {
            get {
                return this.PromptKitRevisionField;
            }
            set {
                if ((this.PromptKitRevisionField.Equals(value) != true)) {
                    this.PromptKitRevisionField = value;
                    this.RaisePropertyChanged("PromptKitRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptOrderLine {
            get {
                return this.PromptOrderLineField;
            }
            set {
                if ((this.PromptOrderLineField.Equals(value) != true)) {
                    this.PromptOrderLineField = value;
                    this.RaisePropertyChanged("PromptOrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptOrderRel {
            get {
                return this.PromptOrderRelField;
            }
            set {
                if ((this.PromptOrderRelField.Equals(value) != true)) {
                    this.PromptOrderRelField = value;
                    this.RaisePropertyChanged("PromptOrderRel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromptPartRev {
            get {
                return this.PromptPartRevField;
            }
            set {
                if ((this.PromptPartRevField.Equals(value) != true)) {
                    this.PromptPartRevField = value;
                    this.RaisePropertyChanged("PromptPartRev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RemainQty {
            get {
                return this.RemainQtyField;
            }
            set {
                if ((this.RemainQtyField.Equals(value) != true)) {
                    this.RemainQtyField = value;
                    this.RaisePropertyChanged("RemainQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddr {
            get {
                return this.ShipAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddrField, value) != true)) {
                    this.ShipAddrField = value;
                    this.RaisePropertyChanged("ShipAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShipCmpl {
            get {
                return this.ShipCmplField;
            }
            set {
                if ((this.ShipCmplField.Equals(value) != true)) {
                    this.ShipCmplField = value;
                    this.RaisePropertyChanged("ShipCmpl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipComment {
            get {
                return this.ShipCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCommentField, value) != true)) {
                    this.ShipCommentField = value;
                    this.RaisePropertyChanged("ShipComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatus {
            get {
                return this.ShipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusField, value) != true)) {
                    this.ShipStatusField = value;
                    this.RaisePropertyChanged("ShipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipStatusXlate {
            get {
                return this.ShipStatusXlateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipStatusXlateField, value) != true)) {
                    this.ShipStatusXlateField = value;
                    this.RaisePropertyChanged("ShipStatusXlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToWarning {
            get {
                return this.ShipToWarningField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToWarningField, value) != true)) {
                    this.ShipToWarningField = value;
                    this.RaisePropertyChanged("ShipToWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaDescription {
            get {
                return this.ShipViaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaDescriptionField, value) != true)) {
                    this.ShipViaDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShpConNum {
            get {
                return this.ShpConNumField;
            }
            set {
                if ((this.ShpConNumField.Equals(value) != true)) {
                    this.ShpConNumField = value;
                    this.RaisePropertyChanged("ShpConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stage {
            get {
                return this.StageField;
            }
            set {
                if ((object.ReferenceEquals(this.StageField, value) != true)) {
                    this.StageField = value;
                    this.RaisePropertyChanged("Stage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StockPart {
            get {
                return this.StockPartField;
            }
            set {
                if ((this.StockPartField.Equals(value) != true)) {
                    this.StockPartField = value;
                    this.RaisePropertyChanged("StockPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TFOrdNum {
            get {
                return this.TFOrdNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TFOrdNumField, value) != true)) {
                    this.TFOrdNumField = value;
                    this.RaisePropertyChanged("TFOrdNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPlant {
            get {
                return this.ToPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPlantField, value) != true)) {
                    this.ToPlantField = value;
                    this.RaisePropertyChanged("ToPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotPackedQty {
            get {
                return this.TotPackedQtyField;
            }
            set {
                if ((this.TotPackedQtyField.Equals(value) != true)) {
                    this.TotPackedQtyField = value;
                    this.RaisePropertyChanged("TotPackedQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotRelQty {
            get {
                return this.TotRelQtyField;
            }
            set {
                if ((this.TotRelQtyField.Equals(value) != true)) {
                    this.TotRelQtyField = value;
                    this.RaisePropertyChanged("TotRelQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeDescription {
            get {
                return this.TranDocTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeDescriptionField, value) != true)) {
                    this.TranDocTypeDescriptionField = value;
                    this.RaisePropertyChanged("TranDocTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranDocTypeID {
            get {
                return this.TranDocTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TranDocTypeIDField, value) != true)) {
                    this.TranDocTypeIDField = value;
                    this.RaisePropertyChanged("TranDocTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorIDField, value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WayBillNbr {
            get {
                return this.WayBillNbrField;
            }
            set {
                if ((object.ReferenceEquals(this.WayBillNbrField, value) != true)) {
                    this.WayBillNbrField = value;
                    this.RaisePropertyChanged("WayBillNbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeightUOM {
            get {
                return this.WeightUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightUOMField, value) != true)) {
                    this.WeightUOMField = value;
                    this.RaisePropertyChanged("WeightUOM");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipCustTrkRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipCustTrkRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BTCustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DropShipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InvoicedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobShipUOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LegalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OnTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurInventoryShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OurJobShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReadyToInvoiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequestDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingInventoryShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingJobShipQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellingShipmentQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShipDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XRevisionNumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustID {
            get {
                return this.BTCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustIDField, value) != true)) {
                    this.BTCustIDField = value;
                    this.RaisePropertyChanged("BTCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BTCustomerName {
            get {
                return this.BTCustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BTCustomerNameField, value) != true)) {
                    this.BTCustomerNameField = value;
                    this.RaisePropertyChanged("BTCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DropShip {
            get {
                return this.DropShipField;
            }
            set {
                if ((this.DropShipField.Equals(value) != true)) {
                    this.DropShipField = value;
                    this.RaisePropertyChanged("DropShip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryShipUOM {
            get {
                return this.InventoryShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryShipUOMField, value) != true)) {
                    this.InventoryShipUOMField = value;
                    this.RaisePropertyChanged("InventoryShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNum {
            get {
                return this.InvoiceNumField;
            }
            set {
                if ((this.InvoiceNumField.Equals(value) != true)) {
                    this.InvoiceNumField = value;
                    this.RaisePropertyChanged("InvoiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Invoiced {
            get {
                return this.InvoicedField;
            }
            set {
                if ((this.InvoicedField.Equals(value) != true)) {
                    this.InvoicedField = value;
                    this.RaisePropertyChanged("Invoiced");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobShipUOM {
            get {
                return this.JobShipUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.JobShipUOMField, value) != true)) {
                    this.JobShipUOMField = value;
                    this.RaisePropertyChanged("JobShipUOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalNumber {
            get {
                return this.LegalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberField, value) != true)) {
                    this.LegalNumberField = value;
                    this.RaisePropertyChanged("LegalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineDesc {
            get {
                return this.LineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.LineDescField, value) != true)) {
                    this.LineDescField = value;
                    this.RaisePropertyChanged("LineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OnTime {
            get {
                return this.OnTimeField;
            }
            set {
                if ((this.OnTimeField.Equals(value) != true)) {
                    this.OnTimeField = value;
                    this.RaisePropertyChanged("OnTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurInventoryShipQty {
            get {
                return this.OurInventoryShipQtyField;
            }
            set {
                if ((this.OurInventoryShipQtyField.Equals(value) != true)) {
                    this.OurInventoryShipQtyField = value;
                    this.RaisePropertyChanged("OurInventoryShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OurJobShipQty {
            get {
                return this.OurJobShipQtyField;
            }
            set {
                if ((this.OurJobShipQtyField.Equals(value) != true)) {
                    this.OurJobShipQtyField = value;
                    this.RaisePropertyChanged("OurJobShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackNum {
            get {
                return this.PackNumField;
            }
            set {
                if ((this.PackNumField.Equals(value) != true)) {
                    this.PackNumField = value;
                    this.RaisePropertyChanged("PackNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadyToInvoice {
            get {
                return this.ReadyToInvoiceField;
            }
            set {
                if ((this.ReadyToInvoiceField.Equals(value) != true)) {
                    this.ReadyToInvoiceField = value;
                    this.RaisePropertyChanged("ReadyToInvoice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.RequestDateField;
            }
            set {
                if ((this.RequestDateField.Equals(value) != true)) {
                    this.RequestDateField = value;
                    this.RaisePropertyChanged("RequestDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesUM {
            get {
                return this.SalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesUMField, value) != true)) {
                    this.SalesUMField = value;
                    this.RaisePropertyChanged("SalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingInventoryShipQty {
            get {
                return this.SellingInventoryShipQtyField;
            }
            set {
                if ((this.SellingInventoryShipQtyField.Equals(value) != true)) {
                    this.SellingInventoryShipQtyField = value;
                    this.RaisePropertyChanged("SellingInventoryShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingJobShipQty {
            get {
                return this.SellingJobShipQtyField;
            }
            set {
                if ((this.SellingJobShipQtyField.Equals(value) != true)) {
                    this.SellingJobShipQtyField = value;
                    this.RaisePropertyChanged("SellingJobShipQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellingShipmentQty {
            get {
                return this.SellingShipmentQtyField;
            }
            set {
                if ((this.SellingShipmentQtyField.Equals(value) != true)) {
                    this.SellingShipmentQtyField = value;
                    this.RaisePropertyChanged("SellingShipmentQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShipDate {
            get {
                return this.ShipDateField;
            }
            set {
                if ((this.ShipDateField.Equals(value) != true)) {
                    this.ShipDateField = value;
                    this.RaisePropertyChanged("ShipDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipPerson {
            get {
                return this.ShipPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipPersonField, value) != true)) {
                    this.ShipPersonField = value;
                    this.RaisePropertyChanged("ShipPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackingNumber {
            get {
                return this.TrackingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackingNumberField, value) != true)) {
                    this.TrackingNumberField = value;
                    this.RaisePropertyChanged("TrackingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPartNum {
            get {
                return this.XPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XPartNumField, value) != true)) {
                    this.XPartNumField = value;
                    this.RaisePropertyChanged("XPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XRevisionNum {
            get {
                return this.XRevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.XRevisionNumField, value) != true)) {
                    this.XRevisionNumField = value;
                    this.RaisePropertyChanged("XRevisionNum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool allowVoidedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableRetrieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enableSelectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string partNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string plantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string poLinkValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int quantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid sourceRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string whereClauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xrefCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xrefPartTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool allowVoided {
            get {
                return this.allowVoidedField;
            }
            set {
                if ((this.allowVoidedField.Equals(value) != true)) {
                    this.allowVoidedField = value;
                    this.RaisePropertyChanged("allowVoided");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableCreate {
            get {
                return this.enableCreateField;
            }
            set {
                if ((this.enableCreateField.Equals(value) != true)) {
                    this.enableCreateField = value;
                    this.RaisePropertyChanged("enableCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableRetrieve {
            get {
                return this.enableRetrieveField;
            }
            set {
                if ((this.enableRetrieveField.Equals(value) != true)) {
                    this.enableRetrieveField = value;
                    this.RaisePropertyChanged("enableRetrieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enableSelect {
            get {
                return this.enableSelectField;
            }
            set {
                if ((this.enableSelectField.Equals(value) != true)) {
                    this.enableSelectField = value;
                    this.RaisePropertyChanged("enableSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string partNum {
            get {
                return this.partNumField;
            }
            set {
                if ((object.ReferenceEquals(this.partNumField, value) != true)) {
                    this.partNumField = value;
                    this.RaisePropertyChanged("partNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string plant {
            get {
                return this.plantField;
            }
            set {
                if ((object.ReferenceEquals(this.plantField, value) != true)) {
                    this.plantField = value;
                    this.RaisePropertyChanged("plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poLinkValues {
            get {
                return this.poLinkValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.poLinkValuesField, value) != true)) {
                    this.poLinkValuesField = value;
                    this.RaisePropertyChanged("poLinkValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int quantity {
            get {
                return this.quantityField;
            }
            set {
                if ((this.quantityField.Equals(value) != true)) {
                    this.quantityField = value;
                    this.RaisePropertyChanged("quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid sourceRowID {
            get {
                return this.sourceRowIDField;
            }
            set {
                if ((this.sourceRowIDField.Equals(value) != true)) {
                    this.sourceRowIDField = value;
                    this.RaisePropertyChanged("sourceRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transType {
            get {
                return this.transTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.transTypeField, value) != true)) {
                    this.transTypeField = value;
                    this.RaisePropertyChanged("transType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string whereClause {
            get {
                return this.whereClauseField;
            }
            set {
                if ((object.ReferenceEquals(this.whereClauseField, value) != true)) {
                    this.whereClauseField = value;
                    this.RaisePropertyChanged("whereClause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xrefCustNum {
            get {
                return this.xrefCustNumField;
            }
            set {
                if ((this.xrefCustNumField.Equals(value) != true)) {
                    this.xrefCustNumField = value;
                    this.RaisePropertyChanged("xrefCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartNum {
            get {
                return this.xrefPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartNumField, value) != true)) {
                    this.xrefPartNumField = value;
                    this.RaisePropertyChanged("xrefPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xrefPartType {
            get {
                return this.xrefPartTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.xrefPartTypeField, value) != true)) {
                    this.xrefPartTypeField = value;
                    this.RaisePropertyChanged("xrefPartType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MtlQueueRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class MtlQueueRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssemblySeqDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedToEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.MtlQueueRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustRegionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustTerritoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DisableTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistributionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EpicorFSAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSAServiceOrderResourceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool FromTOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromWhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobSeqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastMgrChangeEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastUsedPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MfgLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinMfgLotSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MtlQueueSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NCTranIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NeedByDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NeedByTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NeedByTimeDispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NextAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NextJobSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OkToProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtySiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OnHandQtyWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int POLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLinePartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POLineVenPartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PONumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PORelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackSlipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimWhseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimWhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PurPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QueueIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QueuePickSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMADispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMALineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RMALineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMANumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RMAReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferencePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReleaseForPickingSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RequestErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedByEmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RevisionNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SameWhseGroupEmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedByEmpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedByEmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SelectedForProcessingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortByPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SysDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetAssemblySeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetMtlSeqField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetTFOrdLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetTFOrdNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToBinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToWhseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToWhseDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TranTypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransferLeadTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransferPlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumAddress3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumDefaultFOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumName_Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumTermsCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumVendorID_Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorNumZIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool VisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseGroupCodeWhseGroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WaveNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WaveRelatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhseGroupCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssemblySeq {
            get {
                return this.AssemblySeqField;
            }
            set {
                if ((this.AssemblySeqField.Equals(value) != true)) {
                    this.AssemblySeqField = value;
                    this.RaisePropertyChanged("AssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblySeqDescription {
            get {
                return this.AssemblySeqDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblySeqDescriptionField, value) != true)) {
                    this.AssemblySeqDescriptionField = value;
                    this.RaisePropertyChanged("AssemblySeqDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToEmpID {
            get {
                return this.AssignedToEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToEmpIDField, value) != true)) {
                    this.AssignedToEmpIDField = value;
                    this.RaisePropertyChanged("AssignedToEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.MtlQueueRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustIDField, value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustRegionCode {
            get {
                return this.CustRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustRegionCodeField, value) != true)) {
                    this.CustRegionCodeField = value;
                    this.RaisePropertyChanged("CustRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustTerritoryID {
            get {
                return this.CustTerritoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustTerritoryIDField, value) != true)) {
                    this.CustTerritoryIDField = value;
                    this.RaisePropertyChanged("CustTerritoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DisableTO {
            get {
                return this.DisableTOField;
            }
            set {
                if ((this.DisableTOField.Equals(value) != true)) {
                    this.DisableTOField = value;
                    this.RaisePropertyChanged("DisableTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistributionType {
            get {
                return this.DistributionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributionTypeField, value) != true)) {
                    this.DistributionTypeField = value;
                    this.RaisePropertyChanged("DistributionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EpicorFSA {
            get {
                return this.EpicorFSAField;
            }
            set {
                if ((this.EpicorFSAField.Equals(value) != true)) {
                    this.EpicorFSAField = value;
                    this.RaisePropertyChanged("EpicorFSA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderNumber {
            get {
                return this.FSAServiceOrderNumberField;
            }
            set {
                if ((this.FSAServiceOrderNumberField.Equals(value) != true)) {
                    this.FSAServiceOrderNumberField = value;
                    this.RaisePropertyChanged("FSAServiceOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSAServiceOrderResourceNum {
            get {
                return this.FSAServiceOrderResourceNumField;
            }
            set {
                if ((this.FSAServiceOrderResourceNumField.Equals(value) != true)) {
                    this.FSAServiceOrderResourceNumField = value;
                    this.RaisePropertyChanged("FSAServiceOrderResourceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromBinNum {
            get {
                return this.FromBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.FromBinNumField, value) != true)) {
                    this.FromBinNumField = value;
                    this.RaisePropertyChanged("FromBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromInv {
            get {
                return this.FromInvField;
            }
            set {
                if ((this.FromInvField.Equals(value) != true)) {
                    this.FromInvField = value;
                    this.RaisePropertyChanged("FromInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromJob {
            get {
                return this.FromJobField;
            }
            set {
                if ((this.FromJobField.Equals(value) != true)) {
                    this.FromJobField = value;
                    this.RaisePropertyChanged("FromJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromPCID {
            get {
                return this.FromPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FromPCIDField, value) != true)) {
                    this.FromPCIDField = value;
                    this.RaisePropertyChanged("FromPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromPO {
            get {
                return this.FromPOField;
            }
            set {
                if ((this.FromPOField.Equals(value) != true)) {
                    this.FromPOField = value;
                    this.RaisePropertyChanged("FromPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FromTO {
            get {
                return this.FromTOField;
            }
            set {
                if ((this.FromTOField.Equals(value) != true)) {
                    this.FromTOField = value;
                    this.RaisePropertyChanged("FromTO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromWhse {
            get {
                return this.FromWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.FromWhseField, value) != true)) {
                    this.FromWhseField = value;
                    this.RaisePropertyChanged("FromWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromWhseDesc {
            get {
                return this.FromWhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FromWhseDescField, value) != true)) {
                    this.FromWhseDescField = value;
                    this.RaisePropertyChanged("FromWhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HoldStatus {
            get {
                return this.HoldStatusField;
            }
            set {
                if ((this.HoldStatusField.Equals(value) != true)) {
                    this.HoldStatusField = value;
                    this.RaisePropertyChanged("HoldStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IUM {
            get {
                return this.IUMField;
            }
            set {
                if ((object.ReferenceEquals(this.IUMField, value) != true)) {
                    this.IUMField = value;
                    this.RaisePropertyChanged("IUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNum {
            get {
                return this.JobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumField, value) != true)) {
                    this.JobNumField = value;
                    this.RaisePropertyChanged("JobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobNumPartDescription {
            get {
                return this.JobNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNumPartDescriptionField, value) != true)) {
                    this.JobNumPartDescriptionField = value;
                    this.RaisePropertyChanged("JobNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobSeq {
            get {
                return this.JobSeqField;
            }
            set {
                if ((this.JobSeqField.Equals(value) != true)) {
                    this.JobSeqField = value;
                    this.RaisePropertyChanged("JobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobSeqType {
            get {
                return this.JobSeqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobSeqTypeField, value) != true)) {
                    this.JobSeqTypeField = value;
                    this.RaisePropertyChanged("JobSeqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastMgrChangeEmpID {
            get {
                return this.LastMgrChangeEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastMgrChangeEmpIDField, value) != true)) {
                    this.LastMgrChangeEmpIDField = value;
                    this.RaisePropertyChanged("LastMgrChangeEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastUsedPCID {
            get {
                return this.LastUsedPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastUsedPCIDField, value) != true)) {
                    this.LastUsedPCIDField = value;
                    this.RaisePropertyChanged("LastUsedPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Lock {
            get {
                return this.LockField;
            }
            set {
                if ((this.LockField.Equals(value) != true)) {
                    this.LockField = value;
                    this.RaisePropertyChanged("Lock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxMfgLotSize {
            get {
                return this.MaxMfgLotSizeField;
            }
            set {
                if ((this.MaxMfgLotSizeField.Equals(value) != true)) {
                    this.MaxMfgLotSizeField = value;
                    this.RaisePropertyChanged("MaxMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MfgLeadTime {
            get {
                return this.MfgLeadTimeField;
            }
            set {
                if ((this.MfgLeadTimeField.Equals(value) != true)) {
                    this.MfgLeadTimeField = value;
                    this.RaisePropertyChanged("MfgLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinMfgLotSize {
            get {
                return this.MinMfgLotSizeField;
            }
            set {
                if ((this.MinMfgLotSizeField.Equals(value) != true)) {
                    this.MinMfgLotSizeField = value;
                    this.RaisePropertyChanged("MinMfgLotSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MtlQueueSeq {
            get {
                return this.MtlQueueSeqField;
            }
            set {
                if ((this.MtlQueueSeqField.Equals(value) != true)) {
                    this.MtlQueueSeqField = value;
                    this.RaisePropertyChanged("MtlQueueSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NCTranID {
            get {
                return this.NCTranIDField;
            }
            set {
                if ((this.NCTranIDField.Equals(value) != true)) {
                    this.NCTranIDField = value;
                    this.RaisePropertyChanged("NCTranID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NeedByDate {
            get {
                return this.NeedByDateField;
            }
            set {
                if ((this.NeedByDateField.Equals(value) != true)) {
                    this.NeedByDateField = value;
                    this.RaisePropertyChanged("NeedByDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NeedByTime {
            get {
                return this.NeedByTimeField;
            }
            set {
                if ((this.NeedByTimeField.Equals(value) != true)) {
                    this.NeedByTimeField = value;
                    this.RaisePropertyChanged("NeedByTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NeedByTimeDisp {
            get {
                return this.NeedByTimeDispField;
            }
            set {
                if ((object.ReferenceEquals(this.NeedByTimeDispField, value) != true)) {
                    this.NeedByTimeDispField = value;
                    this.RaisePropertyChanged("NeedByTimeDisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextAssemblySeq {
            get {
                return this.NextAssemblySeqField;
            }
            set {
                if ((this.NextAssemblySeqField.Equals(value) != true)) {
                    this.NextAssemblySeqField = value;
                    this.RaisePropertyChanged("NextAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextJobSeq {
            get {
                return this.NextJobSeqField;
            }
            set {
                if ((this.NextJobSeqField.Equals(value) != true)) {
                    this.NextJobSeqField = value;
                    this.RaisePropertyChanged("NextJobSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NonStock {
            get {
                return this.NonStockField;
            }
            set {
                if ((this.NonStockField.Equals(value) != true)) {
                    this.NonStockField = value;
                    this.RaisePropertyChanged("NonStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OkToProcess {
            get {
                return this.OkToProcessField;
            }
            set {
                if ((this.OkToProcessField.Equals(value) != true)) {
                    this.OkToProcessField = value;
                    this.RaisePropertyChanged("OkToProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQtySite {
            get {
                return this.OnHandQtySiteField;
            }
            set {
                if ((this.OnHandQtySiteField.Equals(value) != true)) {
                    this.OnHandQtySiteField = value;
                    this.RaisePropertyChanged("OnHandQtySite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OnHandQtyWhse {
            get {
                return this.OnHandQtyWhseField;
            }
            set {
                if ((this.OnHandQtyWhseField.Equals(value) != true)) {
                    this.OnHandQtyWhseField = value;
                    this.RaisePropertyChanged("OnHandQtyWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int POLine {
            get {
                return this.POLineField;
            }
            set {
                if ((this.POLineField.Equals(value) != true)) {
                    this.POLineField = value;
                    this.RaisePropertyChanged("POLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineLineDesc {
            get {
                return this.POLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineLineDescField, value) != true)) {
                    this.POLineLineDescField = value;
                    this.RaisePropertyChanged("POLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLinePartNum {
            get {
                return this.POLinePartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLinePartNumField, value) != true)) {
                    this.POLinePartNumField = value;
                    this.RaisePropertyChanged("POLinePartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POLineVenPartNum {
            get {
                return this.POLineVenPartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.POLineVenPartNumField, value) != true)) {
                    this.POLineVenPartNumField = value;
                    this.RaisePropertyChanged("POLineVenPartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PONum {
            get {
                return this.PONumField;
            }
            set {
                if ((this.PONumField.Equals(value) != true)) {
                    this.PONumField = value;
                    this.RaisePropertyChanged("PONum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PORelNum {
            get {
                return this.PORelNumField;
            }
            set {
                if ((this.PORelNumField.Equals(value) != true)) {
                    this.PORelNumField = value;
                    this.RaisePropertyChanged("PORelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PackLine {
            get {
                return this.PackLineField;
            }
            set {
                if ((this.PackLineField.Equals(value) != true)) {
                    this.PackLineField = value;
                    this.RaisePropertyChanged("PackLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackSlip {
            get {
                return this.PackSlipField;
            }
            set {
                if ((object.ReferenceEquals(this.PackSlipField, value) != true)) {
                    this.PackSlipField = value;
                    this.RaisePropertyChanged("PackSlip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackStation {
            get {
                return this.PackStationField;
            }
            set {
                if ((object.ReferenceEquals(this.PackStationField, value) != true)) {
                    this.PackStationField = value;
                    this.RaisePropertyChanged("PackStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartDescription {
            get {
                return this.PartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartDescriptionField, value) != true)) {
                    this.PartDescriptionField = value;
                    this.RaisePropertyChanged("PartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlantName {
            get {
                return this.PlantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantNameField, value) != true)) {
                    this.PlantNameField = value;
                    this.RaisePropertyChanged("PlantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimWhseCode {
            get {
                return this.PrimWhseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimWhseCodeField, value) != true)) {
                    this.PrimWhseCodeField = value;
                    this.RaisePropertyChanged("PrimWhseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimWhseDesc {
            get {
                return this.PrimWhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimWhseDescField, value) != true)) {
                    this.PrimWhseDescField = value;
                    this.RaisePropertyChanged("PrimWhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PurPoint {
            get {
                return this.PurPointField;
            }
            set {
                if ((object.ReferenceEquals(this.PurPointField, value) != true)) {
                    this.PurPointField = value;
                    this.RaisePropertyChanged("PurPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueID {
            get {
                return this.QueueIDField;
            }
            set {
                if ((object.ReferenceEquals(this.QueueIDField, value) != true)) {
                    this.QueueIDField = value;
                    this.RaisePropertyChanged("QueueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QueuePickSeq {
            get {
                return this.QueuePickSeqField;
            }
            set {
                if ((this.QueuePickSeqField.Equals(value) != true)) {
                    this.QueuePickSeqField = value;
                    this.RaisePropertyChanged("QueuePickSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMADisp {
            get {
                return this.RMADispField;
            }
            set {
                if ((this.RMADispField.Equals(value) != true)) {
                    this.RMADispField = value;
                    this.RaisePropertyChanged("RMADisp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMALine {
            get {
                return this.RMALineField;
            }
            set {
                if ((this.RMALineField.Equals(value) != true)) {
                    this.RMALineField = value;
                    this.RaisePropertyChanged("RMALine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RMALineLineDesc {
            get {
                return this.RMALineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.RMALineLineDescField, value) != true)) {
                    this.RMALineLineDescField = value;
                    this.RaisePropertyChanged("RMALineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMANum {
            get {
                return this.RMANumField;
            }
            set {
                if ((this.RMANumField.Equals(value) != true)) {
                    this.RMANumField = value;
                    this.RaisePropertyChanged("RMANum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RMAReceipt {
            get {
                return this.RMAReceiptField;
            }
            set {
                if ((this.RMAReceiptField.Equals(value) != true)) {
                    this.RMAReceiptField = value;
                    this.RaisePropertyChanged("RMAReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferencePrefix {
            get {
                return this.ReferencePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferencePrefixField, value) != true)) {
                    this.ReferencePrefixField = value;
                    this.RaisePropertyChanged("ReferencePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReleaseForPickingSeq {
            get {
                return this.ReleaseForPickingSeqField;
            }
            set {
                if ((this.ReleaseForPickingSeqField.Equals(value) != true)) {
                    this.ReleaseForPickingSeqField = value;
                    this.RaisePropertyChanged("ReleaseForPickingSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequestError {
            get {
                return this.RequestErrorField;
            }
            set {
                if ((this.RequestErrorField.Equals(value) != true)) {
                    this.RequestErrorField = value;
                    this.RaisePropertyChanged("RequestError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestMsg {
            get {
                return this.RequestMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestMsgField, value) != true)) {
                    this.RequestMsgField = value;
                    this.RaisePropertyChanged("RequestMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedByEmpID {
            get {
                return this.RequestedByEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByEmpIDField, value) != true)) {
                    this.RequestedByEmpIDField = value;
                    this.RaisePropertyChanged("RequestedByEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedByEmpName {
            get {
                return this.RequestedByEmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedByEmpNameField, value) != true)) {
                    this.RequestedByEmpNameField = value;
                    this.RaisePropertyChanged("RequestedByEmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNum {
            get {
                return this.RevisionNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumField, value) != true)) {
                    this.RevisionNumField = value;
                    this.RaisePropertyChanged("RevisionNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SameWhseGroupEmp {
            get {
                return this.SameWhseGroupEmpField;
            }
            set {
                if ((this.SameWhseGroupEmpField.Equals(value) != true)) {
                    this.SameWhseGroupEmpField = value;
                    this.RaisePropertyChanged("SameWhseGroupEmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedByEmpID {
            get {
                return this.SelectedByEmpIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedByEmpIDField, value) != true)) {
                    this.SelectedByEmpIDField = value;
                    this.RaisePropertyChanged("SelectedByEmpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedByEmpName {
            get {
                return this.SelectedByEmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedByEmpNameField, value) != true)) {
                    this.SelectedByEmpNameField = value;
                    this.RaisePropertyChanged("SelectedByEmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SelectedForProcessing {
            get {
                return this.SelectedForProcessingField;
            }
            set {
                if ((this.SelectedForProcessingField.Equals(value) != true)) {
                    this.SelectedForProcessingField = value;
                    this.RaisePropertyChanged("SelectedForProcessing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCity {
            get {
                return this.ShipToCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCityField, value) != true)) {
                    this.ShipToCityField = value;
                    this.RaisePropertyChanged("ShipToCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToCountry {
            get {
                return this.ShipToCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToCountryField, value) != true)) {
                    this.ShipToCountryField = value;
                    this.RaisePropertyChanged("ShipToCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToName {
            get {
                return this.ShipToNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNameField, value) != true)) {
                    this.ShipToNameField = value;
                    this.RaisePropertyChanged("ShipToName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToState {
            get {
                return this.ShipToStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToStateField, value) != true)) {
                    this.ShipToStateField = value;
                    this.RaisePropertyChanged("ShipToState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToZIP {
            get {
                return this.ShipToZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToZIPField, value) != true)) {
                    this.ShipToZIPField = value;
                    this.RaisePropertyChanged("ShipToZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortByPriority {
            get {
                return this.SortByPriorityField;
            }
            set {
                if ((this.SortByPriorityField.Equals(value) != true)) {
                    this.SortByPriorityField = value;
                    this.RaisePropertyChanged("SortByPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceTypeDesc {
            get {
                return this.SourceTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceTypeDescField, value) != true)) {
                    this.SourceTypeDescField = value;
                    this.RaisePropertyChanged("SourceTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SysDate {
            get {
                return this.SysDateField;
            }
            set {
                if ((this.SysDateField.Equals(value) != true)) {
                    this.SysDateField = value;
                    this.RaisePropertyChanged("SysDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysTime {
            get {
                return this.SysTimeField;
            }
            set {
                if ((this.SysTimeField.Equals(value) != true)) {
                    this.SysTimeField = value;
                    this.RaisePropertyChanged("SysTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetAssemblySeq {
            get {
                return this.TargetAssemblySeqField;
            }
            set {
                if ((this.TargetAssemblySeqField.Equals(value) != true)) {
                    this.TargetAssemblySeqField = value;
                    this.RaisePropertyChanged("TargetAssemblySeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetJobNum {
            get {
                return this.TargetJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetJobNumField, value) != true)) {
                    this.TargetJobNumField = value;
                    this.RaisePropertyChanged("TargetJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetMtlSeq {
            get {
                return this.TargetMtlSeqField;
            }
            set {
                if ((this.TargetMtlSeqField.Equals(value) != true)) {
                    this.TargetMtlSeqField = value;
                    this.RaisePropertyChanged("TargetMtlSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetTFOrdLine {
            get {
                return this.TargetTFOrdLineField;
            }
            set {
                if ((this.TargetTFOrdLineField.Equals(value) != true)) {
                    this.TargetTFOrdLineField = value;
                    this.RaisePropertyChanged("TargetTFOrdLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetTFOrdNum {
            get {
                return this.TargetTFOrdNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetTFOrdNumField, value) != true)) {
                    this.TargetTFOrdNumField = value;
                    this.RaisePropertyChanged("TargetTFOrdNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToBinNum {
            get {
                return this.ToBinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ToBinNumField, value) != true)) {
                    this.ToBinNumField = value;
                    this.RaisePropertyChanged("ToBinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToPCID {
            get {
                return this.ToPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ToPCIDField, value) != true)) {
                    this.ToPCIDField = value;
                    this.RaisePropertyChanged("ToPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToWhse {
            get {
                return this.ToWhseField;
            }
            set {
                if ((object.ReferenceEquals(this.ToWhseField, value) != true)) {
                    this.ToWhseField = value;
                    this.RaisePropertyChanged("ToWhse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToWhseDesc {
            get {
                return this.ToWhseDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ToWhseDescField, value) != true)) {
                    this.ToWhseDescField = value;
                    this.RaisePropertyChanged("ToWhseDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranSource {
            get {
                return this.TranSourceField;
            }
            set {
                if ((object.ReferenceEquals(this.TranSourceField, value) != true)) {
                    this.TranSourceField = value;
                    this.RaisePropertyChanged("TranSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranStatus {
            get {
                return this.TranStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TranStatusField, value) != true)) {
                    this.TranStatusField = value;
                    this.RaisePropertyChanged("TranStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranType {
            get {
                return this.TranTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeField, value) != true)) {
                    this.TranTypeField = value;
                    this.RaisePropertyChanged("TranType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TranTypeDesc {
            get {
                return this.TranTypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TranTypeDescField, value) != true)) {
                    this.TranTypeDescField = value;
                    this.RaisePropertyChanged("TranTypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransferLeadTime {
            get {
                return this.TransferLeadTimeField;
            }
            set {
                if ((this.TransferLeadTimeField.Equals(value) != true)) {
                    this.TransferLeadTimeField = value;
                    this.RaisePropertyChanged("TransferLeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransferPlant {
            get {
                return this.TransferPlantField;
            }
            set {
                if ((object.ReferenceEquals(this.TransferPlantField, value) != true)) {
                    this.TransferPlantField = value;
                    this.RaisePropertyChanged("TransferPlant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorNum {
            get {
                return this.VendorNumField;
            }
            set {
                if ((this.VendorNumField.Equals(value) != true)) {
                    this.VendorNumField = value;
                    this.RaisePropertyChanged("VendorNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress1 {
            get {
                return this.VendorNumAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress1Field, value) != true)) {
                    this.VendorNumAddress1Field = value;
                    this.RaisePropertyChanged("VendorNumAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress2 {
            get {
                return this.VendorNumAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress2Field, value) != true)) {
                    this.VendorNumAddress2Field = value;
                    this.RaisePropertyChanged("VendorNumAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumAddress3 {
            get {
                return this.VendorNumAddress3Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumAddress3Field, value) != true)) {
                    this.VendorNumAddress3Field = value;
                    this.RaisePropertyChanged("VendorNumAddress3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCity {
            get {
                return this.VendorNumCityField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCityField, value) != true)) {
                    this.VendorNumCityField = value;
                    this.RaisePropertyChanged("VendorNumCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCountry {
            get {
                return this.VendorNumCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCountryField, value) != true)) {
                    this.VendorNumCountryField = value;
                    this.RaisePropertyChanged("VendorNumCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumCurrencyCode {
            get {
                return this.VendorNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumCurrencyCodeField, value) != true)) {
                    this.VendorNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("VendorNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumDefaultFOB {
            get {
                return this.VendorNumDefaultFOBField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumDefaultFOBField, value) != true)) {
                    this.VendorNumDefaultFOBField = value;
                    this.RaisePropertyChanged("VendorNumDefaultFOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName {
            get {
                return this.VendorNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumNameField, value) != true)) {
                    this.VendorNumNameField = value;
                    this.RaisePropertyChanged("VendorNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumName_ {
            get {
                return this.VendorNumName_Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumName_Field, value) != true)) {
                    this.VendorNumName_Field = value;
                    this.RaisePropertyChanged("VendorNumName_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumState {
            get {
                return this.VendorNumStateField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumStateField, value) != true)) {
                    this.VendorNumStateField = value;
                    this.RaisePropertyChanged("VendorNumState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumTermsCode {
            get {
                return this.VendorNumTermsCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumTermsCodeField, value) != true)) {
                    this.VendorNumTermsCodeField = value;
                    this.RaisePropertyChanged("VendorNumTermsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID {
            get {
                return this.VendorNumVendorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorIDField, value) != true)) {
                    this.VendorNumVendorIDField = value;
                    this.RaisePropertyChanged("VendorNumVendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumVendorID_ {
            get {
                return this.VendorNumVendorID_Field;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumVendorID_Field, value) != true)) {
                    this.VendorNumVendorID_Field = value;
                    this.RaisePropertyChanged("VendorNumVendorID_");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorNumZIP {
            get {
                return this.VendorNumZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNumZIPField, value) != true)) {
                    this.VendorNumZIPField = value;
                    this.RaisePropertyChanged("VendorNumZIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Visible {
            get {
                return this.VisibleField;
            }
            set {
                if ((this.VisibleField.Equals(value) != true)) {
                    this.VisibleField = value;
                    this.RaisePropertyChanged("Visible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseGroupCodeWhseGroupDesc {
            get {
                return this.WarehouseGroupCodeWhseGroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseGroupCodeWhseGroupDescField, value) != true)) {
                    this.WarehouseGroupCodeWhseGroupDescField = value;
                    this.RaisePropertyChanged("WarehouseGroupCodeWhseGroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WaveNum {
            get {
                return this.WaveNumField;
            }
            set {
                if ((this.WaveNumField.Equals(value) != true)) {
                    this.WaveNumField = value;
                    this.RaisePropertyChanged("WaveNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WaveRelated {
            get {
                return this.WaveRelatedField;
            }
            set {
                if ((this.WaveRelatedField.Equals(value) != true)) {
                    this.WaveRelatedField = value;
                    this.RaisePropertyChanged("WaveRelated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhseGroupCode {
            get {
                return this.WhseGroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WhseGroupCodeField, value) != true)) {
                    this.WhseGroupCodeField = value;
                    this.RaisePropertyChanged("WhseGroupCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PickedOrdersRow", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PickedOrdersRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTConNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BTCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BinNumDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PickedOrdersRowColumnOrder ColumnNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConInvMethField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumBTNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumCustIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustNumNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoldPrdInvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LotNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OTSAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineLineDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCardMemberNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumCurrencyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderRelNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentPCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumIUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPartDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumPricePerCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNumSalesUMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PartNumSellingFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackDimensionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PartNumTrackSerialNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReqDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ShipToCustNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipToNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipViaCodeWebDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplyJobNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SysRevIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UOMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WarehouseCodeDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTConNum {
            get {
                return this.BTConNumField;
            }
            set {
                if ((this.BTConNumField.Equals(value) != true)) {
                    this.BTConNumField = value;
                    this.RaisePropertyChanged("BTConNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BTCustNum {
            get {
                return this.BTCustNumField;
            }
            set {
                if ((this.BTCustNumField.Equals(value) != true)) {
                    this.BTCustNumField = value;
                    this.RaisePropertyChanged("BTCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNum {
            get {
                return this.BinNumField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumField, value) != true)) {
                    this.BinNumField = value;
                    this.RaisePropertyChanged("BinNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BinNumDescription {
            get {
                return this.BinNumDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.BinNumDescriptionField, value) != true)) {
                    this.BinNumDescriptionField = value;
                    this.RaisePropertyChanged("BinNumDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BitFlag {
            get {
                return this.BitFlagField;
            }
            set {
                if ((this.BitFlagField.Equals(value) != true)) {
                    this.BitFlagField = value;
                    this.RaisePropertyChanged("BitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PickedOrdersRowColumnOrder ColumnNames {
            get {
                return this.ColumnNamesField;
            }
            set {
                if ((this.ColumnNamesField.Equals(value) != true)) {
                    this.ColumnNamesField = value;
                    this.RaisePropertyChanged("ColumnNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Complete {
            get {
                return this.CompleteField;
            }
            set {
                if ((this.CompleteField.Equals(value) != true)) {
                    this.CompleteField = value;
                    this.RaisePropertyChanged("Complete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConInvMeth {
            get {
                return this.ConInvMethField;
            }
            set {
                if ((object.ReferenceEquals(this.ConInvMethField, value) != true)) {
                    this.ConInvMethField = value;
                    this.RaisePropertyChanged("ConInvMeth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustNum {
            get {
                return this.CustNumField;
            }
            set {
                if ((this.CustNumField.Equals(value) != true)) {
                    this.CustNumField = value;
                    this.RaisePropertyChanged("CustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumBTName {
            get {
                return this.CustNumBTNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumBTNameField, value) != true)) {
                    this.CustNumBTNameField = value;
                    this.RaisePropertyChanged("CustNumBTName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumCustID {
            get {
                return this.CustNumCustIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumCustIDField, value) != true)) {
                    this.CustNumCustIDField = value;
                    this.RaisePropertyChanged("CustNumCustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustNumName {
            get {
                return this.CustNumNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNumNameField, value) != true)) {
                    this.CustNumNameField = value;
                    this.RaisePropertyChanged("CustNumName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HoldPrdInv {
            get {
                return this.HoldPrdInvField;
            }
            set {
                if ((this.HoldPrdInvField.Equals(value) != true)) {
                    this.HoldPrdInvField = value;
                    this.RaisePropertyChanged("HoldPrdInv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNum {
            get {
                return this.LotNumField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumField, value) != true)) {
                    this.LotNumField = value;
                    this.RaisePropertyChanged("LotNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OTSAddr {
            get {
                return this.OTSAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.OTSAddrField, value) != true)) {
                    this.OTSAddrField = value;
                    this.RaisePropertyChanged("OTSAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLine {
            get {
                return this.OrderLineField;
            }
            set {
                if ((this.OrderLineField.Equals(value) != true)) {
                    this.OrderLineField = value;
                    this.RaisePropertyChanged("OrderLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineLineDesc {
            get {
                return this.OrderLineLineDescField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineLineDescField, value) != true)) {
                    this.OrderLineLineDescField = value;
                    this.RaisePropertyChanged("OrderLineLineDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCardMemberName {
            get {
                return this.OrderNumCardMemberNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCardMemberNameField, value) != true)) {
                    this.OrderNumCardMemberNameField = value;
                    this.RaisePropertyChanged("OrderNumCardMemberName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumCurrencyCode {
            get {
                return this.OrderNumCurrencyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumCurrencyCodeField, value) != true)) {
                    this.OrderNumCurrencyCodeField = value;
                    this.RaisePropertyChanged("OrderNumCurrencyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderRelNum {
            get {
                return this.OrderRelNumField;
            }
            set {
                if ((this.OrderRelNumField.Equals(value) != true)) {
                    this.OrderRelNumField = value;
                    this.RaisePropertyChanged("OrderRelNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PCID {
            get {
                return this.PCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PCIDField, value) != true)) {
                    this.PCIDField = value;
                    this.RaisePropertyChanged("PCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentPCID {
            get {
                return this.ParentPCIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentPCIDField, value) != true)) {
                    this.ParentPCIDField = value;
                    this.RaisePropertyChanged("ParentPCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNum {
            get {
                return this.PartNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumField, value) != true)) {
                    this.PartNumField = value;
                    this.RaisePropertyChanged("PartNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumIUM {
            get {
                return this.PartNumIUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumIUMField, value) != true)) {
                    this.PartNumIUMField = value;
                    this.RaisePropertyChanged("PartNumIUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPartDescription {
            get {
                return this.PartNumPartDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPartDescriptionField, value) != true)) {
                    this.PartNumPartDescriptionField = value;
                    this.RaisePropertyChanged("PartNumPartDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumPricePerCode {
            get {
                return this.PartNumPricePerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumPricePerCodeField, value) != true)) {
                    this.PartNumPricePerCodeField = value;
                    this.RaisePropertyChanged("PartNumPricePerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNumSalesUM {
            get {
                return this.PartNumSalesUMField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNumSalesUMField, value) != true)) {
                    this.PartNumSalesUMField = value;
                    this.RaisePropertyChanged("PartNumSalesUM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PartNumSellingFactor {
            get {
                return this.PartNumSellingFactorField;
            }
            set {
                if ((this.PartNumSellingFactorField.Equals(value) != true)) {
                    this.PartNumSellingFactorField = value;
                    this.RaisePropertyChanged("PartNumSellingFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackDimension {
            get {
                return this.PartNumTrackDimensionField;
            }
            set {
                if ((this.PartNumTrackDimensionField.Equals(value) != true)) {
                    this.PartNumTrackDimensionField = value;
                    this.RaisePropertyChanged("PartNumTrackDimension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackLots {
            get {
                return this.PartNumTrackLotsField;
            }
            set {
                if ((this.PartNumTrackLotsField.Equals(value) != true)) {
                    this.PartNumTrackLotsField = value;
                    this.RaisePropertyChanged("PartNumTrackLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PartNumTrackSerialNum {
            get {
                return this.PartNumTrackSerialNumField;
            }
            set {
                if ((this.PartNumTrackSerialNumField.Equals(value) != true)) {
                    this.PartNumTrackSerialNumField = value;
                    this.RaisePropertyChanged("PartNumTrackSerialNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plant {
            get {
                return this.PlantField;
            }
            set {
                if ((object.ReferenceEquals(this.PlantField, value) != true)) {
                    this.PlantField = value;
                    this.RaisePropertyChanged("Plant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIDField, value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReqDate {
            get {
                return this.ReqDateField;
            }
            set {
                if ((this.ReqDateField.Equals(value) != true)) {
                    this.ReqDateField = value;
                    this.RaisePropertyChanged("ReqDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ShipToCustNum {
            get {
                return this.ShipToCustNumField;
            }
            set {
                if ((this.ShipToCustNumField.Equals(value) != true)) {
                    this.ShipToCustNumField = value;
                    this.RaisePropertyChanged("ShipToCustNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipToNum {
            get {
                return this.ShipToNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipToNumField, value) != true)) {
                    this.ShipToNumField = value;
                    this.RaisePropertyChanged("ShipToNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCode {
            get {
                return this.ShipViaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeField, value) != true)) {
                    this.ShipViaCodeField = value;
                    this.RaisePropertyChanged("ShipViaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeDescription {
            get {
                return this.ShipViaCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeDescriptionField, value) != true)) {
                    this.ShipViaCodeDescriptionField = value;
                    this.RaisePropertyChanged("ShipViaCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipViaCodeWebDesc {
            get {
                return this.ShipViaCodeWebDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipViaCodeWebDescField, value) != true)) {
                    this.ShipViaCodeWebDescField = value;
                    this.RaisePropertyChanged("ShipViaCodeWebDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplyJobNum {
            get {
                return this.SupplyJobNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplyJobNumField, value) != true)) {
                    this.SupplyJobNumField = value;
                    this.RaisePropertyChanged("SupplyJobNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SysRevID {
            get {
                return this.SysRevIDField;
            }
            set {
                if ((this.SysRevIDField.Equals(value) != true)) {
                    this.SysRevIDField = value;
                    this.RaisePropertyChanged("SysRevID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UOM {
            get {
                return this.UOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UOMField, value) != true)) {
                    this.UOMField = value;
                    this.RaisePropertyChanged("UOM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCode {
            get {
                return this.WarehouseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeField, value) != true)) {
                    this.WarehouseCodeField = value;
                    this.RaisePropertyChanged("WarehouseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WarehouseCodeDescription {
            get {
                return this.WarehouseCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.WarehouseCodeDescriptionField, value) != true)) {
                    this.WarehouseCodeDescriptionField = value;
                    this.RaisePropertyChanged("WarehouseCodeDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorRow", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorRow : EpicWAS.Epicor.CustShipSvc.IceRow {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ErrorSysRowIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorLevel {
            get {
                return this.ErrorLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorLevelField, value) != true)) {
                    this.ErrorLevelField = value;
                    this.RaisePropertyChanged("ErrorLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ErrorSysRowID {
            get {
                return this.ErrorSysRowIDField;
            }
            set {
                if ((this.ErrorSysRowIDField.Equals(value) != true)) {
                    this.ErrorSysRowIDField = value;
                    this.RaisePropertyChanged("ErrorSysRowID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorText {
            get {
                return this.ErrorTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTextField, value) != true)) {
                    this.ErrorTextField = value;
                    this.RaisePropertyChanged("ErrorText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserDefinedColumns", Namespace="http://epicor.com/UserDefinedColumns", ItemName="Column", KeyName="Name", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserDefinedColumns : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable CartonTrkDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable LegalNumberGenerateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable ReplicatedPacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable SalesKitCompIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable SelectedIDNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipCOOTable ShipCOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlTable ShipDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable ShipDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable ShipDtlPackagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable ShipDtlTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadTable ShipHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable ShipHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipMiscTable ShipMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable ShipTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipUPSTable ShipUPSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable CartonTrkDtl {
            get {
                return this.CartonTrkDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.CartonTrkDtlField, value) != true)) {
                    this.CartonTrkDtlField = value;
                    this.RaisePropertyChanged("CartonTrkDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable LegalNumberGenerate {
            get {
                return this.LegalNumberGenerateField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberGenerateField, value) != true)) {
                    this.LegalNumberGenerateField = value;
                    this.RaisePropertyChanged("LegalNumberGenerate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable ReplicatedPacks {
            get {
                return this.ReplicatedPacksField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplicatedPacksField, value) != true)) {
                    this.ReplicatedPacksField = value;
                    this.RaisePropertyChanged("ReplicatedPacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable SalesKitCompIssue {
            get {
                return this.SalesKitCompIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesKitCompIssueField, value) != true)) {
                    this.SalesKitCompIssueField = value;
                    this.RaisePropertyChanged("SalesKitCompIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable SelectedIDNumbers {
            get {
                return this.SelectedIDNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedIDNumbersField, value) != true)) {
                    this.SelectedIDNumbersField = value;
                    this.RaisePropertyChanged("SelectedIDNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipCOOTable ShipCOO {
            get {
                return this.ShipCOOField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCOOField, value) != true)) {
                    this.ShipCOOField = value;
                    this.RaisePropertyChanged("ShipCOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlTable ShipDtl {
            get {
                return this.ShipDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlField, value) != true)) {
                    this.ShipDtlField = value;
                    this.RaisePropertyChanged("ShipDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable ShipDtlAttch {
            get {
                return this.ShipDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlAttchField, value) != true)) {
                    this.ShipDtlAttchField = value;
                    this.RaisePropertyChanged("ShipDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable ShipDtlPackaging {
            get {
                return this.ShipDtlPackagingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlPackagingField, value) != true)) {
                    this.ShipDtlPackagingField = value;
                    this.RaisePropertyChanged("ShipDtlPackaging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable ShipDtlTax {
            get {
                return this.ShipDtlTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlTaxField, value) != true)) {
                    this.ShipDtlTaxField = value;
                    this.RaisePropertyChanged("ShipDtlTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadTable ShipHead {
            get {
                return this.ShipHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipHeadField, value) != true)) {
                    this.ShipHeadField = value;
                    this.RaisePropertyChanged("ShipHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable ShipHeadAttch {
            get {
                return this.ShipHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipHeadAttchField, value) != true)) {
                    this.ShipHeadAttchField = value;
                    this.RaisePropertyChanged("ShipHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipMiscTable ShipMisc {
            get {
                return this.ShipMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipMiscField, value) != true)) {
                    this.ShipMiscField = value;
                    this.RaisePropertyChanged("ShipMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable ShipTaxSum {
            get {
                return this.ShipTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipTaxSumField, value) != true)) {
                    this.ShipTaxSumField = value;
                    this.RaisePropertyChanged("ShipTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipUPSTable ShipUPS {
            get {
                return this.ShipUPSField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipUPSField, value) != true)) {
                    this.ShipUPSField = value;
                    this.RaisePropertyChanged("ShipUPS");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CartonTrkDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CartonTrkDtlRow")]
    [System.SerializableAttribute()]
    public class CartonTrkDtlTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartonTrkDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CartonTrkDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWeight = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFlag = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredValueFlag = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredValue = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSizeUOM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWtUOM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWeight = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestLength = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWidth = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestHeight = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODValue = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CaseID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackStatus = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomPack = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CapturePt = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePhantom = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 30,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumGenOptsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumGenOptsRow")]
    [System.SerializableAttribute()]
    public class LegalNumGenOptsTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumGenOptsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumGenOptsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberID = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransYearSuffix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspTransYear = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowDspTransYear = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Prefix = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableSuffix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransPeriod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PeriodPrefix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowTransPeriod = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationOption = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LegalNumberGenerateTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LegalNumberGenerateRow")]
    [System.SerializableAttribute()]
    public class LegalNumberGenerateTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalNumberGenerateRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LegalNumberGenerateRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberYear = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberPrefix = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberSuffix = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrefixList = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenerationType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableNumberPrefix = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableNumberSuffix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOption = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdditionalParams = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ReplicatedPacksTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ReplicatedPacksRow")]
    [System.SerializableAttribute()]
    public class ReplicatedPacksTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplicatedPacksRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ReplicatedPacksRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicatedPackNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SNFormatRow")]
    [System.SerializableAttribute()]
    public class SNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.SNFormatRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPricePerCode = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackLots = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackSerialNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartTrackDimension = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSalesUM = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartIUM = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSellingFactor = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartDescription = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMaskType = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskExample = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialMaskDescription = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SalesKitCompIssueTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SalesKitCompIssueRow")]
    [System.SerializableAttribute()]
    public class SalesKitCompIssueTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesKitCompIssueRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SalesKitCompIssueRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPartNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitDescription = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWarehouseCodeDesc = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWarehouse = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitQtyFromInv = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitIUM = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitLotNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBinNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBinNumEnabled = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitTrackLots = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitSerialTracked = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitQtyFromInvEnabled = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 20,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedIDNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedIDNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedIDNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedIDNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedIDNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class SelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipCOOTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipCOORow")]
    [System.SerializableAttribute()]
    public class ShipCOOTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipCOORow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipCOORowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipCOORowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrigCountry = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QtyPerc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValuePerc = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelatedToFile = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryDescription = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 14,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipDtlTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipDtlRow")]
    [System.SerializableAttribute()]
    public class ShipDtlTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipDtlRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipDtlRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurInventoryShipQty = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShipQty = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Packages = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCmpl = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdatedInventory = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TMBilling = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WUM = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCode = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EffectiveDate = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialDuration = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborDuration = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscDuration = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialMod = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborMod = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscMod = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaterialExpiration = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LaborExpiration = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscExpiration = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastExpiration = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyComment = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractNum = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCode = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Onsite = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MatCovered = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabCovered = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCovered = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingInventoryShipQty = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingJobShipQty = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactor = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalNetWeight = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIPWarehouseCode = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIPBinNum = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingFactorDirection = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HeaderShipComment = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitParentLine = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryShipUOM = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobShipUOM = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackSerialNum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobLotNum = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinType = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCompliant = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ComplianceMsg = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscountPercent = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PricePerCode = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtPrice = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocExtPrice = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ExtPrice = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ExtPrice = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ExtPrice = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitPrice = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocUnitPrice = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1UnitPrice = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2UnitPrice = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3UnitPrice = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickedAutoAllocatedQty = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InDiscount = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInDiscount = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InDiscount = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InDiscount = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InDiscount = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InExtPrice = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInExtPrice = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InExtPrice = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InExtPrice = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InExtPrice = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InUnitPrice = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocInUnitPrice = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1InUnitPrice = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2InUnitPrice = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3InUnitPrice = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCustNum = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFShipToNum = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTMF = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFName = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress1 = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress2 = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFAddress3 = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCity = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFState = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFZIP = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFContact = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFFaxNum = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFPhoneNum = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCountryNum = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RenewalNbr = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipOvers = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowedOvers = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowedUnders = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAllocatedQty = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCIDItemSeq = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCIDParentLine = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DockingStation = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseShipDtlInfo = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCodePartNum = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustContainerPartNum = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelType = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantySendToFSA = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAEquipment = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuyToOrder = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DtlError = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableInvSerialBtn = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableJobFields = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableMfgSerialBtn = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableOBInvSerialBtn = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableOBMfgSerialBtn = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePackageControl = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePOSerialBtn = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtJobNum = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvLegalNumber = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBackFlush = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitBinNum = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitCompIssue = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitCompShipComplete = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitDescription = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitFlag = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitIUM = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitLotNum = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitMassIssue = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitParentIssue = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPartNum = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitQtyFromInv = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitQtyFromInvEnabled = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitSerialTracked = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitTrackLots = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWarehouse = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWarehouseCodeDesc = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineContentValue = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineTax = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LinkMsg = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MarkForAddrList = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCustID = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHold = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelOurReqQty = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShipIUM = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShippedQty = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurRemainQty = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurRemainUM = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurReqQty = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurReqUM = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurShippedQty = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurShippedUM = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurStockShippedQty = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartAESExp = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartCompany = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartECNNumber = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartExpLicNumber = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartExpLicType = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazClass = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazGvrnmtID = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazItem = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazPackInstr = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazSub = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHazTechName = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartHTS = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNAFTAOrigCountry = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNAFTAPref = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNAFTAProd = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartOrigCountry = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartPartNum = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartSchedBcode = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartUseHTSDesc = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestDate = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1LineTax = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2LineTax = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3LineTax = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingRemainQty = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingRemainUM = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingReqQty = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingReqUM = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipmentQty = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipmentUM = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShippedQty = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShippedUM = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToWarning = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StockPart = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseList = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCodeList = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayInvQty = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocLineTax = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackID = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableInvIDBtn = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableMfgIDBtn = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAInstallationCost = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAInstallationOrderLine = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAInstallationOrderNum = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAInstallationRequired = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAInstallationType = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectedLocationIDQty = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranLocationIDQty = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GetLocIDNum = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableKitIDBtn = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractCodeContractDescription = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumSendToFSA = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimensionDimCodeDescription = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNumPartDescription = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotPartLotDescription = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineProdCode = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumPSCurrCode = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTMFCountryDescription = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNumUseOTS = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNumShipStatus = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSendToFSA = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumWarrantyCode = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumFSAEquipment = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCodeSendToFSA = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarrantyCodeWarrDescription = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIPWarehouseCodeDescription = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 281,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipDtlAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipDtlAttchRow")]
    [System.SerializableAttribute()]
    public class ShipDtlAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipDtlAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipDtlPackagingTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipDtlPackagingRow")]
    [System.SerializableAttribute()]
    public class ShipDtlPackagingTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlPackagingRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipDtlPackagingRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPkgNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDesc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCodeDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSerialNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SizeUOM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurQty = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 21,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipDtlTaxTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipDtlTaxRow")]
    [System.SerializableAttribute()]
    public class ShipDtlTaxTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipDtlTaxRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipDtlTaxRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manual = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReverseCharge = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionType = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timing = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptType = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExemptPercent = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResolutionDate = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRateDate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxableAmt = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxableAmt = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxableAmt = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxableAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxableAmt = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefTaxAmt = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDefTaxAmt = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DefTaxAmt = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DefTaxAmt = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DefTaxAmt = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManAdd = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DedTaxAmt = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDedTaxAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1DedTaxAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2DedTaxAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3DedTaxAmt = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ECAcquisitionSeq = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedAmount = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocFixedAmount = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1FixedAmount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2FixedAmount = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3FixedAmount = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Discount = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDiscount = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Discount = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Discount = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Discount = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TextCode = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescCollectionType = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxTotal = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDescription = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesTaxDescDescription = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 75,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipHeadTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipHeadRow")]
    [System.SerializableAttribute()]
    public class ShipHeadTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipHeadRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipHeadRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipPerson = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipLog = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelComment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalDeliveryNote = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICReceived = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPackNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipGroup = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgClass = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTransNum = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCallTag = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFPickupNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDiscFreight = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTemplate = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFUse3B = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MF3BAccount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDimWeight = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFZone = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFFreightAmt = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOtherAmt = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOversized = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLLine = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazardousShipment = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayFlag = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAccount = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress1 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress2 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCity = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTState = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTZip = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountry = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress3 = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountryNum = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTPhone = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WayBillNbr = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCode = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIReady = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomPack = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicatedFrom = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicatedStat = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOM = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPrinted = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSOrderNum = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCalculated = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCalcDate = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rounding = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Rounding = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Rounding = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Rounding = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRounding = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalTax = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalTax = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalTax = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderAmt = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOrderAmt = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OrderAmt = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OrderAmt = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OrderAmt = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWHTax = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalWHTax = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalWHTax = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalWHTax = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalWHTax = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSATax = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalSATax = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalSATax = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalSATax = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalSATax = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalTax = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalTax = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalDiscount = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalDiscount = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalDiscount = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalDiscount = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalDiscount = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceUOM = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSizeUOM = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWtUOM = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWeight = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestLength = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWidth = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestHeight = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBHoldNoInv = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReconcileQty = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduleNumber = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterASN = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBank = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOrder = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipOvers = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIPackSlipCreated = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAuthorizationCode = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGAuthorizationDate = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGCarrierCUIT = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGCOTMark = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGDocumentLetter = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGInvoicingPoint = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGLegalNumber = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGPrintingControlType = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGTrackLicense = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchReason = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGShippingWay = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurSupplierCode = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASNPrintedDate = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIShipToNum = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MXIncoterm = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreatedOn = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DigitalSignature = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedOn = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignedBy = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FirstPrintDate = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocCopyNum = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoInvoiceMessage = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillAddr = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckOrderMessage = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditCardMessage = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHold = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CtnPkgCode = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayInPrice = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWithholdingTaxAmt = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoPostUpdate = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspDigitalSignature = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableAssignLegNum = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePackageControl = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePhantom = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableShipped = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTax = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTranDocType = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableVoidLegNum = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableWeight = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromMasterPack = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasCartonLines = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLegNumCnfg = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastCartonFlag = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestFlag = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterpackPackNum = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleShippers = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHold = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomCasesExist = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeightEnable = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLenEnable = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOMEnable = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidthEnable = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostUpdMessage = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoiceChanged = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicateCount = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 249,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 251,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendShipment = 252,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNumName = 253,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SlipStatus = 254,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StageShipped = 255,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StagingReq = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StatusChgMessage = 257,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 258,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 259,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowChgAfterPrint = 260,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 261,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonContentValue = 262,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonStageNbr = 263,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QSUseBOL = 264,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QSUseCO = 265,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QSUseIntl = 266,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 267,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AGInvoicingPointDescription = 268,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 269,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 270,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 271,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeDocumentDesc = 272,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrName = 273,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerSendToFSA = 274,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 275,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 276,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 277,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryTypeDescription = 278,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCodeDescription = 279,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCodeWebDesc = 280,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankName = 281,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankDescription = 282,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustBTName = 283,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustCustID = 284,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustName = 285,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 286,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 287,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 288,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 289,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 290,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 291,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipHeadAttchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipHeadAttchRow")]
    [System.SerializableAttribute()]
    public class ShipHeadAttchTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadAttchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipHeadAttchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawingSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XFileRefNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForeignSysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DrawDesc = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDMDocID = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTypeID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipMiscTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipMiscRow")]
    [System.SerializableAttribute()]
    public class ShipMiscTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipMiscRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipMiscRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipMiscRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SeqNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Description = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceDBRecid = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InMiscAmt = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percentage = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Type = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIIsAutoCreatedMisc = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocMiscAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDateTime = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DspMiscAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MiscCodeDescription = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNumShipStatus = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 24,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipTaxSumTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipTaxSumRow")]
    [System.SerializableAttribute()]
    public class ShipTaxSumTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipTaxSumRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipTaxSumRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencySwitch = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplaySymbol = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocDisplaySymbol = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocReportableAmt = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxableAmt = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLIne = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Percent = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCode = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportableAmt = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1ReportableAmt = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxableAmt = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2ReportableAmt = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxableAmt = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3ReportableAmt = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxableAmt = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxableAmt = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCode = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxDescription = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateCodeDesc = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 29,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipUPSTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipUPSRow")]
    [System.SerializableAttribute()]
    public class ShipUPSTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipUPSRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipUPSRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipUPSRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVSeq = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailAddress = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipmentNotify = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailureNotify = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryNotify = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableQuantumView = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadListTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class ShipHeadListTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadListTable ShipHeadListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTable ShipHeadList {
            get {
                return this.ShipHeadListField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipHeadListField, value) != true)) {
                    this.ShipHeadListField = value;
                    this.RaisePropertyChanged("ShipHeadList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ShipHeadListTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="ShipHeadListRow")]
    [System.SerializableAttribute()]
    public class ShipHeadListTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.ShipHeadListRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShipHeadListRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum ShipHeadListRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipPerson = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipLog = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelComment = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalDeliveryNote = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalID = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICReceived = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPackNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipGroup = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgClass = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTransNum = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCallTag = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFPickupNum = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDiscFreight = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTemplate = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFUse3B = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MF3BAccount = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDimWeight = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFZone = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFFreightAmt = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOtherAmt = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOversized = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLNum = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLLine = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommercialInvoice = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipExprtDeclartn = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertOfOrigin = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LetterOfInstr = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HazardousShipment = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntrntlShip = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayFlag = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayAccount = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress1 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress2 = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCity = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTState = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTZip = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountry = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress1 = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress2 = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCity = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFState = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFZip = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountry = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFContact = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCompName = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFPhoneNum = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangedBy = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeDate = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeTime = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFID = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndividualPackIDs = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFAddress3 = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryConf = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddlHdlgFlag = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStdPkg = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FFCountryNum = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTAddress3 = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTCountryNum = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PayBTPhone = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WayBillNbr = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCode = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQuantumView = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVShipFromName = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPSQVMemo = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIReady = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomPack = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicatedFrom = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicatedStat = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOM = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseOTS = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPrinted = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSOrderNum = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCalculated = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxCalcDate = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rounding = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1Rounding = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2Rounding = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3Rounding = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocRounding = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalTax = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalTax = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalTax = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderAmt = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOrderAmt = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1OrderAmt = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2OrderAmt = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3OrderAmt = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionCode = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalWHTax = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalWHTax = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalWHTax = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalWHTax = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalWHTax = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalSATax = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalSATax = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalSATax = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalSATax = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalSATax = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalTax = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalTax = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotalDiscount = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TotalDiscount = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TotalDiscount = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TotalDiscount = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTotalDiscount = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeviceUOM = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSizeUOM = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWtUOM = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWeight = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestLength = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestWidth = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestHeight = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RateGrpCode = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InPrice = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PBHoldNoInv = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReconcileQty = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScheduleNumber = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CounterASN = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBank = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERSOrder = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoPrintReady = 182,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 183,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 184,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderDate = 185,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SlipStatus = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddrList = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillAddr = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditHold = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHold = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MultipleShippers = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendShipment = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonContentValue = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastCartonFlag = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonStageNbr = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableShipped = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasCartonLines = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StagingReq = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableWeight = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestFlag = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeightEnable = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLenEnable = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidthEnable = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CtnPkgCode = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReplicateCount = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomCasesExist = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePhantom = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterpackPackNum = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOMEnable = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNumName = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowChgAfterPrint = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableAssignLegNum = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableVoidLegNum = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasLegNumCnfg = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocTaxAmt = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocWithholdingTaxAmt = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTax = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxAmt = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt1TaxAmt = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt2TaxAmt = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rpt3TaxAmt = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableTranDocType = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisplayInPrice = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrName = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrDesc = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrSymbol = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeCurrencyID = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCodeDocumentDesc = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBTName = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerCustID = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryTypeDescription = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCodeWebDesc = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCodeDescription = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankDescription = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurBankBankName = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackToMasterpackDtlPackNum = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustName = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustBTName = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustCustID = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxRegionDescription = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 249,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdExtCustShipTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class UpdExtCustShipTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable CartonTrkDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable LegalNumberGenerateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable ReplicatedPacksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SNFormatTable SNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable SalesKitCompIssueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable SelectedIDNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable SelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipCOOTable ShipCOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlTable ShipDtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable ShipDtlAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable ShipDtlPackagingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable ShipDtlTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadTable ShipHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable ShipHeadAttchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipMiscTable ShipMiscField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable ShipTaxSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ShipUPSTable ShipUPSField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable CartonTrkDtl {
            get {
                return this.CartonTrkDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.CartonTrkDtlField, value) != true)) {
                    this.CartonTrkDtlField = value;
                    this.RaisePropertyChanged("CartonTrkDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable LegalNumberGenerate {
            get {
                return this.LegalNumberGenerateField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumberGenerateField, value) != true)) {
                    this.LegalNumberGenerateField = value;
                    this.RaisePropertyChanged("LegalNumberGenerate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable ReplicatedPacks {
            get {
                return this.ReplicatedPacksField;
            }
            set {
                if ((object.ReferenceEquals(this.ReplicatedPacksField, value) != true)) {
                    this.ReplicatedPacksField = value;
                    this.RaisePropertyChanged("ReplicatedPacks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SNFormatTable SNFormat {
            get {
                return this.SNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.SNFormatField, value) != true)) {
                    this.SNFormatField = value;
                    this.RaisePropertyChanged("SNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable SalesKitCompIssue {
            get {
                return this.SalesKitCompIssueField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesKitCompIssueField, value) != true)) {
                    this.SalesKitCompIssueField = value;
                    this.RaisePropertyChanged("SalesKitCompIssue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable SelectedIDNumbers {
            get {
                return this.SelectedIDNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedIDNumbersField, value) != true)) {
                    this.SelectedIDNumbersField = value;
                    this.RaisePropertyChanged("SelectedIDNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable SelectedSerialNumbers {
            get {
                return this.SelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSerialNumbersField, value) != true)) {
                    this.SelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("SelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipCOOTable ShipCOO {
            get {
                return this.ShipCOOField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCOOField, value) != true)) {
                    this.ShipCOOField = value;
                    this.RaisePropertyChanged("ShipCOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlTable ShipDtl {
            get {
                return this.ShipDtlField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlField, value) != true)) {
                    this.ShipDtlField = value;
                    this.RaisePropertyChanged("ShipDtl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable ShipDtlAttch {
            get {
                return this.ShipDtlAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlAttchField, value) != true)) {
                    this.ShipDtlAttchField = value;
                    this.RaisePropertyChanged("ShipDtlAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable ShipDtlPackaging {
            get {
                return this.ShipDtlPackagingField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlPackagingField, value) != true)) {
                    this.ShipDtlPackagingField = value;
                    this.RaisePropertyChanged("ShipDtlPackaging");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable ShipDtlTax {
            get {
                return this.ShipDtlTaxField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipDtlTaxField, value) != true)) {
                    this.ShipDtlTaxField = value;
                    this.RaisePropertyChanged("ShipDtlTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadTable ShipHead {
            get {
                return this.ShipHeadField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipHeadField, value) != true)) {
                    this.ShipHeadField = value;
                    this.RaisePropertyChanged("ShipHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable ShipHeadAttch {
            get {
                return this.ShipHeadAttchField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipHeadAttchField, value) != true)) {
                    this.ShipHeadAttchField = value;
                    this.RaisePropertyChanged("ShipHeadAttch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipMiscTable ShipMisc {
            get {
                return this.ShipMiscField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipMiscField, value) != true)) {
                    this.ShipMiscField = value;
                    this.RaisePropertyChanged("ShipMisc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable ShipTaxSum {
            get {
                return this.ShipTaxSumField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipTaxSumField, value) != true)) {
                    this.ShipTaxSumField = value;
                    this.RaisePropertyChanged("ShipTaxSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ShipUPSTable ShipUPS {
            get {
                return this.ShipUPSField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipUPSField, value) != true)) {
                    this.ShipUPSField = value;
                    this.RaisePropertyChanged("ShipUPS");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageControlPackVoidTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PackageControlPackVoidTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTable PackageControlPackVoidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTable PackageControlPackVoid {
            get {
                return this.PackageControlPackVoidField;
            }
            set {
                if ((object.ReferenceEquals(this.PackageControlPackVoidField, value) != true)) {
                    this.PackageControlPackVoidField = value;
                    this.RaisePropertyChanged("PackageControlPackVoid");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PackageControlPackVoidTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PackageControlPackVoidRow")]
    [System.SerializableAttribute()]
    public class PackageControlPackVoidTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackageControlPackVoidRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PackageControlPackVoidRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustContainerPartNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EDIShipToNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurDock = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 17,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LLCompSerMatchTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class LLCompSerMatchTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LLComSerMatchTable LLComSerMatchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LLComSerMatchTable LLComSerMatch {
            get {
                return this.LLComSerMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.LLComSerMatchField, value) != true)) {
                    this.LLComSerMatchField = value;
                    this.RaisePropertyChanged("LLComSerMatch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LLComSerMatchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="LLComSerMatchRow")]
    [System.SerializableAttribute()]
    public class LLComSerMatchTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LLComSerMatchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum LLComSerMatchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPartNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPartDesc = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildPartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChildPartDesc = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentSerialNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SerialMatchingParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SerialMatchingParamsTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchTable serialNumbersToMatchField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchTable serialNumbersToMatch {
            get {
                return this.serialNumbersToMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.serialNumbersToMatchField, value) != true)) {
                    this.serialNumbersToMatchField = value;
                    this.RaisePropertyChanged("serialNumbersToMatch");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="serialNumbersToMatchTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="serialNumbersToMatchRow")]
    [System.SerializableAttribute()]
    public class serialNumbersToMatchTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="serialNumbersToMatchRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum serialNumbersToMatchRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        validSerialNo = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipOrdTrkTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipOrdTrkTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTable CustShipOrdTrkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTable CustShipOrdTrk {
            get {
                return this.CustShipOrdTrkField;
            }
            set {
                if ((object.ReferenceEquals(this.CustShipOrdTrkField, value) != true)) {
                    this.CustShipOrdTrkField = value;
                    this.RaisePropertyChanged("CustShipOrdTrk");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustShipOrdTrkTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustShipOrdTrkRow")]
    [System.SerializableAttribute()]
    public class CustShipOrdTrkTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipOrdTrkRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustShipOrdTrkRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipPerson = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipLog = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipGroup = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgClass = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResDelivery = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatDelivery = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SatPickup = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerbalConf = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hazmat = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocOnly = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RefNotes = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplyChrg = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChrgAmount = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        COD = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODFreight = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODCheck = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroundType = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyFlag = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotifyEMail = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredIns = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTransNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCallTag = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFPickupNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDiscFreight = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTemplate = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFUse3B = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MF3BAccount = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDimWeight = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFZone = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFFreightAmt = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOtherAmt = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOversized = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatDelivery = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSatPickup = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServSignature = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAlert = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPOD = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAOD = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServHomeDel = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeliveryType = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServDeliveryDate = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServPhone = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServInstruct = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRelease = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServAuthNum = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef1 = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef2 = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef3 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef4 = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServRef5 = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLNum = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BOLLine = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHold = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonHeight = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonWidth = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonLength = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonContentValue = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastCartonFlag = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToName = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToAddress = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToCity = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToRegion = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToPostalCode = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToCountry = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToTerritory = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToAttention = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToPhone = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestShipToFax = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToName = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToAddress = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToCity = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToRegion = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToPostalCode = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToCountry = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToTerritory = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToAttention = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToPhone = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManifestSoldToFax = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CartonStageNbr = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOM = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 111,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackOutTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class PackOutTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.POSNFormatTable POSNFormatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersTable POSelectedSerialNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PackOutTable PackOutField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable LegalNumGenOpts {
            get {
                return this.LegalNumGenOptsField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNumGenOptsField, value) != true)) {
                    this.LegalNumGenOptsField = value;
                    this.RaisePropertyChanged("LegalNumGenOpts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.POSNFormatTable POSNFormat {
            get {
                return this.POSNFormatField;
            }
            set {
                if ((object.ReferenceEquals(this.POSNFormatField, value) != true)) {
                    this.POSNFormatField = value;
                    this.RaisePropertyChanged("POSNFormat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersTable POSelectedSerialNumbers {
            get {
                return this.POSelectedSerialNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.POSelectedSerialNumbersField, value) != true)) {
                    this.POSelectedSerialNumbersField = value;
                    this.RaisePropertyChanged("POSelectedSerialNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PackOutTable PackOut {
            get {
                return this.PackOutField;
            }
            set {
                if ((object.ReferenceEquals(this.PackOutField, value) != true)) {
                    this.PackOutField = value;
                    this.RaisePropertyChanged("PackOut");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POSNFormatTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POSNFormatRow")]
    [System.SerializableAttribute()]
    public class POSNFormatTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.POSNFormatRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSNFormatRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POSNFormatRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasSerialNumbers = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadingZeroes = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumberOfDigits = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseDataType = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNFormat = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNLastUsedSeq = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskPrefix = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMaskSuffix = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="POSelectedSerialNumbersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="POSelectedSerialNumbersRow")]
    [System.SerializableAttribute()]
    public class POSelectedSerialNumbersTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="POSelectedSerialNumbersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum POSelectedSerialNumbersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deselected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitWhseList = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassedInspection = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeDesc = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReasonCodeType = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrapped = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScrappedReasonCode = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SerialNumber = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNBaseNumber = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNPrefix = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceRowID = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransType = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voided = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RawSerialNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrAction = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBLbrActionDesc = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreventDeselect = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SNMask = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSavedToDB = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRefPartType = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PreDeselected = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 28,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PackOutTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PackOutRow")]
    [System.SerializableAttribute()]
    public class PackOutTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.PackOutRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PackOutRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PackOutRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EntryPerson = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LabelComment = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipComment = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineType = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurInventoryShipQty = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShipQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipCmpl = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShpConNum = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimCode = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DUM = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DimConvFactor = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceComment = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatus = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stage = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvQty = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackQty = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipAddr = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StockPart = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustName = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPartNum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitNumPartDescription = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitPartRev = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotRelQty = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptPartRev = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptKitRevision = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptJobNum = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptOrderRel = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptKit = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoQuantity = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PromptOrderLine = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPlant = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPlant = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromAddr = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackMode = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFOrdNum = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OprSeq = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumMatchs = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackOutNum = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsInvoiced = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTransNum = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFCallTag = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFPickUpNum = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFZone = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFFreightAmt = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDiscFreight = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOtherAmt = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFOversized = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFTemplate = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MFDimWeight = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorID = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quantity = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TotPackedQty = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RemainQty = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaDescription = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasCartonLines = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableWeight = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipStatusXlate = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgCode = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgClass = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KitFlag = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeight = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgHeightEnable = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLength = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgLenEnable = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidth = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgWidthEnable = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WayBillNbr = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FreightedShipViaCode = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CODAmount = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DeclaredAmt = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhantomPack = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weight = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterpackPackNum = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnableWhseBin = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOMEnable = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PkgSizeUOM = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WeightUOM = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryShipUOM = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobShipUOM = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePOSerialBtn = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentPrinted = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnablePackageControl = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToWarning = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumberMessage = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeID = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranDocTypeDescription = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 125,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipCustTrkTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipCustTrkTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTable CustShipCustTrkField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTable CustShipCustTrk {
            get {
                return this.CustShipCustTrkField;
            }
            set {
                if ((object.ReferenceEquals(this.CustShipCustTrkField, value) != true)) {
                    this.CustShipCustTrkField = value;
                    this.RaisePropertyChanged("CustShipCustTrk");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CustShipCustTrkTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="CustShipCustTrkRow")]
    [System.SerializableAttribute()]
    public class CustShipCustTrkTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipCustTrkRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum CustShipCustTrkRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToInvoice = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoiced = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingNumber = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipPerson = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineDesc = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingInventoryShipQty = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingJobShipQty = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesUM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestDate = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnTime = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalNumber = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPartNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XRevisionNum = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustomerName = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerName = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryShipUOM = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobShipUOM = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurInventoryShipQty = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OurJobShipQty = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SellingShipmentQty = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DropShip = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceNum = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 45,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class SelectSerialNumbersParamsTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTable SelectSerialNumbersParams {
            get {
                return this.SelectSerialNumbersParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectSerialNumbersParamsField, value) != true)) {
                    this.SelectSerialNumbersParamsField = value;
                    this.RaisePropertyChanged("SelectSerialNumbersParams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SelectSerialNumbersParamsTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="SelectSerialNumbersParamsRow")]
    [System.SerializableAttribute()]
    public class SelectSerialNumbersParamsTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectSerialNumbersParamsRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum SelectSerialNumbersParamsRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        partNum = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        quantity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        whereClause = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        transType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        sourceRowID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableCreate = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableSelect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        enableRetrieve = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allowVoided = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        plant = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartNum = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefPartType = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        xrefCustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        poLinkValues = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 16,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustShipPickedOrdersTableset", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    [System.SerializableAttribute()]
    public partial class CustShipPickedOrdersTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.MtlQueueTable MtlQueueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.PickedOrdersTable PickedOrdersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.MtlQueueTable MtlQueue {
            get {
                return this.MtlQueueField;
            }
            set {
                if ((object.ReferenceEquals(this.MtlQueueField, value) != true)) {
                    this.MtlQueueField = value;
                    this.RaisePropertyChanged("MtlQueue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.PickedOrdersTable PickedOrders {
            get {
                return this.PickedOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.PickedOrdersField, value) != true)) {
                    this.PickedOrdersField = value;
                    this.RaisePropertyChanged("PickedOrders");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="MtlQueueTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="MtlQueueRow")]
    [System.SerializableAttribute()]
    public class MtlQueueTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.MtlQueueRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MtlQueueRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum MtlQueueRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysDate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysTime = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MtlQueueSeq = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quantity = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranType = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReferencePrefix = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reference = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestedByEmpID = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectedByEmpID = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeq = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeqType = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobSeq = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromWhse = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromBinNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToWhse = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToBinNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextAssemblySeq = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NextJobSeq = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByDate = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByTime = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNum = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PurPoint = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSlip = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackLine = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetJobNum = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetAssemblySeq = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetMtlSeq = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevisionNum = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartDescription = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IUM = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PONum = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLine = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PORelNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Visible = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMANum = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALine = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMAReceipt = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMADisp = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NCTranID = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lock = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueueID = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QueuePickSeq = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReleaseForPickingSeq = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WhseGroupCode = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranStatus = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaveNum = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Priority = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranSource = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastMgrChangeEmpID = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssignedToEmpID = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetTFOrdNum = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetTFOrdLine = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackStation = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DistributionType = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EpicorFSA = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LastUsedPCID = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPCID = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToPCID = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustID = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustTerritoryID = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisableTO = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromInv = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromJob = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromPO = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromTO = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromWhseDesc = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderNumber = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FSAServiceOrderResourceNum = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldStatus = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LeadTime = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MaxMfgLotSize = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MfgLeadTime = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MinMfgLotSize = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedByTimeDisp = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NonStock = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OkToProcess = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQtySite = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHandQtyWhse = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlantName = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimWhseCode = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrimWhseDesc = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestedByEmpName = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestError = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestMsg = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SameWhseGroupEmp = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectedByEmpName = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SelectedForProcessing = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCity = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCountry = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToName = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToState = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToZIP = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SortByPriority = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceTypeDesc = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToWhseDesc = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferLeadTime = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferPlant = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranTypeDesc = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaveRelated = 112,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustRegionCode = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssemblySeqDescription = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JobNumPartDescription = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLinePartNum = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineVenPartNum = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        POLineLineDesc = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RMALineLineDesc = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress1 = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCity = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress3 = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumDefaultFOB = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCurrencyCode = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumTermsCode = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumCountry = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumVendorID_ = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumState = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumZIP = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumName_ = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VendorNumAddress2 = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseGroupCodeWhseGroupDesc = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 146,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PickedOrdersTable", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets", ItemName="PickedOrdersRow")]
    [System.SerializableAttribute()]
    public class PickedOrdersTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.PickedOrdersRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PickedOrdersRowColumnOrder", Namespace="http://schemas.datacontract.org/2004/07/Erp.Tablesets")]
    public enum PickedOrdersRowColumnOrder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Plant = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNum = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLine = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderRelNum = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCode = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNum = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplyJobNum = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotNum = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quantity = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UOM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReqDate = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNum = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToNum = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCode = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNum = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complete = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTCustNum = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BTConNum = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipToCustNum = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRevID = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysRowID = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PCID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ConInvMeth = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HoldPrdInv = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsSelected = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsVisible = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTSAddr = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectID = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ParentPCID = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BitFlag = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BinNumDescription = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumName = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumBTName = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustNumCustID = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderLineLineDesc = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCurrencyCode = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderNumCardMemberName = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackDimension = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackSerialNum = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSellingFactor = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPartDescription = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumTrackLots = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumIUM = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumPricePerCode = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNumSalesUM = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeWebDesc = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShipViaCodeDescription = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarehouseCodeDescription = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RowMod = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SpecifiedProperties = 50,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IceTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipTableset))]
    public partial class IceTableset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.ExtensionTableData[] ExtensionTablesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.ExtensionTableData[] ExtensionTables {
            get {
                return this.ExtensionTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtensionTablesField, value) != true)) {
                    this.ExtensionTablesField = value;
                    this.RaisePropertyChanged("ExtensionTables");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BOUpdErrorTableset", Namespace="http://schemas.datacontract.org/2004/07/Ice")]
    [System.SerializableAttribute()]
    public partial class BOUpdErrorTableset : EpicWAS.Epicor.CustShipSvc.IceTableset {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EpicWAS.Epicor.CustShipSvc.BOUpdErrorTable BOUpdErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EpicWAS.Epicor.CustShipSvc.BOUpdErrorTable BOUpdError {
            get {
                return this.BOUpdErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.BOUpdErrorField, value) != true)) {
                    this.BOUpdErrorField = value;
                    this.RaisePropertyChanged("BOUpdError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="BOUpdErrorTable", Namespace="http://schemas.datacontract.org/2004/07/Ice", ItemName="BOUpdErrorRow")]
    [System.SerializableAttribute()]
    public class BOUpdErrorTable : System.Collections.Generic.List<EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Erp:BO:CustShip", ConfigurationName="Epicor.CustShipSvc.CustShipSvcContract")]
    public interface CustShipSvcContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPackageCodeAllocNegQty", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPackageCodeAllocNegQtyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckPackageCodeAllocNegQtyEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.TempRowBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOOTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UserDefinedColumns))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyResponse CheckPackageCodeAllocNegQty(EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPackageCodeAllocNegQty", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPackageCodeAllocNegQtyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyResponse> CheckPackageCodeAllocNegQtyAsync(EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPkgCodeQtyList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPkgCodeQtyListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPkgCodeQtyListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorExceptionData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ExtensionTableColumn))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.TempRowBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CartonTrkDtlRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumGenOptsRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LegalNumberGenerateRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ReplicatedPacksRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SNFormatRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SalesKitCompIssueRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedIDNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectedSerialNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOOTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipCOORowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlAttchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlPackagingRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipDtlTaxRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadAttchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipMiscRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipTaxSumRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipUPSRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.ShipHeadListRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.LLComSerMatchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.serialNumbersToMatchRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSNFormatRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.POSelectedSerialNumbersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PackOutRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.MtlQueueRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.PickedOrdersRowColumnOrder))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.IceRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.BOUpdErrorRow))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(EpicWAS.Epicor.CustShipSvc.UserDefinedColumns))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPkgCodeList")]
        object[] GetPkgCodeQtyList(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPkgCodeQtyList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPkgCodeQtyListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opPkgCodeList")]
        System.Threading.Tasks.Task<object[]> GetPkgCodeQtyListAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateDigitalSignature", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateDigitalSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GenerateDigitalSignatureEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureResponse GenerateDigitalSignature(EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateDigitalSignature", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateDigitalSignatureResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureResponse> GenerateDigitalSignatureAsync(EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDPackVerify", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDPackVerifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDPackVerifyEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyResponse ChangePCIDPackVerify(EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDPackVerify", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDPackVerifyResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyResponse> ChangePCIDPackVerifyAsync(EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyCalcPackPCIDCount", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PackVerifyCalcPackPCIDCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyCalcPackPCIDCountEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        int PackVerifyCalcPackPCIDCount(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyCalcPackPCIDCount", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PackVerifyCalcPackPCIDCountResponse")]
        System.Threading.Tasks.Task<int> PackVerifyCalcPackPCIDCountAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyPerformPackVerification", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PackVerifyPerformPackVerificationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyPerformPackVerificationEpicorFaultD" +
            "etailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationResponse PackVerifyPerformPackVerification(EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PackVerifyPerformPackVerification", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PackVerifyPerformPackVerificationResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationResponse> PackVerifyPerformPackVerificationAsync(EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHead", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipHeadResponse GetNewShipHead(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHead", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipHeadResponse> GetNewShipHeadAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadAttch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchResponse GetNewShipHeadAttch(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadAttch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipHeadAttchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchResponse> GetNewShipHeadAttchAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewCartonTrkDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewCartonTrkDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewCartonTrkDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlResponse GetNewCartonTrkDtl(EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewCartonTrkDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewCartonTrkDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlResponse> GetNewCartonTrkDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlResponse GetNewShipDtl(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlResponse> GetNewShipDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlAttch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlAttchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlAttchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchResponse GetNewShipDtlAttch(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlAttch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlAttchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchResponse> GetNewShipDtlAttchAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipCOO", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipCOOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipCOOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipCOOResponse GetNewShipCOO(EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipCOO", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipCOOResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipCOOResponse> GetNewShipCOOAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlTax", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlTaxResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlTaxEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxResponse GetNewShipDtlTax(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlTax", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipDtlTaxResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxResponse> GetNewShipDtlTaxAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipMisc", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipMiscResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipMiscEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipMiscResponse GetNewShipMisc(EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipMisc", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipMiscResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipMiscResponse> GetNewShipMiscAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipUPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipUPSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewShipUPSResponse GetNewShipUPS(EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewShipUPSResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipUPSResponse> GetNewShipUPSAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteByID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/DeleteByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void DeleteByID(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteByID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteByIDResponse")]
        System.Threading.Tasks.Task DeleteByIDAsync(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetByID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetByIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetByIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipTableset GetByID(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetByID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetByIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetByIDAsync(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetListResponse GetList(EpicWAS.Epicor.CustShipSvc.GetListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.CustShipSvc.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRows", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetRowsResponse GetRows(EpicWAS.Epicor.CustShipSvc.GetRowsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRows", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.CustShipSvc.GetRowsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipTableset GetBySysRowID(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetBySysRowIDAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipTableset GetBySysRowIDs(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDs", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetBySysRowIDsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetBySysRowIDsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/Update", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdateResponse Update(EpicWAS.Epicor.CustShipSvc.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/Update", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.CustShipSvc.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateExt", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateExtResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdateExtEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdateExtResponse UpdateExt(EpicWAS.Epicor.CustShipSvc.UpdateExtRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateExt", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateExtResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.CustShipSvc.UpdateExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ExpireDate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ExpireDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ExpireDateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        System.Nullable<System.DateTime> ExpireDate(System.Nullable<System.DateTime> ExpirationDate, System.Nullable<System.DateTime> EffectiveDAte, int Duration, string modifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ExpireDate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ExpireDateResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> ExpireDateAsync(System.Nullable<System.DateTime> ExpirationDate, System.Nullable<System.DateTime> EffectiveDAte, int Duration, string modifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CreateCustomerCartons", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CreateCustomerCartonsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CreateCustomerCartonsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsResponse CreateCustomerCartons(EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CreateCustomerCartons", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CreateCustomerCartonsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsResponse> CreateCustomerCartonsAsync(EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AllowUndoExternalDN", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AllowUndoExternalDNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/AllowUndoExternalDNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void AllowUndoExternalDN();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AllowUndoExternalDN", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AllowUndoExternalDNResponse")]
        System.Threading.Tasks.Task AllowUndoExternalDNAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AskForShipToChange", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AskForShipToChangeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/AskForShipToChangeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.AskForShipToChangeResponse AskForShipToChange(EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AskForShipToChange", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AskForShipToChangeResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.AskForShipToChangeResponse> AskForShipToChangeAsync(EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AssignLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/AssignLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.AssignLegalNumberResponse AssignLegalNumber(EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/AssignLegalNumber", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/AssignLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackageControlPackVoid", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackageControlPackVoidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPackageControlPackVoidEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset GetPackageControlPackVoid(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackageControlPackVoid", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackageControlPackVoidResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset> GetPackageControlPackVoidAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/VoidPackSlip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/VoidPackSlipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/VoidPackSlipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.VoidPackSlipResponse VoidPackSlip(EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/VoidPackSlip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/VoidPackSlipResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.VoidPackSlipResponse> VoidPackSlipAsync(EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildCompSerMatch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildCompSerMatchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/BuildCompSerMatchEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset BuildCompSerMatch(string ipPartNum, string ipRevNum, string ipSerialNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildCompSerMatch", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildCompSerMatchResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset> BuildCompSerMatchAsync(string ipPartNum, string ipRevNum, string ipSerialNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildSerialMatchingParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildSerialMatchingParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/BuildSerialMatchingParamsEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsResponse BuildSerialMatchingParams(EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildSerialMatchingParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildSerialMatchingParamsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsResponse> BuildSerialMatchingParamsAsync(EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToCustomerList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildShipToCustomerListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToCustomerListEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="shipToCustomerList")]
        string BuildShipToCustomerList(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToCustomerList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildShipToCustomerListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="shipToCustomerList")]
        System.Threading.Tasks.Task<string> BuildShipToCustomerListAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildShipToListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="shipToList")]
        string BuildShipToList(int orderNum, int iShipToCustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/BuildShipToList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/BuildShipToListResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="shipToList")]
        System.Threading.Tasks.Task<string> BuildShipToListAsync(int orderNum, int iShipToCustNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CalculateWeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWeightEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="calculatedWeight")]
        decimal CalculateWeight(int cartonNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CalculateWeightResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="calculatedWeight")]
        System.Threading.Tasks.Task<decimal> CalculateWeightAsync(int cartonNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CancelVoid", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CancelVoidResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CancelVoidEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CancelVoidResponse CancelVoid(EpicWAS.Epicor.CustShipSvc.CancelVoidRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CancelVoid", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CancelVoidResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CancelVoidResponse> CancelVoidAsync(EpicWAS.Epicor.CustShipSvc.CancelVoidRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CanStage", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CanStageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CanStageEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CanStage(System.Guid ipShipHedRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CanStage", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CanStageResponse")]
        System.Threading.Tasks.Task CanStageAsync(System.Guid ipShipHedRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CartonValidateWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CartonValidateWeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CartonValidateWeightEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CartonValidateWeight(decimal ipWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CartonValidateWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CartonValidateWeightResponse")]
        System.Threading.Tasks.Task CartonValidateWeightAsync(decimal ipWeight);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipCmpl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipCmplResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipCmplEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipCmplResponse ChangeShipCmpl(EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipCmpl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipCmplResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipCmplResponse> ChangeShipCmplAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFCustID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFCustIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDResponse ChangeShipDtlMFCustID(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFCustID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFCustIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDResponse> ChangeShipDtlMFCustIDAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFShipToNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFShipToNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFShipToNumEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumResponse ChangeShipDtlMFShipToNum(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFShipToNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlMFShipToNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumResponse> ChangeShipDtlMFShipToNumAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlUseOTMF", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlUseOTMFResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlUseOTMFEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFResponse ChangeShipDtlUseOTMF(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlUseOTMF", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipDtlUseOTMFResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFResponse> ChangeShipDtlUseOTMFAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipHeadShipToCustID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipHeadShipToCustIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipHeadShipToCustIDEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDResponse ChangeShipHeadShipToCustID(EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipHeadShipToCustID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipHeadShipToCustIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDResponse> ChangeShipHeadShipToCustIDAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipMiscPrcnt", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipMiscPrcntResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipMiscPrcntEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntResponse ChangeShipMiscPrcnt(EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeShipMiscPrcnt", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeShipMiscPrcntResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntResponse> ChangeShipMiscPrcntAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeStatusResponse ChangeStatus(EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeStatusResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeStatusResponse> ChangeStatusAsync(EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangePCIDResponse ChangePCID(EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangePCID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangePCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangePCIDResponse> ChangePCIDAsync(EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeWarrantyToFSA", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeWarrantyToFSAResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ChangeWarrantyToFSAEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSAResponse ChangeWarrantyToFSA(EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ChangeWarrantyToFSA", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ChangeWarrantyToFSAResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSAResponse> ChangeWarrantyToFSAAsync(EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/RemovePCID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/RemovePCIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/RemovePCIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.RemovePCIDResponse RemovePCID(EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/RemovePCID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/RemovePCIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.RemovePCIDResponse> RemovePCIDAsync(EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckCompliance", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckComplianceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckComplianceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckComplianceResponse CheckCompliance(EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckCompliance", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckComplianceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckComplianceResponse> CheckComplianceAsync(EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckCOOPercents", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckCOOPercentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckCOOPercentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckCOOPercents(int iPackNum, int iPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckCOOPercents", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckCOOPercentsResponse")]
        System.Threading.Tasks.Task CheckCOOPercentsAsync(int iPackNum, int iPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="msg")]
        string CheckOrder(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckOrderResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="msg")]
        System.Threading.Tasks.Task<string> CheckOrderAsync(int packNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrderComplete", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckOrderCompleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrderCompleteEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteResponse CheckOrderComplete(EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckOrderComplete", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckOrderCompleteResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteResponse> CheckOrderCompleteAsync(EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPrePartInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPrePartInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckPrePartInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoResponse CheckPrePartInfo(EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPrePartInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPrePartInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoResponse> CheckPrePartInfoAsync(EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckReadyToInvoice", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckReadyToInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckReadyToInvoiceEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceResponse CheckReadyToInvoice(EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckReadyToInvoice", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckReadyToInvoiceResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceResponse> CheckReadyToInvoiceAsync(EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckShipDtlResponse CheckShipDtl(EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckShipDtlResponse> CheckShipDtlAsync(EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckValidCartonWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckValidCartonWeightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckValidCartonWeightEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void CheckValidCartonWeight(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckValidCartonWeight", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckValidCartonWeightResponse")]
        System.Threading.Tasks.Task CheckValidCartonWeightAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ClearConvertedManifestUOMFields", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ClearConvertedManifestUOMFieldsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ClearConvertedManifestUOMFieldsEpicorFaultDet" +
            "ailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ClearConvertedManifestUOMFields(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ClearConvertedManifestUOMFields", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ClearConvertedManifestUOMFieldsResponse")]
        System.Threading.Tasks.Task ClearConvertedManifestUOMFieldsAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ConvertToManifestUOM", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ConvertToManifestUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ConvertToManifestUOMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ConvertToManifestUOM(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ConvertToManifestUOM", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ConvertToManifestUOMResponse")]
        System.Threading.Tasks.Task ConvertToManifestUOMAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ConvertUOM", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ConvertUOMResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ConvertUOMEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="convQty")]
        decimal ConvertUOM(string partNum, decimal baseQty, string baseUOM, string convUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ConvertUOM", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ConvertUOMResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="convQty")]
        System.Threading.Tasks.Task<decimal> ConvertUOMAsync(string partNum, decimal baseQty, string baseUOM, string convUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CreateMassShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CreateMassShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlResponse CreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CreateMassShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlResponse> CreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeletePhantomPacks", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeletePhantomPacksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/DeletePhantomPacksEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksResponse DeletePhantomPacks(EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeletePhantomPacks", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeletePhantomPacksResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksResponse> DeletePhantomPacksAsync(EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteRangePhantomPacks", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteRangePhantomPacksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/DeleteRangePhantomPacksEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksResponse DeleteRangePhantomPacks(EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteRangePhantomPacks", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteRangePhantomPacksResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksResponse> DeleteRangePhantomPacksAsync(EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ExpressShip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ExpressShipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ExpressShipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ExpressShip();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ExpressShip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ExpressShipResponse")]
        System.Threading.Tasks.Task ExpressShipAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCartonPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCartonPackagingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetCartonPackagingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetCartonPackagingResponse GetCartonPackaging(EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCartonPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCartonPackagingResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetCartonPackagingResponse> GetCartonPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCustShipOrdTrk", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCustShipOrdTrkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetCustShipOrdTrkEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset GetCustShipOrdTrk(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCustShipOrdTrk", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCustShipOrdTrkResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset> GetCustShipOrdTrkAsync(int orderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetHeadOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetHeadOrderInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetHeadOrderInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoResponse GetHeadOrderInfo(EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetHeadOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetHeadOrderInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoResponse> GetHeadOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetEnablePackageControl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetEnablePackageControlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetEnablePackageControlEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool GetEnablePackageControl();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetEnablePackageControl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetEnablePackageControlResponse")]
        System.Threading.Tasks.Task<bool> GetEnablePackageControlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobDtlInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobDtlInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetJobDtlInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoResponse GetJobDtlInfo(EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobDtlInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobDtlInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoResponse> GetJobDtlInfoAsync(EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetJobInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetJobInfoResponse GetJobInfo(EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetJobInfoResponse> GetJobInfoAsync(EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobSupOpSeq", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobSupOpSeqResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetJobSupOpSeqEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mtlSeq")]
        string GetJobSupOpSeq(string jobNum, string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetJobSupOpSeq", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetJobSupOpSeqResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="mtlSeq")]
        System.Threading.Tasks.Task<string> GetJobSupOpSeqAsync(string jobNum, string partNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetLegalNumGenOpts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetLegalNumGenOptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetLegalNumGenOptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsResponse GetLegalNumGenOpts(EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetLegalNumGenOpts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetLegalNumGenOptsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsResponse> GetLegalNumGenOptsAsync(EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetLegalNumGenOpts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetLegalNumGenOptsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POGetLegalNumGenOptsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsResponse POGetLegalNumGenOpts(EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetLegalNumGenOpts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetLegalNumGenOptsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsResponse> POGetLegalNumGenOptsAsync(EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetManifestInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetManifestInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetManifestInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetManifestInfoResponse GetManifestInfo(EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetManifestInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetManifestInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetManifestInfoResponse> GetManifestInfoAsync(EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlResponse GetNewOrdrShipDtl(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlResponse> GetNewOrdrShipDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipUPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipUPSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSResponse GetNewOrdrShipUPS(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetNewOrdrShipUPSResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSResponse> GetNewOrdrShipUPSAsync(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetOrderInfoResponse GetOrderInfo(EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderInfoResponse> GetOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderLineInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderLineInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderLineInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoResponse GetOrderLineInfo(EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderLineInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderLineInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoResponse> GetOrderLineInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderRelInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderRelInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderRelInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoResponse GetOrderRelInfo(EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetOrderRelInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetOrderRelInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoResponse> GetOrderRelInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackagingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPackagingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPackagingResponse GetPackaging(EpicWAS.Epicor.CustShipSvc.GetPackagingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackagingResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackagingResponse> GetPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetPackagingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackClass", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackClassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPackClassEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPackClassResponse GetPackClass(EpicWAS.Epicor.CustShipSvc.GetPackClassRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackClass", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackClassResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackClassResponse> GetPackClassAsync(EpicWAS.Epicor.CustShipSvc.GetPackClassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackOutPartXRef", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackOutPartXRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPackOutPartXRefEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefResponse GetPackOutPartXRef(EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPackOutPartXRef", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPackOutPartXRefResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefResponse> GetPackOutPartXRefAsync(EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPartInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPartInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPartInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPartInfoResponse GetPartInfo(EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPartInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPartInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPartInfoResponse> GetPartInfoAsync(EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPayBTFlagDefaults", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPayBTFlagDefaultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPayBTFlagDefaultsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsResponse GetPayBTFlagDefaults(EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPayBTFlagDefaults", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPayBTFlagDefaultsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsResponse> GetPayBTFlagDefaultsAsync(EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPOPackagingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackagingEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPOPackagingResponse GetPOPackaging(EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackaging", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPOPackagingResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPOPackagingResponse> GetPOPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackClass", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPOPackClassResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackClassEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetPOPackClassResponse GetPOPackClass(EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetPOPackClass", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetPOPackClassResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPOPackClassResponse> GetPOPackClassAsync(EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetQtyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetQtyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetQtyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetQtyInfoResponse GetQtyInfo(EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetQtyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetQtyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetQtyInfoResponse> GetQtyInfoAsync(EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsContactTracker", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsContactTrackerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsContactTrackerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerResponse GetRowsContactTracker(EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsContactTracker", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsContactTrackerResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerResponse> GetRowsContactTrackerAsync(EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsCustomerTrackerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsCustomerTrackerEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerResponse GetRowsCustomerTracker(EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetRowsCustomerTracker", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetRowsCustomerTrackerResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetScale", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetScaleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetScaleEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="scaleID")]
        string GetScale(string workstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetScale", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetScaleResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="scaleID")]
        System.Threading.Tasks.Task<string> GetScaleAsync(string workstationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectIDNumbersParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetSelectIDNumbersParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectIDNumbersParamsEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="convShipQty")]
        decimal GetSelectIDNumbersParams(string partNum, decimal shipQty, string shipUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectIDNumbersParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetSelectIDNumbersParamsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="convShipQty")]
        System.Threading.Tasks.Task<decimal> GetSelectIDNumbersParamsAsync(string partNum, decimal shipQty, string shipUOM);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetSelectSerialNumbersParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectSerialNumbersParamsEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, decimal ipQuantity, string ipUOM, int ipPackNum, int ipPackLine, string ipTranType, string ipJobNum, string ipWhseCode, string ipBinNum, string ipLotNum, bool ipFromPO, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, System.Guid ipSysRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetSelectSerialNumbersParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetSelectSerialNumbersParamsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, decimal ipQuantity, string ipUOM, int ipPackNum, int ipPackLine, string ipTranType, string ipJobNum, string ipWhseCode, string ipBinNum, string ipLotNum, bool ipFromPO, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, System.Guid ipSysRowID);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateSelectIDNumParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateSelectIDNumParamsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GenerateSelectIDNumParamsEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipTableset GenerateSelectIDNumParams(string[] SNList, string ipPartNum, int ipPackNum, int ipPackLine, string ipJobNum, string ipUom, bool ipFromMfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateSelectIDNumParams", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateSelectIDNumParamsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GenerateSelectIDNumParamsAsync(string[] SNList, string ipPartNum, int ipPackNum, int ipPackLine, string ipJobNum, string ipUom, bool ipFromMfg);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateLocationIDNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateLocationIDNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GenerateLocationIDNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumResponse GenerateLocationIDNum(EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GenerateLocationIDNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GenerateLocationIDNumResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumResponse> GenerateLocationIDNumAsync(EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetShipMiscDefaults", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetShipMiscDefaultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetShipMiscDefaultsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsResponse GetShipMiscDefaults(EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetShipMiscDefaults", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetShipMiscDefaultsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsResponse> GetShipMiscDefaultsAsync(EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetShipToAddr", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetShipToAddrResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetShipToAddrEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetShipToAddrResponse GetShipToAddr(EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetShipToAddr", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetShipToAddrResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetShipToAddrResponse> GetShipToAddrAsync(EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetTranDocTypeID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetTranDocTypeIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetTranDocTypeIDEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDResponse GetTranDocTypeID(EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetTranDocTypeID", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetTranDocTypeIDResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDResponse> GetTranDocTypeIDAsync(EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWarrantyExpiration", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CalculateWarrantyExpirationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWarrantyExpirationEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationResponse CalculateWarrantyExpiration(EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CalculateWarrantyExpiration", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CalculateWarrantyExpirationResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationResponse> CalculateWarrantyExpirationAsync(EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetWarrantyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetWarrantyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetWarrantyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoResponse GetWarrantyInfo(EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetWarrantyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetWarrantyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoResponse> GetWarrantyInfoAsync(EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ClearWarrantyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ClearWarrantyInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ClearWarrantyInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoResponse ClearWarrantyInfo(EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ClearWarrantyInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ClearWarrantyInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoResponse> ClearWarrantyInfoAsync(EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetWhseInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetWhseInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetWhseInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.GetWhseInfoResponse GetWhseInfo(EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetWhseInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetWhseInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetWhseInfoResponse> GetWhseInfoAsync(EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHCreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHCreateMassShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/HHCreateMassShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlResponse HHCreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHCreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHCreateMassShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlResponse> HHCreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHGetOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHGetOrderInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/HHGetOrderInfoEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoResponse HHGetOrderInfo(EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHGetOrderInfo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHGetOrderInfoResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoResponse> HHGetOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHSetDtlDefaultValues", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHSetDtlDefaultValuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/HHSetDtlDefaultValuesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesResponse HHSetDtlDefaultValues(EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/HHSetDtlDefaultValues", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/HHSetDtlDefaultValuesResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesResponse> HHSetDtlDefaultValuesAsync(EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/MarkShipmentLines", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/MarkShipmentLinesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/MarkShipmentLinesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesResponse MarkShipmentLines(EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/MarkShipmentLines", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/MarkShipmentLinesResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesResponse> MarkShipmentLinesAsync(EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PhantomStatusCheck", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PhantomStatusCheckResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PhantomStatusCheckEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void PhantomStatusCheck(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PhantomStatusCheck", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PhantomStatusCheckResponse")]
        System.Threading.Tasks.Task PhantomStatusCheckAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStage", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POChangeStageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStageEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POChangeStageResponse POChangeStage(EpicWAS.Epicor.CustShipSvc.POChangeStageRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStage", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POChangeStageResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POChangeStageResponse> POChangeStageAsync(EpicWAS.Epicor.CustShipSvc.POChangeStageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POChangeStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POChangeStatusResponse POChangeStatus(EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POChangeStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POChangeStatusResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POChangeStatusResponse> POChangeStatusAsync(EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POFindBuffer", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POFindBufferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POFindBufferEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POFindBufferResponse POFindBuffer(EpicWAS.Epicor.CustShipSvc.POFindBufferRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POFindBuffer", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POFindBufferResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POFindBufferResponse> POFindBufferAsync(EpicWAS.Epicor.CustShipSvc.POFindBufferRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POFindBufWhseBinLot", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POFindBufWhseBinLotResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POFindBufWhseBinLotEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotResponse POFindBufWhseBinLot(EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POFindBufWhseBinLot", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POFindBufWhseBinLotResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotResponse> POFindBufWhseBinLotAsync(EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetDtlList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetDtlListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POGetDtlListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POGetDtlListResponse POGetDtlList(EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetDtlList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetDtlListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetDtlListResponse> POGetDtlListAsync(EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POPCIDGetDtlList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POPCIDGetDtlListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POPCIDGetDtlListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListResponse POPCIDGetDtlList(EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POPCIDGetDtlList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POPCIDGetDtlListResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListResponse> POPCIDGetDtlListAsync(EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetNew", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetNewResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POGetNewEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POGetNewResponse POGetNew(EpicWAS.Epicor.CustShipSvc.POGetNewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetNew", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetNewResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetNewResponse> POGetNewAsync(EpicWAS.Epicor.CustShipSvc.POGetNewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteKitComponents", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteKitComponentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/DeleteKitComponentsEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsResponse DeleteKitComponents(EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/DeleteKitComponents", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/DeleteKitComponentsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsResponse> DeleteKitComponentsAsync(EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateOrderRelOnKitChildren", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateOrderRelOnKitChildrenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdateOrderRelOnKitChildrenEpicorFaultDetailF" +
            "ault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenResponse UpdateOrderRelOnKitChildren(EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateOrderRelOnKitChildren", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateOrderRelOnKitChildrenResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenResponse> UpdateOrderRelOnKitChildrenAsync(EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetShipTo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetShipToResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POGetShipToEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POGetShipToResponse POGetShipTo(EpicWAS.Epicor.CustShipSvc.POGetShipToRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POGetShipTo", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POGetShipToResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetShipToResponse> POGetShipToAsync(EpicWAS.Epicor.CustShipSvc.POGetShipToRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PostUpdate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PostUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PostUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        string PostUpdate(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PostUpdate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PostUpdateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opMessage")]
        System.Threading.Tasks.Task<string> PostUpdateAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POUpdate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POUpdateEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POUpdateResponse POUpdate(EpicWAS.Epicor.CustShipSvc.POUpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POUpdate", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POUpdateResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POUpdateResponse> POUpdateAsync(EpicWAS.Epicor.CustShipSvc.POUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POUpdateAndDisplay", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POUpdateAndDisplayResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POUpdateAndDisplayEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayResponse POUpdateAndDisplay(EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POUpdateAndDisplay", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POUpdateAndDisplayResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayResponse> POUpdateAndDisplayAsync(EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opVaildOrder")]
        bool POValidateOrder(int ipCustNum, int ipOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="opVaildOrder")]
        System.Threading.Tasks.Task<bool> POValidateOrderAsync(int ipCustNum, int ipOrderNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderRel", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderRelResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderRelEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void POValidateOrderRel(int ipPackNum, int ipOrderNum, int ipOrderLine, int ipOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderRel", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidateOrderRelResponse")]
        System.Threading.Tasks.Task POValidateOrderRelAsync(int ipPackNum, int ipOrderNum, int ipOrderLine, int ipOrderRelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidatePart", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidatePartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/POValidatePartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.POValidatePartResponse POValidatePart(EpicWAS.Epicor.CustShipSvc.POValidatePartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/POValidatePart", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/POValidatePartResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POValidatePartResponse> POValidatePartAsync(EpicWAS.Epicor.CustShipSvc.POValidatePartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PreCreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PreCreateMassShipDtlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PreCreateMassShipDtlEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlResponse PreCreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PreCreateMassShipDtl", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PreCreateMassShipDtlResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlResponse> PreCreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessKitChildern", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessKitChildernResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ProcessKitChildernEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        bool ProcessKitChildern(int ipOrderNum, int ipOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessKitChildern", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessKitChildernResponse")]
        System.Threading.Tasks.Task<bool> ProcessKitChildernAsync(int ipOrderNum, int ipOrderLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PrePickedOrders", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PrePickedOrdersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PrePickedOrdersEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.PrePickedOrdersResponse PrePickedOrders(EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PrePickedOrders", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PrePickedOrdersResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PrePickedOrdersResponse> PrePickedOrdersAsync(EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PrintSlip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PrintSlipResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/PrintSlipEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void PrintSlip(int packNum, bool printPreview);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/PrintSlip", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/PrintSlipResponse")]
        System.Threading.Tasks.Task PrintSlipAsync(int packNum, bool printPreview);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessMassShipKit", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessMassShipKitResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ProcessMassShipKitEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ProcessMassShipKit();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessMassShipKit", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessMassShipKitResponse")]
        System.Threading.Tasks.Task ProcessMassShipKitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderResponse ProcessPickedOrder(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrder", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderResponse> ProcessPickedOrderAsync(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderHH", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderHHResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderHHEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHResponse ProcessPickedOrderHH(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderHH", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ProcessPickedOrderHHResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHResponse> ProcessPickedOrderHHAsync(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/RebuildShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/RebuildShipUPSResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/RebuildShipUPSEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.RebuildShipUPSResponse RebuildShipUPS(EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/RebuildShipUPS", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/RebuildShipUPSResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.RebuildShipUPSResponse> RebuildShipUPSAsync(EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVEnableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVEnableEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableResponse SetUPSQVEnable(EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVEnable", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVEnableResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVShipStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVShipStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVShipStatusEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusResponse SetUPSQVShipStatus(EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVShipStatus", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/SetUPSQVShipStatusResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusResponse> SetUPSQVShipStatusAsync(EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/StageWarning", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/StageWarningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/StageWarningEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="iWarning")]
        string StageWarning(int iPackNum, string ipShipmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/StageWarning", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/StageWarningResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="iWarning")]
        System.Threading.Tasks.Task<string> StageWarningAsync(int iPackNum, string ipShipmentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UndoShipAll", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UndoShipAllResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UndoShipAllEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UndoShipAllResponse UndoShipAll(EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UndoShipAll", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UndoShipAllResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UndoShipAllResponse> UndoShipAllAsync(EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateManifestChargeAmts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateManifestChargeAmtsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdateManifestChargeAmtsEpicorFaultDetailFaul" +
            "t", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsResponse UpdateManifestChargeAmts(EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateManifestChargeAmts", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateManifestChargeAmtsResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsResponse> UpdateManifestChargeAmtsAsync(EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateMaster", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdateMasterEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdateMasterResponse UpdateMaster(EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdateMaster", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdateMasterResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateMasterResponse> UpdateMasterAsync(EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackCODWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackCODWithCartonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackCODWithCartonEpicorFaultDetailFault" +
            "", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonResponse UpdatePackCODWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackCODWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackCODWithCartonResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonResponse> UpdatePackCODWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackDeclaredWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackDeclaredWithCartonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackDeclaredWithCartonEpicorFaultDetail" +
            "Fault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonResponse UpdatePackDeclaredWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackDeclaredWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackDeclaredWithCartonResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonResponse> UpdatePackDeclaredWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackWeightWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackWeightWithCartonResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackWeightWithCartonEpicorFaultDetailFa" +
            "ult", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonResponse UpdatePackWeightWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/UpdatePackWeightWithCarton", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/UpdatePackWeightWithCartonResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonResponse> UpdatePackWeightWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateBinCode", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateBinCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateBinCodeEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidateBinCode(string ipWhse, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateBinCode", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateBinCodeResponse")]
        System.Threading.Tasks.Task ValidateBinCodeAsync(string ipWhse, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidatePackNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidatePackNumResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidatePackNumEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="_success")]
        bool ValidatePackNum(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidatePackNum", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidatePackNumResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="_success")]
        System.Threading.Tasks.Task<bool> ValidatePackNumAsync(int ipPackNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHold", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldResponse ValidateCreditHold(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHold", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldResponse> ValidateCreditHoldAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldPO", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldPOResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldPOEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPOResponse ValidateCreditHoldPO(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldPO", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldPOResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPOResponse> ValidateCreditHoldPOAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldSSC", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldSSCResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldSSCEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCResponse ValidateCreditHoldSSC(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldSSC", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateCreditHoldSSCResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCResponse> ValidateCreditHoldSSCAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateKitPart", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateKitPartResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateKitPartEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.ValidateKitPartResponse ValidateKitPart(EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateKitPart", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateKitPartResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateKitPartResponse> ValidateKitPartAsync(EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateLocationIDNumbers", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateLocationIDNumbersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateLocationIDNumbersEpicorFaultDetailFau" +
            "lt", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        void ValidateLocationIDNumbers(string[] IDNumList, string ipPartNum, string ipIDNumProposed, int ipPackNum, int ipPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateLocationIDNumbers", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateLocationIDNumbersResponse")]
        System.Threading.Tasks.Task ValidateLocationIDNumbersAsync(string[] IDNumList, string ipPartNum, string ipIDNumProposed, int ipPackNum, int ipPackLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateSN", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateSNResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/ValidateSNEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVoided")]
        bool ValidateSN(string ipSerialNum, string ipPartNum, string ipJobNum, decimal ipOurJobshipQty, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, bool ipShipFromWIP, string ipWarehouseCode, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/ValidateSN", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/ValidateSNResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="isVoided")]
        System.Threading.Tasks.Task<bool> ValidateSNAsync(string ipSerialNum, string ipPartNum, string ipJobNum, decimal ipOurJobshipQty, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, bool ipShipFromWIP, string ipWarehouseCode, string ipBinNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/VoidLegalNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/VoidLegalNumberEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CustShipTableset VoidLegalNumber(int ipPackNum, string ipVoidedReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/VoidLegalNumber", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/VoidLegalNumberResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> VoidLegalNumberAsync(int ipPackNum, string ipVoidedReason);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetAvailTranDocTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetAvailTranDocTypesEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTranDocTypes")]
        string GetAvailTranDocTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetAvailTranDocTypes", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetAvailTranDocTypesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="AvailTranDocTypes")]
        System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCodeDescList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCodeDescListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/GetCodeDescListEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        string GetCodeDescList(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/GetCodeDescList", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/GetCodeDescListResponse")]
        System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/NegativeInventoryTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/NegativeInventoryTestEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestResponse NegativeInventoryTest(EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/NegativeInventoryTest", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/NegativeInventoryTestResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPCBinOutLocation", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPCBinOutLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(EpicWAS.Epicor.CustShipSvc.EpicorFaultDetail), Action="Erp:BO:CustShip/CustShipSvcContract/CheckPCBinOutLocationEpicorFaultDetailFault", Name="EpicorFaultDetail", Namespace="http://schemas.datacontract.org/2004/07/Ice.Common")]
        EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationResponse CheckPCBinOutLocation(EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="Erp:BO:CustShip/CustShipSvcContract/CheckPCBinOutLocation", ReplyAction="Erp:BO:CustShip/CustShipSvcContract/CheckPCBinOutLocationResponse")]
        System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationResponse> CheckPCBinOutLocationAsync(EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPackageCodeAllocNegQty", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPackageCodeAllocNegQtyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipcalledFrom;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public object[] ipPackNumList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipPkgCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public int ipPkgCodeQty;
        
        public CheckPackageCodeAllocNegQtyRequest() {
        }
        
        public CheckPackageCodeAllocNegQtyRequest(string ipcalledFrom, object[] ipPackNumList, string ipPkgCode, int ipPkgCodeQty) {
            this.ipcalledFrom = ipcalledFrom;
            this.ipPackNumList = ipPackNumList;
            this.ipPkgCode = ipPkgCode;
            this.ipPkgCodeQty = ipPkgCodeQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPackageCodeAllocNegQtyResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPackageCodeAllocNegQtyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string opWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string opAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string opAllocWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string opAllocAction;
        
        public CheckPackageCodeAllocNegQtyResponse() {
        }
        
        public CheckPackageCodeAllocNegQtyResponse(string opWarning, string opAction, string opAllocWarning, string opAllocAction) {
            this.opWarning = opWarning;
            this.opAction = opAction;
            this.opAllocWarning = opAllocWarning;
            this.opAllocAction = opAllocAction;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateDigitalSignature", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GenerateDigitalSignatureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GenerateDigitalSignatureRequest() {
        }
        
        public GenerateDigitalSignatureRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateDigitalSignatureResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GenerateDigitalSignatureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GenerateDigitalSignatureResponse() {
        }
        
        public GenerateDigitalSignatureResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePCIDPackVerify", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangePCIDPackVerifyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangePCIDPackVerifyRequest() {
        }
        
        public ChangePCIDPackVerifyRequest(string ipSource, int ipPackNum, string ipPCID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipSource = ipSource;
            this.ipPackNum = ipPackNum;
            this.ipPCID = ipPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePCIDPackVerifyResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangePCIDPackVerifyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int opAlreadyScannedPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int opPCIDCount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string opItemPartNum;
        
        public ChangePCIDPackVerifyResponse() {
        }
        
        public ChangePCIDPackVerifyResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int opAlreadyScannedPackNum, int opPCIDCount, string opItemPartNum) {
            this.ds = ds;
            this.opAlreadyScannedPackNum = opAlreadyScannedPackNum;
            this.opPCIDCount = opPCIDCount;
            this.opItemPartNum = opItemPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PackVerifyPerformPackVerification", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PackVerifyPerformPackVerificationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        public PackVerifyPerformPackVerificationRequest() {
        }
        
        public PackVerifyPerformPackVerificationRequest(int ipPackNum) {
            this.ipPackNum = ipPackNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PackVerifyPerformPackVerificationResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PackVerifyPerformPackVerificationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool PackVerifyPerformPackVerificationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string opErrorMessage;
        
        public PackVerifyPerformPackVerificationResponse() {
        }
        
        public PackVerifyPerformPackVerificationResponse(bool PackVerifyPerformPackVerificationResult, string opErrorMessage) {
            this.PackVerifyPerformPackVerificationResult = PackVerifyPerformPackVerificationResult;
            this.opErrorMessage = opErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipHead", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipHeadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipHeadRequest() {
        }
        
        public GetNewShipHeadRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipHeadResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipHeadResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipHeadResponse() {
        }
        
        public GetNewShipHeadResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipHeadAttch", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipHeadAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        public GetNewShipHeadAttchRequest() {
        }
        
        public GetNewShipHeadAttchRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            this.ds = ds;
            this.packNum = packNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipHeadAttchResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipHeadAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipHeadAttchResponse() {
        }
        
        public GetNewShipHeadAttchResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCartonTrkDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewCartonTrkDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string shipmentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packNum;
        
        public GetNewCartonTrkDtlRequest() {
        }
        
        public GetNewCartonTrkDtlRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string shipmentType, int packNum) {
            this.ds = ds;
            this.shipmentType = shipmentType;
            this.packNum = packNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewCartonTrkDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewCartonTrkDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewCartonTrkDtlResponse() {
        }
        
        public GetNewCartonTrkDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        public GetNewShipDtlRequest() {
        }
        
        public GetNewShipDtlRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            this.ds = ds;
            this.packNum = packNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipDtlResponse() {
        }
        
        public GetNewShipDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtlAttch", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlAttchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packLine;
        
        public GetNewShipDtlAttchRequest() {
        }
        
        public GetNewShipDtlAttchRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine) {
            this.ds = ds;
            this.packNum = packNum;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtlAttchResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlAttchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipDtlAttchResponse() {
        }
        
        public GetNewShipDtlAttchResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipCOO", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipCOORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string relatedToFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public int packLine;
        
        public GetNewShipCOORequest() {
        }
        
        public GetNewShipCOORequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string relatedToFile, int packNum, int packLine) {
            this.ds = ds;
            this.relatedToFile = relatedToFile;
            this.packNum = packNum;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipCOOResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipCOOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipCOOResponse() {
        }
        
        public GetNewShipCOOResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtlTax", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlTaxRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string taxCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string rateCode;
        
        public GetNewShipDtlTaxRequest() {
        }
        
        public GetNewShipDtlTaxRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine, string taxCode, string rateCode) {
            this.ds = ds;
            this.packNum = packNum;
            this.packLine = packLine;
            this.taxCode = taxCode;
            this.rateCode = rateCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipDtlTaxResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipDtlTaxResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipDtlTaxResponse() {
        }
        
        public GetNewShipDtlTaxResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipMisc", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipMiscRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public int seqNum;
        
        public GetNewShipMiscRequest() {
        }
        
        public GetNewShipMiscRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine, int seqNum) {
            this.ds = ds;
            this.packNum = packNum;
            this.packLine = packLine;
            this.seqNum = seqNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipMiscResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipMiscResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipMiscResponse() {
        }
        
        public GetNewShipMiscResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipUPS", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipUPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        public GetNewShipUPSRequest() {
        }
        
        public GetNewShipUPSRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            this.ds = ds;
            this.packNum = packNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewShipUPSResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewShipUPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewShipUPSResponse() {
        }
        
        public GetNewShipUPSResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string whereClause;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int absolutePage;
        
        public GetListRequest() {
        }
        
        public GetListRequest(string whereClause, int pageSize, int absolutePage) {
            this.whereClause = whereClause;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset GetListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool morePages;
        
        public GetListResponse() {
        }
        
        public GetListResponse(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset GetListResult, bool morePages) {
            this.GetListResult = GetListResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRows", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string whereClauseShipHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string whereClauseShipHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string whereClauseCartonTrkDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string whereClauseShipDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string whereClauseShipDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string whereClauseShipCOO;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public string whereClauseShipDtlPackaging;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public string whereClauseShipDtlTax;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=8)]
        public string whereClauseShipMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=9)]
        public string whereClauseReplicatedPacks;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=10)]
        public string whereClauseShipUPS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=11)]
        public string whereClauseLegalNumberGenerate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=12)]
        public string whereClauseLegalNumGenOpts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=13)]
        public string whereClauseSalesKitCompIssue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=14)]
        public string whereClauseSelectedIDNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=15)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=16)]
        public string whereClauseShipTaxSum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=17)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=18)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=19)]
        public int absolutePage;
        
        public GetRowsRequest() {
        }
        
        public GetRowsRequest(
                    string whereClauseShipHead, 
                    string whereClauseShipHeadAttch, 
                    string whereClauseCartonTrkDtl, 
                    string whereClauseShipDtl, 
                    string whereClauseShipDtlAttch, 
                    string whereClauseShipCOO, 
                    string whereClauseShipDtlPackaging, 
                    string whereClauseShipDtlTax, 
                    string whereClauseShipMisc, 
                    string whereClauseReplicatedPacks, 
                    string whereClauseShipUPS, 
                    string whereClauseLegalNumberGenerate, 
                    string whereClauseLegalNumGenOpts, 
                    string whereClauseSalesKitCompIssue, 
                    string whereClauseSelectedIDNumbers, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseShipTaxSum, 
                    string whereClauseSNFormat, 
                    int pageSize, 
                    int absolutePage) {
            this.whereClauseShipHead = whereClauseShipHead;
            this.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            this.whereClauseCartonTrkDtl = whereClauseCartonTrkDtl;
            this.whereClauseShipDtl = whereClauseShipDtl;
            this.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            this.whereClauseShipCOO = whereClauseShipCOO;
            this.whereClauseShipDtlPackaging = whereClauseShipDtlPackaging;
            this.whereClauseShipDtlTax = whereClauseShipDtlTax;
            this.whereClauseShipMisc = whereClauseShipMisc;
            this.whereClauseReplicatedPacks = whereClauseReplicatedPacks;
            this.whereClauseShipUPS = whereClauseShipUPS;
            this.whereClauseLegalNumberGenerate = whereClauseLegalNumberGenerate;
            this.whereClauseLegalNumGenOpts = whereClauseLegalNumGenOpts;
            this.whereClauseSalesKitCompIssue = whereClauseSalesKitCompIssue;
            this.whereClauseSelectedIDNumbers = whereClauseSelectedIDNumbers;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseShipTaxSum = whereClauseShipTaxSum;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GetRowsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool morePages;
        
        public GetRowsResponse() {
        }
        
        public GetRowsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset GetRowsResult, bool morePages) {
            this.GetRowsResult = GetRowsResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExt", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool continueProcessingOnError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool rollbackParentOnChildError;
        
        public UpdateExtRequest() {
        }
        
        public UpdateExtRequest(EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError) {
            this.ds = ds;
            this.continueProcessingOnError = continueProcessingOnError;
            this.rollbackParentOnChildError = rollbackParentOnChildError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExtResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset UpdateExtResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool errorsOccurred;
        
        public UpdateExtResponse() {
        }
        
        public UpdateExtResponse(EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset UpdateExtResult, EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset ds, bool errorsOccurred) {
            this.UpdateExtResult = UpdateExtResult;
            this.ds = ds;
            this.errorsOccurred = errorsOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCustomerCartons", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CreateCustomerCartonsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipNbrCartonsToCreate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipPkgCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal ipPkgLength;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public decimal ipPkgWidth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public decimal ipPkgHeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public bool ipRecalcAmts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public bool ipZeroWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CreateCustomerCartonsRequest() {
        }
        
        public CreateCustomerCartonsRequest(int ipNbrCartonsToCreate, string ipPkgCode, decimal ipPkgLength, decimal ipPkgWidth, decimal ipPkgHeight, bool ipRecalcAmts, bool ipZeroWeight, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipNbrCartonsToCreate = ipNbrCartonsToCreate;
            this.ipPkgCode = ipPkgCode;
            this.ipPkgLength = ipPkgLength;
            this.ipPkgWidth = ipPkgWidth;
            this.ipPkgHeight = ipPkgHeight;
            this.ipRecalcAmts = ipRecalcAmts;
            this.ipZeroWeight = ipZeroWeight;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateCustomerCartonsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CreateCustomerCartonsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CreateCustomerCartonsResponse() {
        }
        
        public CreateCustomerCartonsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AskForShipToChange", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class AskForShipToChangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int iPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int iOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int iOrderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public int iOrderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool askUser;
        
        public AskForShipToChangeRequest() {
        }
        
        public AskForShipToChangeRequest(int iPackNum, int iOrderNum, int iOrderLine, int iOrderRelNum, bool askUser) {
            this.iPackNum = iPackNum;
            this.iOrderNum = iOrderNum;
            this.iOrderLine = iOrderLine;
            this.iOrderRelNum = iOrderRelNum;
            this.askUser = askUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AskForShipToChangeResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class AskForShipToChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool askUser;
        
        public AskForShipToChangeResponse() {
        }
        
        public AskForShipToChangeResponse(bool askUser) {
            this.askUser = askUser;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumber", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class AssignLegalNumberRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public AssignLegalNumberRequest() {
        }
        
        public AssignLegalNumberRequest(int ipPackNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AssignLegalNumberResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class AssignLegalNumberResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string opLegalNumMsg;
        
        public AssignLegalNumberResponse() {
        }
        
        public AssignLegalNumberResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string opLegalNumMsg) {
            this.ds = ds;
            this.opLegalNumMsg = opLegalNumMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidPackSlip", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class VoidPackSlipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset ds;
        
        public VoidPackSlipRequest() {
        }
        
        public VoidPackSlipRequest(int packNum, EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset ds) {
            this.packNum = packNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VoidPackSlipResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class VoidPackSlipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset ds;
        
        public VoidPackSlipResponse() {
        }
        
        public VoidPackSlipResponse(EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildSerialMatchingParams", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class BuildSerialMatchingParamsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int packLine;
        
        public BuildSerialMatchingParamsRequest() {
        }
        
        public BuildSerialMatchingParamsRequest(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset ds, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds1, int packLine) {
            this.ds = ds;
            this.ds1 = ds1;
            this.packLine = packLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildSerialMatchingParamsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class BuildSerialMatchingParamsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset ds;
        
        public BuildSerialMatchingParamsResponse() {
        }
        
        public BuildSerialMatchingParamsResponse(EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelVoid", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CancelVoidRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CancelVoidRequest() {
        }
        
        public CancelVoidRequest(int packNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.packNum = packNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelVoidResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CancelVoidResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CancelVoidResponse() {
        }
        
        public CancelVoidResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipCmpl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipCmplRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool shipCmpl;
        
        public ChangeShipCmplRequest() {
        }
        
        public ChangeShipCmplRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, bool shipCmpl) {
            this.ds = ds;
            this.packLine = packLine;
            this.shipCmpl = shipCmpl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipCmplResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipCmplResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string questionString;
        
        public ChangeShipCmplResponse() {
        }
        
        public ChangeShipCmplResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string questionString) {
            this.ds = ds;
            this.questionString = questionString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlMFCustID", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlMFCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipMFCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlMFCustIDRequest() {
        }
        
        public ChangeShipDtlMFCustIDRequest(string ipMFCustID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipMFCustID = ipMFCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlMFCustIDResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlMFCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlMFCustIDResponse() {
        }
        
        public ChangeShipDtlMFCustIDResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlMFShipToNum", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlMFShipToNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ProposedMFShipToNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlMFShipToNumRequest() {
        }
        
        public ChangeShipDtlMFShipToNumRequest(string ProposedMFShipToNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ProposedMFShipToNum = ProposedMFShipToNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlMFShipToNumResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlMFShipToNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlMFShipToNumResponse() {
        }
        
        public ChangeShipDtlMFShipToNumResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlUseOTMF", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlUseOTMFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlUseOTMFRequest() {
        }
        
        public ChangeShipDtlUseOTMFRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipDtlUseOTMFResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipDtlUseOTMFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipDtlUseOTMFResponse() {
        }
        
        public ChangeShipDtlUseOTMFResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipHeadShipToCustID", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipHeadShipToCustIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string iShipToCustID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipHeadShipToCustIDRequest() {
        }
        
        public ChangeShipHeadShipToCustIDRequest(string iShipToCustID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.iShipToCustID = iShipToCustID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipHeadShipToCustIDResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipHeadShipToCustIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipHeadShipToCustIDResponse() {
        }
        
        public ChangeShipHeadShipToCustIDResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipMiscPrcnt", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipMiscPrcntRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public decimal newPrcnt;
        
        public ChangeShipMiscPrcntRequest() {
        }
        
        public ChangeShipMiscPrcntRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, decimal newPrcnt) {
            this.ds = ds;
            this.newPrcnt = newPrcnt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeShipMiscPrcntResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeShipMiscPrcntResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeShipMiscPrcntResponse() {
        }
        
        public ChangeShipMiscPrcntResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeStatus", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public System.Guid ipShipHedRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool ipResetCODCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public bool ipResetInsCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeStatusRequest() {
        }
        
        public ChangeStatusRequest(System.Guid ipShipHedRowID, string ipStatus, bool ipResetCODCharges, bool ipResetInsCharges, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipShipHedRowID = ipShipHedRowID;
            this.ipStatus = ipStatus;
            this.ipResetCODCharges = ipResetCODCharges;
            this.ipResetInsCharges = ipResetInsCharges;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeStatusResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeStatusResponse() {
        }
        
        public ChangeStatusResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePCID", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangePCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangePCIDRequest() {
        }
        
        public ChangePCIDRequest(string ipSource, int ipPackNum, string ipPCID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipSource = ipSource;
            this.ipPackNum = ipPackNum;
            this.ipPCID = ipPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePCIDResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangePCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangePCIDResponse() {
        }
        
        public ChangePCIDResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeWarrantyToFSA", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeWarrantyToFSARequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeWarrantyToFSARequest() {
        }
        
        public ChangeWarrantyToFSARequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeWarrantyToFSAResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ChangeWarrantyToFSAResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ChangeWarrantyToFSAResponse() {
        }
        
        public ChangeWarrantyToFSAResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemovePCID", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class RemovePCIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipSource;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public RemovePCIDRequest() {
        }
        
        public RemovePCIDRequest(string ipSource, int ipPackNum, string ipPCID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipSource = ipSource;
            this.ipPackNum = ipPackNum;
            this.ipPCID = ipPCID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemovePCIDResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class RemovePCIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int opPCIDCount;
        
        public RemovePCIDResponse() {
        }
        
        public RemovePCIDResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int opPCIDCount) {
            this.ds = ds;
            this.opPCIDCount = opPCIDCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckCompliance", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckComplianceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckComplianceRequest() {
        }
        
        public CheckComplianceRequest(int ipPackNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckComplianceResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckComplianceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool opCompliant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckComplianceResponse() {
        }
        
        public CheckComplianceResponse(bool opCompliant, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.opCompliant = opCompliant;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderComplete", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckOrderCompleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipShipmentType;
        
        public CheckOrderCompleteRequest() {
        }
        
        public CheckOrderCompleteRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int ipPackNum, string ipShipmentType) {
            this.ds = ds;
            this.ipPackNum = ipPackNum;
            this.ipShipmentType = ipShipmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOrderCompleteResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckOrderCompleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string msg;
        
        public CheckOrderCompleteResponse() {
        }
        
        public CheckOrderCompleteResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string msg) {
            this.ds = ds;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPrePartInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPrePartInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderLine;
        
        public CheckPrePartInfoRequest() {
        }
        
        public CheckPrePartInfoRequest(string partNum, int orderNum, int orderLine) {
            this.partNum = partNum;
            this.orderNum = orderNum;
            this.orderLine = orderLine;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPrePartInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPrePartInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string vMsgText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool vSubAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string vMsgType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string origPartNum;
        
        public CheckPrePartInfoResponse() {
        }
        
        public CheckPrePartInfoResponse(string partNum, string vMsgText, bool vSubAvail, string vMsgType, string origPartNum) {
            this.partNum = partNum;
            this.vMsgText = vMsgText;
            this.vSubAvail = vSubAvail;
            this.vMsgType = vMsgType;
            this.origPartNum = origPartNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckReadyToInvoice", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckReadyToInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool readyToInvoice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckReadyToInvoiceRequest() {
        }
        
        public CheckReadyToInvoiceRequest(bool readyToInvoice, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.readyToInvoice = readyToInvoice;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckReadyToInvoiceResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckReadyToInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string legalNumberMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckReadyToInvoiceResponse() {
        }
        
        public CheckReadyToInvoiceResponse(string legalNumberMessage, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.legalNumberMessage = legalNumberMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckShipDtlRequest() {
        }
        
        public CheckShipDtlRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string releaseMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string completeMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string shippingMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string lotMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string inventoryMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public string lockQtyMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public string allocationMessage;
        
        public CheckShipDtlResponse() {
        }
        
        public CheckShipDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string releaseMessage, string completeMessage, string shippingMessage, string lotMessage, string inventoryMessage, string lockQtyMessage, string allocationMessage) {
            this.ds = ds;
            this.releaseMessage = releaseMessage;
            this.completeMessage = completeMessage;
            this.shippingMessage = shippingMessage;
            this.lotMessage = lotMessage;
            this.inventoryMessage = inventoryMessage;
            this.lockQtyMessage = lockQtyMessage;
            this.allocationMessage = allocationMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMassShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CreateMassShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CreateMassShipDtlRequest() {
        }
        
        public CreateMassShipDtlRequest(int packNum, int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.packNum = packNum;
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMassShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CreateMassShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CreateMassShipDtlResponse() {
        }
        
        public CreateMassShipDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePhantomPacks", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeletePhantomPacksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeletePhantomPacksRequest() {
        }
        
        public DeletePhantomPacksRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeletePhantomPacksResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeletePhantomPacksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeletePhantomPacksResponse() {
        }
        
        public DeletePhantomPacksResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRangePhantomPacks", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeleteRangePhantomPacksRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public System.Nullable<int> ipFromCase;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public System.Nullable<int> ipToCase;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeleteRangePhantomPacksRequest() {
        }
        
        public DeleteRangePhantomPacksRequest(System.Nullable<int> ipFromCase, System.Nullable<int> ipToCase, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipFromCase = ipFromCase;
            this.ipToCase = ipToCase;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteRangePhantomPacksResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeleteRangePhantomPacksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeleteRangePhantomPacksResponse() {
        }
        
        public DeleteRangePhantomPacksResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCartonPackaging", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetCartonPackagingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPkgCode;
        
        public GetCartonPackagingRequest() {
        }
        
        public GetCartonPackagingRequest(string ipPkgCode) {
            this.ipPkgCode = ipPkgCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCartonPackagingResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetCartonPackagingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public decimal opPkgHeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public decimal opPkgWidth;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal opPkgLength;
        
        public GetCartonPackagingResponse() {
        }
        
        public GetCartonPackagingResponse(decimal opPkgHeight, decimal opPkgWidth, decimal opPkgLength) {
            this.opPkgHeight = opPkgHeight;
            this.opPkgWidth = opPkgWidth;
            this.opPkgLength = opPkgLength;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHeadOrderInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetHeadOrderInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetHeadOrderInfoRequest() {
        }
        
        public GetHeadOrderInfoRequest(int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHeadOrderInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetHeadOrderInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string creditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetHeadOrderInfoResponse() {
        }
        
        public GetHeadOrderInfoResponse(string creditMessage, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.creditMessage = creditMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobDtlInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetJobDtlInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string jobNum;
        
        public GetJobDtlInfoRequest() {
        }
        
        public GetJobDtlInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, string jobNum) {
            this.ds = ds;
            this.packLine = packLine;
            this.jobNum = jobNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobDtlInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetJobDtlInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetJobDtlInfoResponse() {
        }
        
        public GetJobDtlInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetJobInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string jobNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetJobInfoRequest() {
        }
        
        public GetJobInfoRequest(string jobNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.jobNum = jobNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetJobInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string creditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetJobInfoResponse() {
        }
        
        public GetJobInfoResponse(string creditMessage, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.creditMessage = creditMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLegalNumGenOpts", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetLegalNumGenOptsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetLegalNumGenOptsRequest() {
        }
        
        public GetLegalNumGenOptsRequest(int ipPackNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLegalNumGenOptsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetLegalNumGenOptsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool opPromptForNum;
        
        public GetLegalNumGenOptsResponse() {
        }
        
        public GetLegalNumGenOptsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, bool opPromptForNum) {
            this.ds = ds;
            this.opPromptForNum = opPromptForNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetLegalNumGenOpts", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetLegalNumGenOptsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POGetLegalNumGenOptsRequest() {
        }
        
        public POGetLegalNumGenOptsRequest(int ipPackNum, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetLegalNumGenOptsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetLegalNumGenOptsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool opPromptForNum;
        
        public POGetLegalNumGenOptsResponse() {
        }
        
        public POGetLegalNumGenOptsResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, bool opPromptForNum) {
            this.ds = ds;
            this.opPromptForNum = opPromptForNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetManifestInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetManifestInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipSalesOrder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetManifestInfoRequest() {
        }
        
        public GetManifestInfoRequest(int ipSalesOrder, int ipPackNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipSalesOrder = ipSalesOrder;
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetManifestInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetManifestInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetManifestInfoResponse() {
        }
        
        public GetManifestInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrdrShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewOrdrShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderNum;
        
        public GetNewOrdrShipDtlRequest() {
        }
        
        public GetNewOrdrShipDtlRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int orderNum) {
            this.ds = ds;
            this.packNum = packNum;
            this.orderNum = orderNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrdrShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewOrdrShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewOrdrShipDtlResponse() {
        }
        
        public GetNewOrdrShipDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrdrShipUPS", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewOrdrShipUPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packNum;
        
        public GetNewOrdrShipUPSRequest() {
        }
        
        public GetNewOrdrShipUPSRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            this.ds = ds;
            this.packNum = packNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNewOrdrShipUPSResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetNewOrdrShipUPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetNewOrdrShipUPSResponse() {
        }
        
        public GetNewOrdrShipUPSResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetOrderInfoRequest() {
        }
        
        public GetOrderInfoRequest(int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string creditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetOrderInfoResponse() {
        }
        
        public GetOrderInfoResponse(string creditMessage, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.creditMessage = creditMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderLineInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderLineInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string subsPart;
        
        public GetOrderLineInfoRequest() {
        }
        
        public GetOrderLineInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, int orderLine, string subsPart) {
            this.ds = ds;
            this.packLine = packLine;
            this.orderLine = orderLine;
            this.subsPart = subsPart;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderLineInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderLineInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetOrderLineInfoResponse() {
        }
        
        public GetOrderLineInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderRelInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderRelInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public bool allowNewShipTo;
        
        public GetOrderRelInfoRequest() {
        }
        
        public GetOrderRelInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, int orderRelNum, bool allowNewShipTo) {
            this.ds = ds;
            this.packLine = packLine;
            this.orderRelNum = orderRelNum;
            this.allowNewShipTo = allowNewShipTo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOrderRelInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetOrderRelInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetOrderRelInfoResponse() {
        }
        
        public GetOrderRelInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackaging", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackagingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPkgCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPackagingRequest() {
        }
        
        public GetPackagingRequest(string ipPkgCode, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPkgCode = ipPkgCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackagingResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackagingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPackagingResponse() {
        }
        
        public GetPackagingResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackClass", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackClassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPkgClass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPackClassRequest() {
        }
        
        public GetPackClassRequest(string ipPkgClass, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPkgClass = ipPkgClass;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackClassResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackClassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPackClassResponse() {
        }
        
        public GetPackClassResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackOutPartXRef", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackOutPartXRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string rowType;
        
        public GetPackOutPartXRefRequest() {
        }
        
        public GetPackOutPartXRefRequest(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, int packLine, string partNum, System.Guid SysRowID, string rowType) {
            this.ds = ds;
            this.packLine = packLine;
            this.partNum = partNum;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPackOutPartXRefResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPackOutPartXRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string serialWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool multipleMatch;
        
        public GetPackOutPartXRefResponse() {
        }
        
        public GetPackOutPartXRefResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, string partNum, string serialWarning, string questionString, bool multipleMatch) {
            this.ds = ds;
            this.partNum = partNum;
            this.serialWarning = serialWarning;
            this.questionString = questionString;
            this.multipleMatch = multipleMatch;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPartInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public System.Guid SysRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string rowType;
        
        public GetPartInfoRequest() {
        }
        
        public GetPartInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, string partNum, System.Guid SysRowID, string rowType) {
            this.ds = ds;
            this.packLine = packLine;
            this.partNum = partNum;
            this.SysRowID = SysRowID;
            this.rowType = rowType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPartInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPartInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string partNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string serialWarning;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string questionString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool multipleMatch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string idWarning;
        
        public GetPartInfoResponse() {
        }
        
        public GetPartInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string partNum, string serialWarning, string questionString, bool multipleMatch, string idWarning) {
            this.ds = ds;
            this.partNum = partNum;
            this.serialWarning = serialWarning;
            this.questionString = questionString;
            this.multipleMatch = multipleMatch;
            this.idWarning = idWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPayBTFlagDefaults", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPayBTFlagDefaultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipPayFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPayBTFlagDefaultsRequest() {
        }
        
        public GetPayBTFlagDefaultsRequest(int ipOrderNum, string ipPayFlag, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipOrderNum = ipOrderNum;
            this.ipPayFlag = ipPayFlag;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPayBTFlagDefaultsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPayBTFlagDefaultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetPayBTFlagDefaultsResponse() {
        }
        
        public GetPayBTFlagDefaultsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOPackaging", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPOPackagingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPkgCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public GetPOPackagingRequest() {
        }
        
        public GetPOPackagingRequest(string ipPkgCode, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipPkgCode = ipPkgCode;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOPackagingResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPOPackagingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public GetPOPackagingResponse() {
        }
        
        public GetPOPackagingResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOPackClass", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPOPackClassRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPkgClass;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public GetPOPackClassRequest() {
        }
        
        public GetPOPackClassRequest(string ipPkgClass, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipPkgClass = ipPkgClass;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOPackClassResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetPOPackClassResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public GetPOPackClassResponse() {
        }
        
        public GetPOPackClassResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQtyInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetQtyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal displayInvQty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public decimal ourJobShipQty;
        
        public GetQtyInfoRequest() {
        }
        
        public GetQtyInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, decimal displayInvQty, decimal ourJobShipQty) {
            this.ds = ds;
            this.packLine = packLine;
            this.displayInvQty = displayInvQty;
            this.ourJobShipQty = ourJobShipQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetQtyInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetQtyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetQtyInfoResponse() {
        }
        
        public GetQtyInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsContactTracker", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsContactTrackerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string whereClauseShipHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string whereClauseShipHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string whereClauseShipDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string whereClauseShipDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string whereClauseShipMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public string whereClauseSerialNumberSearch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=8)]
        public string contactName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=9)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=10)]
        public int absolutePage;
        
        public GetRowsContactTrackerRequest() {
        }
        
        public GetRowsContactTrackerRequest(string whereClauseShipHead, string whereClauseShipHeadAttch, string whereClauseShipDtl, string whereClauseShipDtlAttch, string whereClauseShipMisc, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, string contactName, int pageSize, int absolutePage) {
            this.whereClauseShipHead = whereClauseShipHead;
            this.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            this.whereClauseShipDtl = whereClauseShipDtl;
            this.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            this.whereClauseShipMisc = whereClauseShipMisc;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.contactName = contactName;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsContactTrackerResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsContactTrackerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsContactTrackerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool morePages;
        
        public GetRowsContactTrackerResponse() {
        }
        
        public GetRowsContactTrackerResponse(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsContactTrackerResult, bool morePages) {
            this.GetRowsContactTrackerResult = GetRowsContactTrackerResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTracker", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string whereClauseShipHead;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string whereClauseShipHeadAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string whereClauseShipDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string whereClauseShipDtlAttch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string whereClauseShipMisc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string whereClauseSelectedSerialNumbers;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public string whereClauseSerialNumberSearch;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public string whereClauseSNFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=8)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=9)]
        public int absolutePage;
        
        public GetRowsCustomerTrackerRequest() {
        }
        
        public GetRowsCustomerTrackerRequest(string whereClauseShipHead, string whereClauseShipHeadAttch, string whereClauseShipDtl, string whereClauseShipDtlAttch, string whereClauseShipMisc, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, int pageSize, int absolutePage) {
            this.whereClauseShipHead = whereClauseShipHead;
            this.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            this.whereClauseShipDtl = whereClauseShipDtl;
            this.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            this.whereClauseShipMisc = whereClauseShipMisc;
            this.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            this.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            this.whereClauseSNFormat = whereClauseSNFormat;
            this.pageSize = pageSize;
            this.absolutePage = absolutePage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRowsCustomerTrackerResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetRowsCustomerTrackerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsCustomerTrackerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool morePages;
        
        public GetRowsCustomerTrackerResponse() {
        }
        
        public GetRowsCustomerTrackerResponse(EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsCustomerTrackerResult, bool morePages) {
            this.GetRowsCustomerTrackerResult = GetRowsCustomerTrackerResult;
            this.morePages = morePages;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateLocationIDNum", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GenerateLocationIDNumRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int ipPackLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public bool ipFromMfg;
        
        public GenerateLocationIDNumRequest() {
        }
        
        public GenerateLocationIDNumRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int ipPackNum, int ipPackLine, bool ipFromMfg) {
            this.ds = ds;
            this.ipPackNum = ipPackNum;
            this.ipPackLine = ipPackLine;
            this.ipFromMfg = ipFromMfg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GenerateLocationIDNumResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GenerateLocationIDNumResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GenerateLocationIDNumResponse() {
        }
        
        public GenerateLocationIDNumResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipMiscDefaults", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetShipMiscDefaultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string miscCode;
        
        public GetShipMiscDefaultsRequest() {
        }
        
        public GetShipMiscDefaultsRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string miscCode) {
            this.ds = ds;
            this.miscCode = miscCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipMiscDefaultsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetShipMiscDefaultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetShipMiscDefaultsResponse() {
        }
        
        public GetShipMiscDefaultsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipToAddr", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetShipToAddrRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string shipToNum;
        
        public GetShipToAddrRequest() {
        }
        
        public GetShipToAddrRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string shipToNum) {
            this.ds = ds;
            this.shipToNum = shipToNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetShipToAddrResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetShipToAddrResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetShipToAddrResponse() {
        }
        
        public GetShipToAddrResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranDocTypeID", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetTranDocTypeIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipTranDocTypeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetTranDocTypeIDRequest() {
        }
        
        public GetTranDocTypeIDRequest(string ipTranDocTypeID, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipTranDocTypeID = ipTranDocTypeID;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranDocTypeIDResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetTranDocTypeIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetTranDocTypeIDResponse() {
        }
        
        public GetTranDocTypeIDResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateWarrantyExpiration", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CalculateWarrantyExpirationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public System.Nullable<System.DateTime> effectiveDate;
        
        public CalculateWarrantyExpirationRequest() {
        }
        
        public CalculateWarrantyExpirationRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int orderLine, int orderRelNum, System.Nullable<System.DateTime> effectiveDate) {
            this.ds = ds;
            this.orderLine = orderLine;
            this.orderRelNum = orderRelNum;
            this.effectiveDate = effectiveDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateWarrantyExpirationResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CalculateWarrantyExpirationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CalculateWarrantyExpirationResponse() {
        }
        
        public CalculateWarrantyExpirationResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWarrantyInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetWarrantyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string warrantyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public int orderRelNum;
        
        public GetWarrantyInfoRequest() {
        }
        
        public GetWarrantyInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string warrantyCode, int orderLine, int orderRelNum) {
            this.ds = ds;
            this.warrantyCode = warrantyCode;
            this.orderLine = orderLine;
            this.orderRelNum = orderRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWarrantyInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetWarrantyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetWarrantyInfoResponse() {
        }
        
        public GetWarrantyInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearWarrantyInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ClearWarrantyInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int orderRelNum;
        
        public ClearWarrantyInfoRequest() {
        }
        
        public ClearWarrantyInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int orderLine, int orderRelNum) {
            this.ds = ds;
            this.orderLine = orderLine;
            this.orderRelNum = orderRelNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearWarrantyInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ClearWarrantyInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ClearWarrantyInfoResponse() {
        }
        
        public ClearWarrantyInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWhseInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetWhseInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string whseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string whseField;
        
        public GetWhseInfoRequest() {
        }
        
        public GetWhseInfoRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, string whseCode, string whseField) {
            this.ds = ds;
            this.packLine = packLine;
            this.whseCode = whseCode;
            this.whseField = whseField;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWhseInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class GetWhseInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public GetWhseInfoResponse() {
        }
        
        public GetWhseInfoResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHCreateMassShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHCreateMassShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHCreateMassShipDtlRequest() {
        }
        
        public HHCreateMassShipDtlRequest(int packNum, int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.packNum = packNum;
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHCreateMassShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHCreateMassShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHCreateMassShipDtlResponse() {
        }
        
        public HHCreateMassShipDtlResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHGetOrderInfo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHGetOrderInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHGetOrderInfoRequest() {
        }
        
        public HHGetOrderInfoRequest(int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHGetOrderInfoResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHGetOrderInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string creditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHGetOrderInfoResponse() {
        }
        
        public HHGetOrderInfoResponse(string creditMessage, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.creditMessage = creditMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHSetDtlDefaultValues", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHSetDtlDefaultValuesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHSetDtlDefaultValuesRequest() {
        }
        
        public HHSetDtlDefaultValuesRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="HHSetDtlDefaultValuesResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class HHSetDtlDefaultValuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public HHSetDtlDefaultValuesResponse() {
        }
        
        public HHSetDtlDefaultValuesResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MarkShipmentLines", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class MarkShipmentLinesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public MarkShipmentLinesRequest() {
        }
        
        public MarkShipmentLinesRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MarkShipmentLinesResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class MarkShipmentLinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public MarkShipmentLinesResponse() {
        }
        
        public MarkShipmentLinesResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POChangeStage", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POChangeStageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POChangeStageRequest() {
        }
        
        public POChangeStageRequest(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POChangeStageResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POChangeStageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POChangeStageResponse() {
        }
        
        public POChangeStageResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POChangeStatus", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POChangeStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool ipResetCODCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool ipResetInsCharges;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POChangeStatusRequest() {
        }
        
        public POChangeStatusRequest(string ipStatus, bool ipResetCODCharges, bool ipResetInsCharges, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipStatus = ipStatus;
            this.ipResetCODCharges = ipResetCODCharges;
            this.ipResetInsCharges = ipResetInsCharges;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POChangeStatusResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POChangeStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POChangeStatusResponse() {
        }
        
        public POChangeStatusResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POFindBuffer", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POFindBufferRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POFindBufferRequest() {
        }
        
        public POFindBufferRequest(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POFindBufferResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POFindBufferResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int found;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public System.Guid rowident;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POFindBufferResponse() {
        }
        
        public POFindBufferResponse(int found, System.Guid rowident, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.found = found;
            this.rowident = rowident;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POFindBufWhseBinLot", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POFindBufWhseBinLotRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POFindBufWhseBinLotRequest() {
        }
        
        public POFindBufWhseBinLotRequest(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POFindBufWhseBinLotResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POFindBufWhseBinLotResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int found;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public System.Guid rowident;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POFindBufWhseBinLotResponse() {
        }
        
        public POFindBufWhseBinLotResponse(int found, System.Guid rowident, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.found = found;
            this.rowident = rowident;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetDtlList", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetDtlListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string ipPackMode;
        
        public POGetDtlListRequest() {
        }
        
        public POGetDtlListRequest(int ipPackNum, string ipPCID, int ipOrderNum, string ipPackMode) {
            this.ipPackNum = ipPackNum;
            this.ipPCID = ipPCID;
            this.ipOrderNum = ipOrderNum;
            this.ipPackMode = ipPackMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetDtlListResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetDtlListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetDtlListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string cWarning;
        
        public POGetDtlListResponse() {
        }
        
        public POGetDtlListResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetDtlListResult, string cWarning) {
            this.POGetDtlListResult = POGetDtlListResult;
            this.cWarning = cWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POPCIDGetDtlList", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POPCIDGetDtlListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string ipPackMode;
        
        public POPCIDGetDtlListRequest() {
        }
        
        public POPCIDGetDtlListRequest(int ipPackNum, string ipPCID, int ipOrderNum, string ipPackMode) {
            this.ipPackNum = ipPackNum;
            this.ipPCID = ipPCID;
            this.ipOrderNum = ipOrderNum;
            this.ipPackMode = ipPackMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POPCIDGetDtlListResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POPCIDGetDtlListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POPCIDGetDtlListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string cWarning;
        
        public POPCIDGetDtlListResponse() {
        }
        
        public POPCIDGetDtlListResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset POPCIDGetDtlListResult, string cWarning) {
            this.POPCIDGetDtlListResult = POPCIDGetDtlListResult;
            this.cWarning = cWarning;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetNew", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetNewRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        public POGetNewRequest() {
        }
        
        public POGetNewRequest(int ipOrderNum, int ipPackNum) {
            this.ipOrderNum = ipOrderNum;
            this.ipPackNum = ipPackNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetNewResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetNewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetNewResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string pcWarningMsg;
        
        public POGetNewResponse() {
        }
        
        public POGetNewResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetNewResult, string pcWarningMsg) {
            this.POGetNewResult = POGetNewResult;
            this.pcWarningMsg = pcWarningMsg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteKitComponents", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeleteKitComponentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeleteKitComponentsRequest() {
        }
        
        public DeleteKitComponentsRequest(int ipPackNum, int ipPackLine, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ipPackLine = ipPackLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteKitComponentsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class DeleteKitComponentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public DeleteKitComponentsResponse() {
        }
        
        public DeleteKitComponentsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateOrderRelOnKitChildren", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateOrderRelOnKitChildrenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int ipOrderRelNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateOrderRelOnKitChildrenRequest() {
        }
        
        public UpdateOrderRelOnKitChildrenRequest(int ipPackNum, int ipPackLine, int ipOrderRelNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ipPackLine = ipPackLine;
            this.ipOrderRelNum = ipOrderRelNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateOrderRelOnKitChildrenResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateOrderRelOnKitChildrenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateOrderRelOnKitChildrenResponse() {
        }
        
        public UpdateOrderRelOnKitChildrenResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetShipTo", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetShipToRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POGetShipToRequest() {
        }
        
        public POGetShipToRequest(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POGetShipToResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POGetShipToResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POGetShipToResponse() {
        }
        
        public POGetShipToResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POUpdate", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public System.Guid ipSourceRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string poLinkValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POUpdateRequest() {
        }
        
        public POUpdateRequest(System.Guid ipSourceRowID, string poLinkValues, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipSourceRowID = ipSourceRowID;
            this.poLinkValues = poLinkValues;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POUpdateResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int opPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POUpdateResponse() {
        }
        
        public POUpdateResponse(int opPackNum, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.opPackNum = opPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POUpdateAndDisplay", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POUpdateAndDisplayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public System.Guid ipSourceRowID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string poLinkValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public int currLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POUpdateAndDisplayRequest() {
        }
        
        public POUpdateAndDisplayRequest(System.Guid ipSourceRowID, string poLinkValues, int currLine, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipSourceRowID = ipSourceRowID;
            this.poLinkValues = poLinkValues;
            this.currLine = currLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POUpdateAndDisplayResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POUpdateAndDisplayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int opPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string dspLegalNumMessage;
        
        public POUpdateAndDisplayResponse() {
        }
        
        public POUpdateAndDisplayResponse(int opPackNum, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, string dspLegalNumMessage) {
            this.opPackNum = opPackNum;
            this.ds = ds;
            this.dspLegalNumMessage = dspLegalNumMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POValidatePart", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POValidatePartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        public POValidatePartRequest() {
        }
        
        public POValidatePartRequest(string ipPartNum, int ipOrderNum, EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            this.ipPartNum = ipPartNum;
            this.ipOrderNum = ipOrderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="POValidatePartResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class POValidatePartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool opValidPart;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string vMsgText;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public bool vSubAvail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string vMsgType;
        
        public POValidatePartResponse() {
        }
        
        public POValidatePartResponse(EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, bool opValidPart, string vMsgText, bool vSubAvail, string vMsgType) {
            this.ds = ds;
            this.opValidPart = opValidPart;
            this.vMsgText = vMsgText;
            this.vSubAvail = vSubAvail;
            this.vMsgType = vMsgType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreCreateMassShipDtl", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PreCreateMassShipDtlRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int orderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public PreCreateMassShipDtlRequest() {
        }
        
        public PreCreateMassShipDtlRequest(int packNum, int orderNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.packNum = packNum;
            this.orderNum = orderNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PreCreateMassShipDtlResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PreCreateMassShipDtlResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string warnMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public PreCreateMassShipDtlResponse() {
        }
        
        public PreCreateMassShipDtlResponse(string warnMsg, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.warnMsg = warnMsg;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePickedOrders", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PrePickedOrdersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        public PrePickedOrdersRequest() {
        }
        
        public PrePickedOrdersRequest(EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrePickedOrdersResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class PrePickedOrdersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool PrePickedOrdersResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string vMessage;
        
        public PrePickedOrdersResponse() {
        }
        
        public PrePickedOrdersResponse(bool PrePickedOrdersResult, EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds, string vMessage) {
            this.PrePickedOrdersResult = PrePickedOrdersResult;
            this.ds = ds;
            this.vMessage = vMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPickedOrder", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ProcessPickedOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool pConsolidate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool skipDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        public ProcessPickedOrderRequest() {
        }
        
        public ProcessPickedOrderRequest(bool pConsolidate, bool skipDelete, EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds) {
            this.pConsolidate = pConsolidate;
            this.skipDelete = skipDelete;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPickedOrderResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ProcessPickedOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrderResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string vMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        public ProcessPickedOrderResponse() {
        }
        
        public ProcessPickedOrderResponse(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrderResult, string vMessage, EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds) {
            this.ProcessPickedOrderResult = ProcessPickedOrderResult;
            this.vMessage = vMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPickedOrderHH", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ProcessPickedOrderHHRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool pConsolidate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool skipDelete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        public ProcessPickedOrderHHRequest() {
        }
        
        public ProcessPickedOrderHHRequest(bool pConsolidate, bool skipDelete, EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds) {
            this.pConsolidate = pConsolidate;
            this.skipDelete = skipDelete;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPickedOrderHHResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ProcessPickedOrderHHResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrderHHResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string vMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds;
        
        public ProcessPickedOrderHHResponse() {
        }
        
        public ProcessPickedOrderHHResponse(EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrderHHResult, string vMessage, EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds) {
            this.ProcessPickedOrderHHResult = ProcessPickedOrderHHResult;
            this.vMessage = vMessage;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RebuildShipUPS", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class RebuildShipUPSRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public RebuildShipUPSRequest() {
        }
        
        public RebuildShipUPSRequest(int ipPackNum, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RebuildShipUPSResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class RebuildShipUPSResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public RebuildShipUPSResponse() {
        }
        
        public RebuildShipUPSResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnable", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class SetUPSQVEnableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public bool ipQVEnable;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public SetUPSQVEnableRequest() {
        }
        
        public SetUPSQVEnableRequest(bool ipQVEnable, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipQVEnable = ipQVEnable;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVEnableResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class SetUPSQVEnableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public SetUPSQVEnableResponse() {
        }
        
        public SetUPSQVEnableResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVShipStatus", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class SetUPSQVShipStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipShipStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public SetUPSQVShipStatusRequest() {
        }
        
        public SetUPSQVShipStatusRequest(string ipShipStatus, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipShipStatus = ipShipStatus;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUPSQVShipStatusResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class SetUPSQVShipStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public SetUPSQVShipStatusResponse() {
        }
        
        public SetUPSQVShipStatusResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UndoShipAll", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UndoShipAllRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UndoShipAllRequest() {
        }
        
        public UndoShipAllRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UndoShipAllResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UndoShipAllResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UndoShipAllResponse() {
        }
        
        public UndoShipAllResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateManifestChargeAmts", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateManifestChargeAmtsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipAmountType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool ipAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateManifestChargeAmtsRequest() {
        }
        
        public UpdateManifestChargeAmtsRequest(string ipAmountType, bool ipAction, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipAmountType = ipAmountType;
            this.ipAction = ipAction;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateManifestChargeAmtsResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateManifestChargeAmtsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdateManifestChargeAmtsResponse() {
        }
        
        public UpdateManifestChargeAmtsResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMaster", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateMasterRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool doValidateCreditHold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool doCheckShipDtl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public bool doLotValidation;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool doCheckOrderComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public bool doPostUpdate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public bool doCheckCompliance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public bool ipShippedFlagChanged;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=8)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=9)]
        public int ipBTCustNum;
        
        public UpdateMasterRequest() {
        }
        
        public UpdateMasterRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, bool doValidateCreditHold, bool doCheckShipDtl, bool doLotValidation, bool doCheckOrderComplete, bool doPostUpdate, bool doCheckCompliance, bool ipShippedFlagChanged, int ipPackNum, int ipBTCustNum) {
            this.ds = ds;
            this.doValidateCreditHold = doValidateCreditHold;
            this.doCheckShipDtl = doCheckShipDtl;
            this.doLotValidation = doLotValidation;
            this.doCheckOrderComplete = doCheckOrderComplete;
            this.doPostUpdate = doPostUpdate;
            this.doCheckCompliance = doCheckCompliance;
            this.ipShippedFlagChanged = ipShippedFlagChanged;
            this.ipPackNum = ipPackNum;
            this.ipBTCustNum = ipBTCustNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMasterResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdateMasterResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string opReleaseMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string opCompleteMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string opShippingMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string opLotMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string opInventoryMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public string opLockQtyMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public string opAllocationMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=8)]
        public string opPartListNeedsAttr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=9)]
        public string opLotListNeedsAttr;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=10)]
        public string shipCreditMsg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=11)]
        public bool cError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=12)]
        public bool compError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=13)]
        public string msg;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=14)]
        public string opPostUpdMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=15)]
        public bool updateComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=16)]
        public bool checkComplianceError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=17)]
        public bool changeStatusError;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=18)]
        public bool checkShipDtlAgain;
        
        public UpdateMasterResponse() {
        }
        
        public UpdateMasterResponse(
                    EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, 
                    string opReleaseMessage, 
                    string opCompleteMessage, 
                    string opShippingMessage, 
                    string opLotMessage, 
                    string opInventoryMessage, 
                    string opLockQtyMessage, 
                    string opAllocationMessage, 
                    string opPartListNeedsAttr, 
                    string opLotListNeedsAttr, 
                    string shipCreditMsg, 
                    bool cError, 
                    bool compError, 
                    string msg, 
                    string opPostUpdMessage, 
                    bool updateComplete, 
                    bool checkComplianceError, 
                    bool changeStatusError, 
                    bool checkShipDtlAgain) {
            this.ds = ds;
            this.opReleaseMessage = opReleaseMessage;
            this.opCompleteMessage = opCompleteMessage;
            this.opShippingMessage = opShippingMessage;
            this.opLotMessage = opLotMessage;
            this.opInventoryMessage = opInventoryMessage;
            this.opLockQtyMessage = opLockQtyMessage;
            this.opAllocationMessage = opAllocationMessage;
            this.opPartListNeedsAttr = opPartListNeedsAttr;
            this.opLotListNeedsAttr = opLotListNeedsAttr;
            this.shipCreditMsg = shipCreditMsg;
            this.cError = cError;
            this.compError = compError;
            this.msg = msg;
            this.opPostUpdMessage = opPostUpdMessage;
            this.updateComplete = updateComplete;
            this.checkComplianceError = checkComplianceError;
            this.changeStatusError = changeStatusError;
            this.checkShipDtlAgain = checkShipDtlAgain;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackCODWithCarton", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackCODWithCartonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipCaseNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal ipOldCOD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public decimal ipCOD;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool ipFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackCODWithCartonRequest() {
        }
        
        public UpdatePackCODWithCartonRequest(int ipPackNum, int ipCaseNum, decimal ipOldCOD, decimal ipCOD, bool ipFlag, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ipCaseNum = ipCaseNum;
            this.ipOldCOD = ipOldCOD;
            this.ipCOD = ipCOD;
            this.ipFlag = ipFlag;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackCODWithCartonResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackCODWithCartonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackCODWithCartonResponse() {
        }
        
        public UpdatePackCODWithCartonResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackDeclaredWithCarton", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackDeclaredWithCartonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipCaseNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal ipOldDeclared;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public decimal ipDeclared;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public bool ipDeclaredFlag;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackDeclaredWithCartonRequest() {
        }
        
        public UpdatePackDeclaredWithCartonRequest(int ipPackNum, int ipCaseNum, decimal ipOldDeclared, decimal ipDeclared, bool ipDeclaredFlag, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ipCaseNum = ipCaseNum;
            this.ipOldDeclared = ipOldDeclared;
            this.ipDeclared = ipDeclared;
            this.ipDeclaredFlag = ipDeclaredFlag;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackDeclaredWithCartonResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackDeclaredWithCartonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackDeclaredWithCartonResponse() {
        }
        
        public UpdatePackDeclaredWithCartonResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackWeightWithCarton", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackWeightWithCartonRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public decimal ipOldWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public decimal ipWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackWeightWithCartonRequest() {
        }
        
        public UpdatePackWeightWithCartonRequest(int ipPackNum, decimal ipOldWeight, decimal ipWeight, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ipPackNum = ipPackNum;
            this.ipOldWeight = ipOldWeight;
            this.ipWeight = ipWeight;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePackWeightWithCartonResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class UpdatePackWeightWithCartonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public UpdatePackWeightWithCartonResponse() {
        }
        
        public UpdatePackWeightWithCartonResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHold", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipValPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipValBTCustNum;
        
        public ValidateCreditHoldRequest() {
        }
        
        public ValidateCreditHoldRequest(int ipValPackNum, int ipValBTCustNum) {
            this.ipValPackNum = ipValPackNum;
            this.ipValBTCustNum = ipValBTCustNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHoldResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string opCreditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool opcError;
        
        public ValidateCreditHoldResponse() {
        }
        
        public ValidateCreditHoldResponse(string opCreditMessage, bool opcError) {
            this.opCreditMessage = opCreditMessage;
            this.opcError = opcError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHoldPO", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldPORequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipOrderNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int ipPackNum;
        
        public ValidateCreditHoldPORequest() {
        }
        
        public ValidateCreditHoldPORequest(int ipOrderNum, int ipPackNum) {
            this.ipOrderNum = ipOrderNum;
            this.ipPackNum = ipPackNum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHoldPOResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldPOResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string opCreditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string opAgingMessage;
        
        public ValidateCreditHoldPOResponse() {
        }
        
        public ValidateCreditHoldPOResponse(string opCreditMessage, string opAgingMessage) {
            this.opCreditMessage = opCreditMessage;
            this.opAgingMessage = opAgingMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHoldSSC", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldSSCRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int ipPackNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipShipmentType;
        
        public ValidateCreditHoldSSCRequest() {
        }
        
        public ValidateCreditHoldSSCRequest(int ipPackNum, string ipShipmentType) {
            this.ipPackNum = ipPackNum;
            this.ipShipmentType = ipShipmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateCreditHoldSSCResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateCreditHoldSSCResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string opCreditMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public bool opcError;
        
        public ValidateCreditHoldSSCResponse() {
        }
        
        public ValidateCreditHoldSSCResponse(string opCreditMessage, bool opcError) {
            this.opCreditMessage = opCreditMessage;
            this.opcError = opcError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateKitPart", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateKitPartRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public int packLine;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ValidateKitPartRequest() {
        }
        
        public ValidateKitPartRequest(int packLine, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.packLine = packLine;
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ValidateKitPartResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class ValidateKitPartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public ValidateKitPartResponse() {
        }
        
        public ValidateKitPartResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTest", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class NegativeInventoryTestRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string ipPartNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string ipWarehouseCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public string ipBinNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string ipLotNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=4)]
        public string ipPCID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=5)]
        public string ipDimCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=6)]
        public decimal ipDimConvFactor;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=7)]
        public decimal ipTranQty;
        
        public NegativeInventoryTestRequest() {
        }
        
        public NegativeInventoryTestRequest(string ipPartNum, string ipWarehouseCode, string ipBinNum, string ipLotNum, string ipPCID, string ipDimCode, decimal ipDimConvFactor, decimal ipTranQty) {
            this.ipPartNum = ipPartNum;
            this.ipWarehouseCode = ipWarehouseCode;
            this.ipBinNum = ipBinNum;
            this.ipLotNum = ipLotNum;
            this.ipPCID = ipPCID;
            this.ipDimCode = ipDimCode;
            this.ipDimConvFactor = ipDimConvFactor;
            this.ipTranQty = ipTranQty;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NegativeInventoryTestResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class NegativeInventoryTestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public string opNegQtyAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public string pcMessage;
        
        public NegativeInventoryTestResponse() {
        }
        
        public NegativeInventoryTestResponse(string opNegQtyAction, string pcMessage) {
            this.opNegQtyAction = opNegQtyAction;
            this.pcMessage = pcMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPCBinOutLocation", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPCBinOutLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        public CheckPCBinOutLocationRequest() {
        }
        
        public CheckPCBinOutLocationRequest(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            this.ds = ds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckPCBinOutLocationResponse", WrapperNamespace="Erp:BO:CustShip", IsWrapped=true)]
    public partial class CheckPCBinOutLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=0)]
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset ds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=1)]
        public int lineNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=2)]
        public bool belongToAnotherPC;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="Erp:BO:CustShip", Order=3)]
        public string pcOutsideMessage;
        
        public CheckPCBinOutLocationResponse() {
        }
        
        public CheckPCBinOutLocationResponse(EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int lineNum, bool belongToAnotherPC, string pcOutsideMessage) {
            this.ds = ds;
            this.lineNum = lineNum;
            this.belongToAnotherPC = belongToAnotherPC;
            this.pcOutsideMessage = pcOutsideMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CustShipSvcContractChannel : EpicWAS.Epicor.CustShipSvc.CustShipSvcContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustShipSvcContractClient : System.ServiceModel.ClientBase<EpicWAS.Epicor.CustShipSvc.CustShipSvcContract>, EpicWAS.Epicor.CustShipSvc.CustShipSvcContract {
        
        public CustShipSvcContractClient() {
        }
        
        public CustShipSvcContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustShipSvcContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustShipSvcContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustShipSvcContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckPackageCodeAllocNegQty(EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest request) {
            return base.Channel.CheckPackageCodeAllocNegQty(request);
        }
        
        public string CheckPackageCodeAllocNegQty(string ipcalledFrom, object[] ipPackNumList, string ipPkgCode, int ipPkgCodeQty, out string opAction, out string opAllocWarning, out string opAllocAction) {
            EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest();
            inValue.ipcalledFrom = ipcalledFrom;
            inValue.ipPackNumList = ipPackNumList;
            inValue.ipPkgCode = ipPkgCode;
            inValue.ipPkgCodeQty = ipPkgCodeQty;
            EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckPackageCodeAllocNegQty(inValue);
            opAction = retVal.opAction;
            opAllocWarning = retVal.opAllocWarning;
            opAllocAction = retVal.opAllocAction;
            return retVal.opWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyResponse> CheckPackageCodeAllocNegQtyAsync(EpicWAS.Epicor.CustShipSvc.CheckPackageCodeAllocNegQtyRequest request) {
            return base.Channel.CheckPackageCodeAllocNegQtyAsync(request);
        }
        
        public object[] GetPkgCodeQtyList(int ipPackNum) {
            return base.Channel.GetPkgCodeQtyList(ipPackNum);
        }
        
        public System.Threading.Tasks.Task<object[]> GetPkgCodeQtyListAsync(int ipPackNum) {
            return base.Channel.GetPkgCodeQtyListAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GenerateDigitalSignature(EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest request) {
            return base.Channel.GenerateDigitalSignature(request);
        }
        
        public void GenerateDigitalSignature(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest inValue = new EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GenerateDigitalSignature(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureResponse> GenerateDigitalSignatureAsync(EpicWAS.Epicor.CustShipSvc.GenerateDigitalSignatureRequest request) {
            return base.Channel.GenerateDigitalSignatureAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangePCIDPackVerify(EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest request) {
            return base.Channel.ChangePCIDPackVerify(request);
        }
        
        public int ChangePCIDPackVerify(string ipSource, int ipPackNum, string ipPCID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, out int opPCIDCount, out string opItemPartNum) {
            EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest();
            inValue.ipSource = ipSource;
            inValue.ipPackNum = ipPackNum;
            inValue.ipPCID = ipPCID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangePCIDPackVerify(inValue);
            ds = retVal.ds;
            opPCIDCount = retVal.opPCIDCount;
            opItemPartNum = retVal.opItemPartNum;
            return retVal.opAlreadyScannedPackNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyResponse> ChangePCIDPackVerifyAsync(EpicWAS.Epicor.CustShipSvc.ChangePCIDPackVerifyRequest request) {
            return base.Channel.ChangePCIDPackVerifyAsync(request);
        }
        
        public int PackVerifyCalcPackPCIDCount(int ipPackNum) {
            return base.Channel.PackVerifyCalcPackPCIDCount(ipPackNum);
        }
        
        public System.Threading.Tasks.Task<int> PackVerifyCalcPackPCIDCountAsync(int ipPackNum) {
            return base.Channel.PackVerifyCalcPackPCIDCountAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.PackVerifyPerformPackVerification(EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest request) {
            return base.Channel.PackVerifyPerformPackVerification(request);
        }
        
        public bool PackVerifyPerformPackVerification(int ipPackNum, out string opErrorMessage) {
            EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest inValue = new EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest();
            inValue.ipPackNum = ipPackNum;
            EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).PackVerifyPerformPackVerification(inValue);
            opErrorMessage = retVal.opErrorMessage;
            return retVal.PackVerifyPerformPackVerificationResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationResponse> PackVerifyPerformPackVerificationAsync(EpicWAS.Epicor.CustShipSvc.PackVerifyPerformPackVerificationRequest request) {
            return base.Channel.PackVerifyPerformPackVerificationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipHeadResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipHead(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest request) {
            return base.Channel.GetNewShipHead(request);
        }
        
        public void GetNewShipHead(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetNewShipHeadResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipHead(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipHeadResponse> GetNewShipHeadAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadRequest request) {
            return base.Channel.GetNewShipHeadAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipHeadAttch(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest request) {
            return base.Channel.GetNewShipHeadAttch(request);
        }
        
        public void GetNewShipHeadAttch(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipHeadAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchResponse> GetNewShipHeadAttchAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipHeadAttchRequest request) {
            return base.Channel.GetNewShipHeadAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewCartonTrkDtl(EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest request) {
            return base.Channel.GetNewCartonTrkDtl(request);
        }
        
        public void GetNewCartonTrkDtl(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string shipmentType, int packNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest();
            inValue.ds = ds;
            inValue.shipmentType = shipmentType;
            inValue.packNum = packNum;
            EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewCartonTrkDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlResponse> GetNewCartonTrkDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewCartonTrkDtlRequest request) {
            return base.Channel.GetNewCartonTrkDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipDtl(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest request) {
            return base.Channel.GetNewShipDtl(request);
        }
        
        public void GetNewShipDtl(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlResponse> GetNewShipDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlRequest request) {
            return base.Channel.GetNewShipDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipDtlAttch(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest request) {
            return base.Channel.GetNewShipDtlAttch(request);
        }
        
        public void GetNewShipDtlAttch(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            inValue.packLine = packLine;
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipDtlAttch(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchResponse> GetNewShipDtlAttchAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlAttchRequest request) {
            return base.Channel.GetNewShipDtlAttchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipCOOResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipCOO(EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest request) {
            return base.Channel.GetNewShipCOO(request);
        }
        
        public void GetNewShipCOO(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string relatedToFile, int packNum, int packLine) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest();
            inValue.ds = ds;
            inValue.relatedToFile = relatedToFile;
            inValue.packNum = packNum;
            inValue.packLine = packLine;
            EpicWAS.Epicor.CustShipSvc.GetNewShipCOOResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipCOO(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipCOOResponse> GetNewShipCOOAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipCOORequest request) {
            return base.Channel.GetNewShipCOOAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipDtlTax(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest request) {
            return base.Channel.GetNewShipDtlTax(request);
        }
        
        public void GetNewShipDtlTax(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine, string taxCode, string rateCode) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            inValue.packLine = packLine;
            inValue.taxCode = taxCode;
            inValue.rateCode = rateCode;
            EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipDtlTax(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxResponse> GetNewShipDtlTaxAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipDtlTaxRequest request) {
            return base.Channel.GetNewShipDtlTaxAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipMiscResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipMisc(EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest request) {
            return base.Channel.GetNewShipMisc(request);
        }
        
        public void GetNewShipMisc(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int packLine, int seqNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            inValue.packLine = packLine;
            inValue.seqNum = seqNum;
            EpicWAS.Epicor.CustShipSvc.GetNewShipMiscResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipMisc(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipMiscResponse> GetNewShipMiscAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipMiscRequest request) {
            return base.Channel.GetNewShipMiscAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewShipUPSResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewShipUPS(EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest request) {
            return base.Channel.GetNewShipUPS(request);
        }
        
        public void GetNewShipUPS(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            EpicWAS.Epicor.CustShipSvc.GetNewShipUPSResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewShipUPS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewShipUPSResponse> GetNewShipUPSAsync(EpicWAS.Epicor.CustShipSvc.GetNewShipUPSRequest request) {
            return base.Channel.GetNewShipUPSAsync(request);
        }
        
        public void DeleteByID(int packNum) {
            base.Channel.DeleteByID(packNum);
        }
        
        public System.Threading.Tasks.Task DeleteByIDAsync(int packNum) {
            return base.Channel.DeleteByIDAsync(packNum);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GetByID(int packNum) {
            return base.Channel.GetByID(packNum);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetByIDAsync(int packNum) {
            return base.Channel.GetByIDAsync(packNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetListResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetList(EpicWAS.Epicor.CustShipSvc.GetListRequest request) {
            return base.Channel.GetList(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset GetList(string whereClause, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.CustShipSvc.GetListRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetListRequest();
            inValue.whereClause = whereClause;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.CustShipSvc.GetListResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetList(inValue);
            morePages = retVal.morePages;
            return retVal.GetListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetListResponse> GetListAsync(EpicWAS.Epicor.CustShipSvc.GetListRequest request) {
            return base.Channel.GetListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetRowsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetRows(EpicWAS.Epicor.CustShipSvc.GetRowsRequest request) {
            return base.Channel.GetRows(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GetRows(
                    string whereClauseShipHead, 
                    string whereClauseShipHeadAttch, 
                    string whereClauseCartonTrkDtl, 
                    string whereClauseShipDtl, 
                    string whereClauseShipDtlAttch, 
                    string whereClauseShipCOO, 
                    string whereClauseShipDtlPackaging, 
                    string whereClauseShipDtlTax, 
                    string whereClauseShipMisc, 
                    string whereClauseReplicatedPacks, 
                    string whereClauseShipUPS, 
                    string whereClauseLegalNumberGenerate, 
                    string whereClauseLegalNumGenOpts, 
                    string whereClauseSalesKitCompIssue, 
                    string whereClauseSelectedIDNumbers, 
                    string whereClauseSelectedSerialNumbers, 
                    string whereClauseShipTaxSum, 
                    string whereClauseSNFormat, 
                    int pageSize, 
                    int absolutePage, 
                    out bool morePages) {
            EpicWAS.Epicor.CustShipSvc.GetRowsRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetRowsRequest();
            inValue.whereClauseShipHead = whereClauseShipHead;
            inValue.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            inValue.whereClauseCartonTrkDtl = whereClauseCartonTrkDtl;
            inValue.whereClauseShipDtl = whereClauseShipDtl;
            inValue.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            inValue.whereClauseShipCOO = whereClauseShipCOO;
            inValue.whereClauseShipDtlPackaging = whereClauseShipDtlPackaging;
            inValue.whereClauseShipDtlTax = whereClauseShipDtlTax;
            inValue.whereClauseShipMisc = whereClauseShipMisc;
            inValue.whereClauseReplicatedPacks = whereClauseReplicatedPacks;
            inValue.whereClauseShipUPS = whereClauseShipUPS;
            inValue.whereClauseLegalNumberGenerate = whereClauseLegalNumberGenerate;
            inValue.whereClauseLegalNumGenOpts = whereClauseLegalNumGenOpts;
            inValue.whereClauseSalesKitCompIssue = whereClauseSalesKitCompIssue;
            inValue.whereClauseSelectedIDNumbers = whereClauseSelectedIDNumbers;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseShipTaxSum = whereClauseShipTaxSum;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.CustShipSvc.GetRowsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetRows(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsResponse> GetRowsAsync(EpicWAS.Epicor.CustShipSvc.GetRowsRequest request) {
            return base.Channel.GetRowsAsync(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GetBySysRowID(System.Guid id) {
            return base.Channel.GetBySysRowID(id);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetBySysRowIDAsync(System.Guid id) {
            return base.Channel.GetBySysRowIDAsync(id);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GetBySysRowIDs(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDs(ids);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GetBySysRowIDsAsync(System.Guid[] ids) {
            return base.Channel.GetBySysRowIDsAsync(ids);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdateResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.Update(EpicWAS.Epicor.CustShipSvc.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdateRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdateRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdateResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).Update(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateResponse> UpdateAsync(EpicWAS.Epicor.CustShipSvc.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdateExtResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdateExt(EpicWAS.Epicor.CustShipSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExt(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.BOUpdErrorTableset UpdateExt(ref EpicWAS.Epicor.CustShipSvc.UpdExtCustShipTableset ds, bool continueProcessingOnError, bool rollbackParentOnChildError, out bool errorsOccurred) {
            EpicWAS.Epicor.CustShipSvc.UpdateExtRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdateExtRequest();
            inValue.ds = ds;
            inValue.continueProcessingOnError = continueProcessingOnError;
            inValue.rollbackParentOnChildError = rollbackParentOnChildError;
            EpicWAS.Epicor.CustShipSvc.UpdateExtResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdateExt(inValue);
            ds = retVal.ds;
            errorsOccurred = retVal.errorsOccurred;
            return retVal.UpdateExtResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateExtResponse> UpdateExtAsync(EpicWAS.Epicor.CustShipSvc.UpdateExtRequest request) {
            return base.Channel.UpdateExtAsync(request);
        }
        
        public System.Nullable<System.DateTime> ExpireDate(System.Nullable<System.DateTime> ExpirationDate, System.Nullable<System.DateTime> EffectiveDAte, int Duration, string modifier) {
            return base.Channel.ExpireDate(ExpirationDate, EffectiveDAte, Duration, modifier);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> ExpireDateAsync(System.Nullable<System.DateTime> ExpirationDate, System.Nullable<System.DateTime> EffectiveDAte, int Duration, string modifier) {
            return base.Channel.ExpireDateAsync(ExpirationDate, EffectiveDAte, Duration, modifier);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CreateCustomerCartons(EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest request) {
            return base.Channel.CreateCustomerCartons(request);
        }
        
        public void CreateCustomerCartons(int ipNbrCartonsToCreate, string ipPkgCode, decimal ipPkgLength, decimal ipPkgWidth, decimal ipPkgHeight, bool ipRecalcAmts, bool ipZeroWeight, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest inValue = new EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest();
            inValue.ipNbrCartonsToCreate = ipNbrCartonsToCreate;
            inValue.ipPkgCode = ipPkgCode;
            inValue.ipPkgLength = ipPkgLength;
            inValue.ipPkgWidth = ipPkgWidth;
            inValue.ipPkgHeight = ipPkgHeight;
            inValue.ipRecalcAmts = ipRecalcAmts;
            inValue.ipZeroWeight = ipZeroWeight;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CreateCustomerCartons(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsResponse> CreateCustomerCartonsAsync(EpicWAS.Epicor.CustShipSvc.CreateCustomerCartonsRequest request) {
            return base.Channel.CreateCustomerCartonsAsync(request);
        }
        
        public void AllowUndoExternalDN() {
            base.Channel.AllowUndoExternalDN();
        }
        
        public System.Threading.Tasks.Task AllowUndoExternalDNAsync() {
            return base.Channel.AllowUndoExternalDNAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.AskForShipToChangeResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.AskForShipToChange(EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest request) {
            return base.Channel.AskForShipToChange(request);
        }
        
        public void AskForShipToChange(int iPackNum, int iOrderNum, int iOrderLine, int iOrderRelNum, ref bool askUser) {
            EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest inValue = new EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest();
            inValue.iPackNum = iPackNum;
            inValue.iOrderNum = iOrderNum;
            inValue.iOrderLine = iOrderLine;
            inValue.iOrderRelNum = iOrderRelNum;
            inValue.askUser = askUser;
            EpicWAS.Epicor.CustShipSvc.AskForShipToChangeResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).AskForShipToChange(inValue);
            askUser = retVal.askUser;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.AskForShipToChangeResponse> AskForShipToChangeAsync(EpicWAS.Epicor.CustShipSvc.AskForShipToChangeRequest request) {
            return base.Channel.AskForShipToChangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.AssignLegalNumberResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.AssignLegalNumber(EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumber(request);
        }
        
        public string AssignLegalNumber(int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest inValue = new EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.AssignLegalNumberResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).AssignLegalNumber(inValue);
            ds = retVal.ds;
            return retVal.opLegalNumMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.AssignLegalNumberResponse> AssignLegalNumberAsync(EpicWAS.Epicor.CustShipSvc.AssignLegalNumberRequest request) {
            return base.Channel.AssignLegalNumberAsync(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset GetPackageControlPackVoid(int ipPackNum) {
            return base.Channel.GetPackageControlPackVoid(ipPackNum);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset> GetPackageControlPackVoidAsync(int ipPackNum) {
            return base.Channel.GetPackageControlPackVoidAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.VoidPackSlipResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.VoidPackSlip(EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest request) {
            return base.Channel.VoidPackSlip(request);
        }
        
        public void VoidPackSlip(int packNum, ref EpicWAS.Epicor.CustShipSvc.PackageControlPackVoidTableset ds) {
            EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest inValue = new EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest();
            inValue.packNum = packNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.VoidPackSlipResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).VoidPackSlip(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.VoidPackSlipResponse> VoidPackSlipAsync(EpicWAS.Epicor.CustShipSvc.VoidPackSlipRequest request) {
            return base.Channel.VoidPackSlipAsync(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset BuildCompSerMatch(string ipPartNum, string ipRevNum, string ipSerialNumbers) {
            return base.Channel.BuildCompSerMatch(ipPartNum, ipRevNum, ipSerialNumbers);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.LLCompSerMatchTableset> BuildCompSerMatchAsync(string ipPartNum, string ipRevNum, string ipSerialNumbers) {
            return base.Channel.BuildCompSerMatchAsync(ipPartNum, ipRevNum, ipSerialNumbers);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.BuildSerialMatchingParams(EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest request) {
            return base.Channel.BuildSerialMatchingParams(request);
        }
        
        public void BuildSerialMatchingParams(ref EpicWAS.Epicor.CustShipSvc.SerialMatchingParamsTableset ds, EpicWAS.Epicor.CustShipSvc.CustShipTableset ds1, int packLine) {
            EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest inValue = new EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest();
            inValue.ds = ds;
            inValue.ds1 = ds1;
            inValue.packLine = packLine;
            EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).BuildSerialMatchingParams(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsResponse> BuildSerialMatchingParamsAsync(EpicWAS.Epicor.CustShipSvc.BuildSerialMatchingParamsRequest request) {
            return base.Channel.BuildSerialMatchingParamsAsync(request);
        }
        
        public string BuildShipToCustomerList(int orderNum) {
            return base.Channel.BuildShipToCustomerList(orderNum);
        }
        
        public System.Threading.Tasks.Task<string> BuildShipToCustomerListAsync(int orderNum) {
            return base.Channel.BuildShipToCustomerListAsync(orderNum);
        }
        
        public string BuildShipToList(int orderNum, int iShipToCustNum) {
            return base.Channel.BuildShipToList(orderNum, iShipToCustNum);
        }
        
        public System.Threading.Tasks.Task<string> BuildShipToListAsync(int orderNum, int iShipToCustNum) {
            return base.Channel.BuildShipToListAsync(orderNum, iShipToCustNum);
        }
        
        public decimal CalculateWeight(int cartonNumber) {
            return base.Channel.CalculateWeight(cartonNumber);
        }
        
        public System.Threading.Tasks.Task<decimal> CalculateWeightAsync(int cartonNumber) {
            return base.Channel.CalculateWeightAsync(cartonNumber);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CancelVoidResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CancelVoid(EpicWAS.Epicor.CustShipSvc.CancelVoidRequest request) {
            return base.Channel.CancelVoid(request);
        }
        
        public void CancelVoid(int packNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.CancelVoidRequest inValue = new EpicWAS.Epicor.CustShipSvc.CancelVoidRequest();
            inValue.packNum = packNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CancelVoidResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CancelVoid(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CancelVoidResponse> CancelVoidAsync(EpicWAS.Epicor.CustShipSvc.CancelVoidRequest request) {
            return base.Channel.CancelVoidAsync(request);
        }
        
        public void CanStage(System.Guid ipShipHedRowID) {
            base.Channel.CanStage(ipShipHedRowID);
        }
        
        public System.Threading.Tasks.Task CanStageAsync(System.Guid ipShipHedRowID) {
            return base.Channel.CanStageAsync(ipShipHedRowID);
        }
        
        public void CartonValidateWeight(decimal ipWeight) {
            base.Channel.CartonValidateWeight(ipWeight);
        }
        
        public System.Threading.Tasks.Task CartonValidateWeightAsync(decimal ipWeight) {
            return base.Channel.CartonValidateWeightAsync(ipWeight);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipCmplResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipCmpl(EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest request) {
            return base.Channel.ChangeShipCmpl(request);
        }
        
        public string ChangeShipCmpl(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, bool shipCmpl) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.shipCmpl = shipCmpl;
            EpicWAS.Epicor.CustShipSvc.ChangeShipCmplResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipCmpl(inValue);
            ds = retVal.ds;
            return retVal.questionString;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipCmplResponse> ChangeShipCmplAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipCmplRequest request) {
            return base.Channel.ChangeShipCmplAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipDtlMFCustID(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest request) {
            return base.Channel.ChangeShipDtlMFCustID(request);
        }
        
        public void ChangeShipDtlMFCustID(string ipMFCustID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest();
            inValue.ipMFCustID = ipMFCustID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipDtlMFCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDResponse> ChangeShipDtlMFCustIDAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFCustIDRequest request) {
            return base.Channel.ChangeShipDtlMFCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipDtlMFShipToNum(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest request) {
            return base.Channel.ChangeShipDtlMFShipToNum(request);
        }
        
        public void ChangeShipDtlMFShipToNum(string ProposedMFShipToNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest();
            inValue.ProposedMFShipToNum = ProposedMFShipToNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipDtlMFShipToNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumResponse> ChangeShipDtlMFShipToNumAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlMFShipToNumRequest request) {
            return base.Channel.ChangeShipDtlMFShipToNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipDtlUseOTMF(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest request) {
            return base.Channel.ChangeShipDtlUseOTMF(request);
        }
        
        public void ChangeShipDtlUseOTMF(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipDtlUseOTMF(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFResponse> ChangeShipDtlUseOTMFAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipDtlUseOTMFRequest request) {
            return base.Channel.ChangeShipDtlUseOTMFAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipHeadShipToCustID(EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest request) {
            return base.Channel.ChangeShipHeadShipToCustID(request);
        }
        
        public void ChangeShipHeadShipToCustID(string iShipToCustID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest();
            inValue.iShipToCustID = iShipToCustID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipHeadShipToCustID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDResponse> ChangeShipHeadShipToCustIDAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipHeadShipToCustIDRequest request) {
            return base.Channel.ChangeShipHeadShipToCustIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeShipMiscPrcnt(EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest request) {
            return base.Channel.ChangeShipMiscPrcnt(request);
        }
        
        public void ChangeShipMiscPrcnt(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, decimal newPrcnt) {
            EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest();
            inValue.ds = ds;
            inValue.newPrcnt = newPrcnt;
            EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeShipMiscPrcnt(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntResponse> ChangeShipMiscPrcntAsync(EpicWAS.Epicor.CustShipSvc.ChangeShipMiscPrcntRequest request) {
            return base.Channel.ChangeShipMiscPrcntAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeStatusResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeStatus(EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest request) {
            return base.Channel.ChangeStatus(request);
        }
        
        public void ChangeStatus(System.Guid ipShipHedRowID, string ipStatus, bool ipResetCODCharges, bool ipResetInsCharges, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest();
            inValue.ipShipHedRowID = ipShipHedRowID;
            inValue.ipStatus = ipStatus;
            inValue.ipResetCODCharges = ipResetCODCharges;
            inValue.ipResetInsCharges = ipResetInsCharges;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeStatusResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeStatus(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeStatusResponse> ChangeStatusAsync(EpicWAS.Epicor.CustShipSvc.ChangeStatusRequest request) {
            return base.Channel.ChangeStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangePCIDResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangePCID(EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest request) {
            return base.Channel.ChangePCID(request);
        }
        
        public void ChangePCID(string ipSource, int ipPackNum, string ipPCID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest();
            inValue.ipSource = ipSource;
            inValue.ipPackNum = ipPackNum;
            inValue.ipPCID = ipPCID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangePCIDResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangePCID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangePCIDResponse> ChangePCIDAsync(EpicWAS.Epicor.CustShipSvc.ChangePCIDRequest request) {
            return base.Channel.ChangePCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSAResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ChangeWarrantyToFSA(EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest request) {
            return base.Channel.ChangeWarrantyToFSA(request);
        }
        
        public void ChangeWarrantyToFSA(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest inValue = new EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSAResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ChangeWarrantyToFSA(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSAResponse> ChangeWarrantyToFSAAsync(EpicWAS.Epicor.CustShipSvc.ChangeWarrantyToFSARequest request) {
            return base.Channel.ChangeWarrantyToFSAAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.RemovePCIDResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.RemovePCID(EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest request) {
            return base.Channel.RemovePCID(request);
        }
        
        public int RemovePCID(string ipSource, int ipPackNum, string ipPCID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest inValue = new EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest();
            inValue.ipSource = ipSource;
            inValue.ipPackNum = ipPackNum;
            inValue.ipPCID = ipPCID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.RemovePCIDResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).RemovePCID(inValue);
            ds = retVal.ds;
            return retVal.opPCIDCount;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.RemovePCIDResponse> RemovePCIDAsync(EpicWAS.Epicor.CustShipSvc.RemovePCIDRequest request) {
            return base.Channel.RemovePCIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckComplianceResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckCompliance(EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest request) {
            return base.Channel.CheckCompliance(request);
        }
        
        public bool CheckCompliance(int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CheckComplianceResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckCompliance(inValue);
            ds = retVal.ds;
            return retVal.opCompliant;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckComplianceResponse> CheckComplianceAsync(EpicWAS.Epicor.CustShipSvc.CheckComplianceRequest request) {
            return base.Channel.CheckComplianceAsync(request);
        }
        
        public void CheckCOOPercents(int iPackNum, int iPackLine) {
            base.Channel.CheckCOOPercents(iPackNum, iPackLine);
        }
        
        public System.Threading.Tasks.Task CheckCOOPercentsAsync(int iPackNum, int iPackLine) {
            return base.Channel.CheckCOOPercentsAsync(iPackNum, iPackLine);
        }
        
        public string CheckOrder(int packNum) {
            return base.Channel.CheckOrder(packNum);
        }
        
        public System.Threading.Tasks.Task<string> CheckOrderAsync(int packNum) {
            return base.Channel.CheckOrderAsync(packNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckOrderComplete(EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest request) {
            return base.Channel.CheckOrderComplete(request);
        }
        
        public string CheckOrderComplete(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int ipPackNum, string ipShipmentType) {
            EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest();
            inValue.ds = ds;
            inValue.ipPackNum = ipPackNum;
            inValue.ipShipmentType = ipShipmentType;
            EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckOrderComplete(inValue);
            ds = retVal.ds;
            return retVal.msg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteResponse> CheckOrderCompleteAsync(EpicWAS.Epicor.CustShipSvc.CheckOrderCompleteRequest request) {
            return base.Channel.CheckOrderCompleteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckPrePartInfo(EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest request) {
            return base.Channel.CheckPrePartInfo(request);
        }
        
        public string CheckPrePartInfo(ref string partNum, int orderNum, int orderLine, out bool vSubAvail, out string vMsgType, out string origPartNum) {
            EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest();
            inValue.partNum = partNum;
            inValue.orderNum = orderNum;
            inValue.orderLine = orderLine;
            EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckPrePartInfo(inValue);
            partNum = retVal.partNum;
            vSubAvail = retVal.vSubAvail;
            vMsgType = retVal.vMsgType;
            origPartNum = retVal.origPartNum;
            return retVal.vMsgText;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoResponse> CheckPrePartInfoAsync(EpicWAS.Epicor.CustShipSvc.CheckPrePartInfoRequest request) {
            return base.Channel.CheckPrePartInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckReadyToInvoice(EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest request) {
            return base.Channel.CheckReadyToInvoice(request);
        }
        
        public string CheckReadyToInvoice(bool readyToInvoice, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest();
            inValue.readyToInvoice = readyToInvoice;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckReadyToInvoice(inValue);
            ds = retVal.ds;
            return retVal.legalNumberMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceResponse> CheckReadyToInvoiceAsync(EpicWAS.Epicor.CustShipSvc.CheckReadyToInvoiceRequest request) {
            return base.Channel.CheckReadyToInvoiceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckShipDtl(EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest request) {
            return base.Channel.CheckShipDtl(request);
        }
        
        public string CheckShipDtl(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, out string completeMessage, out string shippingMessage, out string lotMessage, out string inventoryMessage, out string lockQtyMessage, out string allocationMessage) {
            EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CheckShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckShipDtl(inValue);
            ds = retVal.ds;
            completeMessage = retVal.completeMessage;
            shippingMessage = retVal.shippingMessage;
            lotMessage = retVal.lotMessage;
            inventoryMessage = retVal.inventoryMessage;
            lockQtyMessage = retVal.lockQtyMessage;
            allocationMessage = retVal.allocationMessage;
            return retVal.releaseMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckShipDtlResponse> CheckShipDtlAsync(EpicWAS.Epicor.CustShipSvc.CheckShipDtlRequest request) {
            return base.Channel.CheckShipDtlAsync(request);
        }
        
        public void CheckValidCartonWeight(int ipPackNum) {
            base.Channel.CheckValidCartonWeight(ipPackNum);
        }
        
        public System.Threading.Tasks.Task CheckValidCartonWeightAsync(int ipPackNum) {
            return base.Channel.CheckValidCartonWeightAsync(ipPackNum);
        }
        
        public void ClearConvertedManifestUOMFields(int ipPackNum) {
            base.Channel.ClearConvertedManifestUOMFields(ipPackNum);
        }
        
        public System.Threading.Tasks.Task ClearConvertedManifestUOMFieldsAsync(int ipPackNum) {
            return base.Channel.ClearConvertedManifestUOMFieldsAsync(ipPackNum);
        }
        
        public void ConvertToManifestUOM(int ipPackNum) {
            base.Channel.ConvertToManifestUOM(ipPackNum);
        }
        
        public System.Threading.Tasks.Task ConvertToManifestUOMAsync(int ipPackNum) {
            return base.Channel.ConvertToManifestUOMAsync(ipPackNum);
        }
        
        public decimal ConvertUOM(string partNum, decimal baseQty, string baseUOM, string convUOM) {
            return base.Channel.ConvertUOM(partNum, baseQty, baseUOM, convUOM);
        }
        
        public System.Threading.Tasks.Task<decimal> ConvertUOMAsync(string partNum, decimal baseQty, string baseUOM, string convUOM) {
            return base.Channel.ConvertUOMAsync(partNum, baseQty, baseUOM, convUOM);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest request) {
            return base.Channel.CreateMassShipDtl(request);
        }
        
        public void CreateMassShipDtl(int packNum, int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest();
            inValue.packNum = packNum;
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CreateMassShipDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlResponse> CreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.CreateMassShipDtlRequest request) {
            return base.Channel.CreateMassShipDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.DeletePhantomPacks(EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest request) {
            return base.Channel.DeletePhantomPacks(request);
        }
        
        public void DeletePhantomPacks(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest inValue = new EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).DeletePhantomPacks(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksResponse> DeletePhantomPacksAsync(EpicWAS.Epicor.CustShipSvc.DeletePhantomPacksRequest request) {
            return base.Channel.DeletePhantomPacksAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.DeleteRangePhantomPacks(EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest request) {
            return base.Channel.DeleteRangePhantomPacks(request);
        }
        
        public void DeleteRangePhantomPacks(System.Nullable<int> ipFromCase, System.Nullable<int> ipToCase, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest inValue = new EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest();
            inValue.ipFromCase = ipFromCase;
            inValue.ipToCase = ipToCase;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).DeleteRangePhantomPacks(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksResponse> DeleteRangePhantomPacksAsync(EpicWAS.Epicor.CustShipSvc.DeleteRangePhantomPacksRequest request) {
            return base.Channel.DeleteRangePhantomPacksAsync(request);
        }
        
        public void ExpressShip() {
            base.Channel.ExpressShip();
        }
        
        public System.Threading.Tasks.Task ExpressShipAsync() {
            return base.Channel.ExpressShipAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetCartonPackagingResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetCartonPackaging(EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest request) {
            return base.Channel.GetCartonPackaging(request);
        }
        
        public decimal GetCartonPackaging(string ipPkgCode, out decimal opPkgWidth, out decimal opPkgLength) {
            EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest();
            inValue.ipPkgCode = ipPkgCode;
            EpicWAS.Epicor.CustShipSvc.GetCartonPackagingResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetCartonPackaging(inValue);
            opPkgWidth = retVal.opPkgWidth;
            opPkgLength = retVal.opPkgLength;
            return retVal.opPkgHeight;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetCartonPackagingResponse> GetCartonPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetCartonPackagingRequest request) {
            return base.Channel.GetCartonPackagingAsync(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset GetCustShipOrdTrk(int orderNum) {
            return base.Channel.GetCustShipOrdTrk(orderNum);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipOrdTrkTableset> GetCustShipOrdTrkAsync(int orderNum) {
            return base.Channel.GetCustShipOrdTrkAsync(orderNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetHeadOrderInfo(EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest request) {
            return base.Channel.GetHeadOrderInfo(request);
        }
        
        public string GetHeadOrderInfo(int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest();
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetHeadOrderInfo(inValue);
            ds = retVal.ds;
            return retVal.creditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoResponse> GetHeadOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.GetHeadOrderInfoRequest request) {
            return base.Channel.GetHeadOrderInfoAsync(request);
        }
        
        public bool GetEnablePackageControl() {
            return base.Channel.GetEnablePackageControl();
        }
        
        public System.Threading.Tasks.Task<bool> GetEnablePackageControlAsync() {
            return base.Channel.GetEnablePackageControlAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetJobDtlInfo(EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest request) {
            return base.Channel.GetJobDtlInfo(request);
        }
        
        public void GetJobDtlInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, string jobNum) {
            EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.jobNum = jobNum;
            EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetJobDtlInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoResponse> GetJobDtlInfoAsync(EpicWAS.Epicor.CustShipSvc.GetJobDtlInfoRequest request) {
            return base.Channel.GetJobDtlInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetJobInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetJobInfo(EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest request) {
            return base.Channel.GetJobInfo(request);
        }
        
        public string GetJobInfo(string jobNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest();
            inValue.jobNum = jobNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetJobInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetJobInfo(inValue);
            ds = retVal.ds;
            return retVal.creditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetJobInfoResponse> GetJobInfoAsync(EpicWAS.Epicor.CustShipSvc.GetJobInfoRequest request) {
            return base.Channel.GetJobInfoAsync(request);
        }
        
        public string GetJobSupOpSeq(string jobNum, string partNum) {
            return base.Channel.GetJobSupOpSeq(jobNum, partNum);
        }
        
        public System.Threading.Tasks.Task<string> GetJobSupOpSeqAsync(string jobNum, string partNum) {
            return base.Channel.GetJobSupOpSeqAsync(jobNum, partNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetLegalNumGenOpts(EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest request) {
            return base.Channel.GetLegalNumGenOpts(request);
        }
        
        public bool GetLegalNumGenOpts(int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetLegalNumGenOpts(inValue);
            ds = retVal.ds;
            return retVal.opPromptForNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsResponse> GetLegalNumGenOptsAsync(EpicWAS.Epicor.CustShipSvc.GetLegalNumGenOptsRequest request) {
            return base.Channel.GetLegalNumGenOptsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POGetLegalNumGenOpts(EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest request) {
            return base.Channel.POGetLegalNumGenOpts(request);
        }
        
        public bool POGetLegalNumGenOpts(int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest inValue = new EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POGetLegalNumGenOpts(inValue);
            ds = retVal.ds;
            return retVal.opPromptForNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsResponse> POGetLegalNumGenOptsAsync(EpicWAS.Epicor.CustShipSvc.POGetLegalNumGenOptsRequest request) {
            return base.Channel.POGetLegalNumGenOptsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetManifestInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetManifestInfo(EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest request) {
            return base.Channel.GetManifestInfo(request);
        }
        
        public void GetManifestInfo(int ipSalesOrder, int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest();
            inValue.ipSalesOrder = ipSalesOrder;
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetManifestInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetManifestInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetManifestInfoResponse> GetManifestInfoAsync(EpicWAS.Epicor.CustShipSvc.GetManifestInfoRequest request) {
            return base.Channel.GetManifestInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewOrdrShipDtl(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest request) {
            return base.Channel.GetNewOrdrShipDtl(request);
        }
        
        public void GetNewOrdrShipDtl(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum, int orderNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            inValue.orderNum = orderNum;
            EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewOrdrShipDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlResponse> GetNewOrdrShipDtlAsync(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipDtlRequest request) {
            return base.Channel.GetNewOrdrShipDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetNewOrdrShipUPS(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest request) {
            return base.Channel.GetNewOrdrShipUPS(request);
        }
        
        public void GetNewOrdrShipUPS(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packNum) {
            EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest();
            inValue.ds = ds;
            inValue.packNum = packNum;
            EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetNewOrdrShipUPS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSResponse> GetNewOrdrShipUPSAsync(EpicWAS.Epicor.CustShipSvc.GetNewOrdrShipUPSRequest request) {
            return base.Channel.GetNewOrdrShipUPSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetOrderInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetOrderInfo(EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest request) {
            return base.Channel.GetOrderInfo(request);
        }
        
        public string GetOrderInfo(int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest();
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetOrderInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetOrderInfo(inValue);
            ds = retVal.ds;
            return retVal.creditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderInfoResponse> GetOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderInfoRequest request) {
            return base.Channel.GetOrderInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetOrderLineInfo(EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest request) {
            return base.Channel.GetOrderLineInfo(request);
        }
        
        public void GetOrderLineInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, int orderLine, string subsPart) {
            EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.orderLine = orderLine;
            inValue.subsPart = subsPart;
            EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetOrderLineInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoResponse> GetOrderLineInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderLineInfoRequest request) {
            return base.Channel.GetOrderLineInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetOrderRelInfo(EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest request) {
            return base.Channel.GetOrderRelInfo(request);
        }
        
        public void GetOrderRelInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, int orderRelNum, bool allowNewShipTo) {
            EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.orderRelNum = orderRelNum;
            inValue.allowNewShipTo = allowNewShipTo;
            EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetOrderRelInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoResponse> GetOrderRelInfoAsync(EpicWAS.Epicor.CustShipSvc.GetOrderRelInfoRequest request) {
            return base.Channel.GetOrderRelInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPackagingResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPackaging(EpicWAS.Epicor.CustShipSvc.GetPackagingRequest request) {
            return base.Channel.GetPackaging(request);
        }
        
        public void GetPackaging(string ipPkgCode, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetPackagingRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPackagingRequest();
            inValue.ipPkgCode = ipPkgCode;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetPackagingResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPackaging(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackagingResponse> GetPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetPackagingRequest request) {
            return base.Channel.GetPackagingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPackClassResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPackClass(EpicWAS.Epicor.CustShipSvc.GetPackClassRequest request) {
            return base.Channel.GetPackClass(request);
        }
        
        public void GetPackClass(string ipPkgClass, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetPackClassRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPackClassRequest();
            inValue.ipPkgClass = ipPkgClass;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetPackClassResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPackClass(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackClassResponse> GetPackClassAsync(EpicWAS.Epicor.CustShipSvc.GetPackClassRequest request) {
            return base.Channel.GetPackClassAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPackOutPartXRef(EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest request) {
            return base.Channel.GetPackOutPartXRef(request);
        }
        
        public string GetPackOutPartXRef(ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, int packLine, ref string partNum, System.Guid SysRowID, string rowType, out string questionString, out bool multipleMatch) {
            EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.partNum = partNum;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPackOutPartXRef(inValue);
            ds = retVal.ds;
            partNum = retVal.partNum;
            questionString = retVal.questionString;
            multipleMatch = retVal.multipleMatch;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefResponse> GetPackOutPartXRefAsync(EpicWAS.Epicor.CustShipSvc.GetPackOutPartXRefRequest request) {
            return base.Channel.GetPackOutPartXRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPartInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPartInfo(EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest request) {
            return base.Channel.GetPartInfo(request);
        }
        
        public string GetPartInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, ref string partNum, System.Guid SysRowID, string rowType, out string questionString, out bool multipleMatch, out string idWarning) {
            EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.partNum = partNum;
            inValue.SysRowID = SysRowID;
            inValue.rowType = rowType;
            EpicWAS.Epicor.CustShipSvc.GetPartInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPartInfo(inValue);
            ds = retVal.ds;
            partNum = retVal.partNum;
            questionString = retVal.questionString;
            multipleMatch = retVal.multipleMatch;
            idWarning = retVal.idWarning;
            return retVal.serialWarning;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPartInfoResponse> GetPartInfoAsync(EpicWAS.Epicor.CustShipSvc.GetPartInfoRequest request) {
            return base.Channel.GetPartInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPayBTFlagDefaults(EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest request) {
            return base.Channel.GetPayBTFlagDefaults(request);
        }
        
        public void GetPayBTFlagDefaults(int ipOrderNum, string ipPayFlag, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipPayFlag = ipPayFlag;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPayBTFlagDefaults(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsResponse> GetPayBTFlagDefaultsAsync(EpicWAS.Epicor.CustShipSvc.GetPayBTFlagDefaultsRequest request) {
            return base.Channel.GetPayBTFlagDefaultsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPOPackagingResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPOPackaging(EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest request) {
            return base.Channel.GetPOPackaging(request);
        }
        
        public void GetPOPackaging(string ipPkgCode, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest();
            inValue.ipPkgCode = ipPkgCode;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetPOPackagingResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPOPackaging(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPOPackagingResponse> GetPOPackagingAsync(EpicWAS.Epicor.CustShipSvc.GetPOPackagingRequest request) {
            return base.Channel.GetPOPackagingAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetPOPackClassResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetPOPackClass(EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest request) {
            return base.Channel.GetPOPackClass(request);
        }
        
        public void GetPOPackClass(string ipPkgClass, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest();
            inValue.ipPkgClass = ipPkgClass;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetPOPackClassResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetPOPackClass(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetPOPackClassResponse> GetPOPackClassAsync(EpicWAS.Epicor.CustShipSvc.GetPOPackClassRequest request) {
            return base.Channel.GetPOPackClassAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetQtyInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetQtyInfo(EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest request) {
            return base.Channel.GetQtyInfo(request);
        }
        
        public void GetQtyInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, decimal displayInvQty, decimal ourJobShipQty) {
            EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.displayInvQty = displayInvQty;
            inValue.ourJobShipQty = ourJobShipQty;
            EpicWAS.Epicor.CustShipSvc.GetQtyInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetQtyInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetQtyInfoResponse> GetQtyInfoAsync(EpicWAS.Epicor.CustShipSvc.GetQtyInfoRequest request) {
            return base.Channel.GetQtyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetRowsContactTracker(EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest request) {
            return base.Channel.GetRowsContactTracker(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsContactTracker(string whereClauseShipHead, string whereClauseShipHeadAttch, string whereClauseShipDtl, string whereClauseShipDtlAttch, string whereClauseShipMisc, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, string contactName, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest();
            inValue.whereClauseShipHead = whereClauseShipHead;
            inValue.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            inValue.whereClauseShipDtl = whereClauseShipDtl;
            inValue.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            inValue.whereClauseShipMisc = whereClauseShipMisc;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.contactName = contactName;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetRowsContactTracker(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsContactTrackerResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerResponse> GetRowsContactTrackerAsync(EpicWAS.Epicor.CustShipSvc.GetRowsContactTrackerRequest request) {
            return base.Channel.GetRowsContactTrackerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetRowsCustomerTracker(EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTracker(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipCustTrkTableset GetRowsCustomerTracker(string whereClauseShipHead, string whereClauseShipHeadAttch, string whereClauseShipDtl, string whereClauseShipDtlAttch, string whereClauseShipMisc, string whereClauseSelectedSerialNumbers, string whereClauseSerialNumberSearch, string whereClauseSNFormat, int pageSize, int absolutePage, out bool morePages) {
            EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest();
            inValue.whereClauseShipHead = whereClauseShipHead;
            inValue.whereClauseShipHeadAttch = whereClauseShipHeadAttch;
            inValue.whereClauseShipDtl = whereClauseShipDtl;
            inValue.whereClauseShipDtlAttch = whereClauseShipDtlAttch;
            inValue.whereClauseShipMisc = whereClauseShipMisc;
            inValue.whereClauseSelectedSerialNumbers = whereClauseSelectedSerialNumbers;
            inValue.whereClauseSerialNumberSearch = whereClauseSerialNumberSearch;
            inValue.whereClauseSNFormat = whereClauseSNFormat;
            inValue.pageSize = pageSize;
            inValue.absolutePage = absolutePage;
            EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetRowsCustomerTracker(inValue);
            morePages = retVal.morePages;
            return retVal.GetRowsCustomerTrackerResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerResponse> GetRowsCustomerTrackerAsync(EpicWAS.Epicor.CustShipSvc.GetRowsCustomerTrackerRequest request) {
            return base.Channel.GetRowsCustomerTrackerAsync(request);
        }
        
        public string GetScale(string workstationID) {
            return base.Channel.GetScale(workstationID);
        }
        
        public System.Threading.Tasks.Task<string> GetScaleAsync(string workstationID) {
            return base.Channel.GetScaleAsync(workstationID);
        }
        
        public decimal GetSelectIDNumbersParams(string partNum, decimal shipQty, string shipUOM) {
            return base.Channel.GetSelectIDNumbersParams(partNum, shipQty, shipUOM);
        }
        
        public System.Threading.Tasks.Task<decimal> GetSelectIDNumbersParamsAsync(string partNum, decimal shipQty, string shipUOM) {
            return base.Channel.GetSelectIDNumbersParamsAsync(partNum, shipQty, shipUOM);
        }
        
        public EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset GetSelectSerialNumbersParams(string ipPartNum, decimal ipQuantity, string ipUOM, int ipPackNum, int ipPackLine, string ipTranType, string ipJobNum, string ipWhseCode, string ipBinNum, string ipLotNum, bool ipFromPO, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, System.Guid ipSysRowID) {
            return base.Channel.GetSelectSerialNumbersParams(ipPartNum, ipQuantity, ipUOM, ipPackNum, ipPackLine, ipTranType, ipJobNum, ipWhseCode, ipBinNum, ipLotNum, ipFromPO, ipOrderNum, ipOrderLine, ipOrderRelNum, ipSysRowID);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SelectSerialNumbersParamsTableset> GetSelectSerialNumbersParamsAsync(string ipPartNum, decimal ipQuantity, string ipUOM, int ipPackNum, int ipPackLine, string ipTranType, string ipJobNum, string ipWhseCode, string ipBinNum, string ipLotNum, bool ipFromPO, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, System.Guid ipSysRowID) {
            return base.Channel.GetSelectSerialNumbersParamsAsync(ipPartNum, ipQuantity, ipUOM, ipPackNum, ipPackLine, ipTranType, ipJobNum, ipWhseCode, ipBinNum, ipLotNum, ipFromPO, ipOrderNum, ipOrderLine, ipOrderRelNum, ipSysRowID);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset GenerateSelectIDNumParams(string[] SNList, string ipPartNum, int ipPackNum, int ipPackLine, string ipJobNum, string ipUom, bool ipFromMfg) {
            return base.Channel.GenerateSelectIDNumParams(SNList, ipPartNum, ipPackNum, ipPackLine, ipJobNum, ipUom, ipFromMfg);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> GenerateSelectIDNumParamsAsync(string[] SNList, string ipPartNum, int ipPackNum, int ipPackLine, string ipJobNum, string ipUom, bool ipFromMfg) {
            return base.Channel.GenerateSelectIDNumParamsAsync(SNList, ipPartNum, ipPackNum, ipPackLine, ipJobNum, ipUom, ipFromMfg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GenerateLocationIDNum(EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest request) {
            return base.Channel.GenerateLocationIDNum(request);
        }
        
        public void GenerateLocationIDNum(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int ipPackNum, int ipPackLine, bool ipFromMfg) {
            EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest inValue = new EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest();
            inValue.ds = ds;
            inValue.ipPackNum = ipPackNum;
            inValue.ipPackLine = ipPackLine;
            inValue.ipFromMfg = ipFromMfg;
            EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GenerateLocationIDNum(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumResponse> GenerateLocationIDNumAsync(EpicWAS.Epicor.CustShipSvc.GenerateLocationIDNumRequest request) {
            return base.Channel.GenerateLocationIDNumAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetShipMiscDefaults(EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest request) {
            return base.Channel.GetShipMiscDefaults(request);
        }
        
        public void GetShipMiscDefaults(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string miscCode) {
            EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest();
            inValue.ds = ds;
            inValue.miscCode = miscCode;
            EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetShipMiscDefaults(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsResponse> GetShipMiscDefaultsAsync(EpicWAS.Epicor.CustShipSvc.GetShipMiscDefaultsRequest request) {
            return base.Channel.GetShipMiscDefaultsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetShipToAddrResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetShipToAddr(EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest request) {
            return base.Channel.GetShipToAddr(request);
        }
        
        public void GetShipToAddr(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string shipToNum) {
            EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest();
            inValue.ds = ds;
            inValue.shipToNum = shipToNum;
            EpicWAS.Epicor.CustShipSvc.GetShipToAddrResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetShipToAddr(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetShipToAddrResponse> GetShipToAddrAsync(EpicWAS.Epicor.CustShipSvc.GetShipToAddrRequest request) {
            return base.Channel.GetShipToAddrAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetTranDocTypeID(EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest request) {
            return base.Channel.GetTranDocTypeID(request);
        }
        
        public void GetTranDocTypeID(string ipTranDocTypeID, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest();
            inValue.ipTranDocTypeID = ipTranDocTypeID;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetTranDocTypeID(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDResponse> GetTranDocTypeIDAsync(EpicWAS.Epicor.CustShipSvc.GetTranDocTypeIDRequest request) {
            return base.Channel.GetTranDocTypeIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CalculateWarrantyExpiration(EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest request) {
            return base.Channel.CalculateWarrantyExpiration(request);
        }
        
        public void CalculateWarrantyExpiration(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int orderLine, int orderRelNum, System.Nullable<System.DateTime> effectiveDate) {
            EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest inValue = new EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest();
            inValue.ds = ds;
            inValue.orderLine = orderLine;
            inValue.orderRelNum = orderRelNum;
            inValue.effectiveDate = effectiveDate;
            EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CalculateWarrantyExpiration(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationResponse> CalculateWarrantyExpirationAsync(EpicWAS.Epicor.CustShipSvc.CalculateWarrantyExpirationRequest request) {
            return base.Channel.CalculateWarrantyExpirationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetWarrantyInfo(EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest request) {
            return base.Channel.GetWarrantyInfo(request);
        }
        
        public void GetWarrantyInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, string warrantyCode, int orderLine, int orderRelNum) {
            EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest();
            inValue.ds = ds;
            inValue.warrantyCode = warrantyCode;
            inValue.orderLine = orderLine;
            inValue.orderRelNum = orderRelNum;
            EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetWarrantyInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoResponse> GetWarrantyInfoAsync(EpicWAS.Epicor.CustShipSvc.GetWarrantyInfoRequest request) {
            return base.Channel.GetWarrantyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ClearWarrantyInfo(EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest request) {
            return base.Channel.ClearWarrantyInfo(request);
        }
        
        public void ClearWarrantyInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int orderLine, int orderRelNum) {
            EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest();
            inValue.ds = ds;
            inValue.orderLine = orderLine;
            inValue.orderRelNum = orderRelNum;
            EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ClearWarrantyInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoResponse> ClearWarrantyInfoAsync(EpicWAS.Epicor.CustShipSvc.ClearWarrantyInfoRequest request) {
            return base.Channel.ClearWarrantyInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.GetWhseInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.GetWhseInfo(EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest request) {
            return base.Channel.GetWhseInfo(request);
        }
        
        public void GetWhseInfo(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, int packLine, string whseCode, string whseField) {
            EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest();
            inValue.ds = ds;
            inValue.packLine = packLine;
            inValue.whseCode = whseCode;
            inValue.whseField = whseField;
            EpicWAS.Epicor.CustShipSvc.GetWhseInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).GetWhseInfo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.GetWhseInfoResponse> GetWhseInfoAsync(EpicWAS.Epicor.CustShipSvc.GetWhseInfoRequest request) {
            return base.Channel.GetWhseInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.HHCreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest request) {
            return base.Channel.HHCreateMassShipDtl(request);
        }
        
        public void HHCreateMassShipDtl(int packNum, int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest();
            inValue.packNum = packNum;
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).HHCreateMassShipDtl(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlResponse> HHCreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.HHCreateMassShipDtlRequest request) {
            return base.Channel.HHCreateMassShipDtlAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.HHGetOrderInfo(EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest request) {
            return base.Channel.HHGetOrderInfo(request);
        }
        
        public string HHGetOrderInfo(int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest inValue = new EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest();
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).HHGetOrderInfo(inValue);
            ds = retVal.ds;
            return retVal.creditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoResponse> HHGetOrderInfoAsync(EpicWAS.Epicor.CustShipSvc.HHGetOrderInfoRequest request) {
            return base.Channel.HHGetOrderInfoAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.HHSetDtlDefaultValues(EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest request) {
            return base.Channel.HHSetDtlDefaultValues(request);
        }
        
        public void HHSetDtlDefaultValues(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest inValue = new EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).HHSetDtlDefaultValues(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesResponse> HHSetDtlDefaultValuesAsync(EpicWAS.Epicor.CustShipSvc.HHSetDtlDefaultValuesRequest request) {
            return base.Channel.HHSetDtlDefaultValuesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.MarkShipmentLines(EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest request) {
            return base.Channel.MarkShipmentLines(request);
        }
        
        public void MarkShipmentLines(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest inValue = new EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).MarkShipmentLines(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesResponse> MarkShipmentLinesAsync(EpicWAS.Epicor.CustShipSvc.MarkShipmentLinesRequest request) {
            return base.Channel.MarkShipmentLinesAsync(request);
        }
        
        public void PhantomStatusCheck(int ipPackNum) {
            base.Channel.PhantomStatusCheck(ipPackNum);
        }
        
        public System.Threading.Tasks.Task PhantomStatusCheckAsync(int ipPackNum) {
            return base.Channel.PhantomStatusCheckAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POChangeStageResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POChangeStage(EpicWAS.Epicor.CustShipSvc.POChangeStageRequest request) {
            return base.Channel.POChangeStage(request);
        }
        
        public void POChangeStage(ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.POChangeStageRequest inValue = new EpicWAS.Epicor.CustShipSvc.POChangeStageRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POChangeStageResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POChangeStage(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POChangeStageResponse> POChangeStageAsync(EpicWAS.Epicor.CustShipSvc.POChangeStageRequest request) {
            return base.Channel.POChangeStageAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POChangeStatusResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POChangeStatus(EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest request) {
            return base.Channel.POChangeStatus(request);
        }
        
        public void POChangeStatus(string ipStatus, bool ipResetCODCharges, bool ipResetInsCharges, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest inValue = new EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest();
            inValue.ipStatus = ipStatus;
            inValue.ipResetCODCharges = ipResetCODCharges;
            inValue.ipResetInsCharges = ipResetInsCharges;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POChangeStatusResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POChangeStatus(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POChangeStatusResponse> POChangeStatusAsync(EpicWAS.Epicor.CustShipSvc.POChangeStatusRequest request) {
            return base.Channel.POChangeStatusAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POFindBufferResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POFindBuffer(EpicWAS.Epicor.CustShipSvc.POFindBufferRequest request) {
            return base.Channel.POFindBuffer(request);
        }
        
        public int POFindBuffer(ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, out System.Guid rowident) {
            EpicWAS.Epicor.CustShipSvc.POFindBufferRequest inValue = new EpicWAS.Epicor.CustShipSvc.POFindBufferRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POFindBufferResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POFindBuffer(inValue);
            rowident = retVal.rowident;
            ds = retVal.ds;
            return retVal.found;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POFindBufferResponse> POFindBufferAsync(EpicWAS.Epicor.CustShipSvc.POFindBufferRequest request) {
            return base.Channel.POFindBufferAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POFindBufWhseBinLot(EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest request) {
            return base.Channel.POFindBufWhseBinLot(request);
        }
        
        public int POFindBufWhseBinLot(ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, out System.Guid rowident) {
            EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest inValue = new EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POFindBufWhseBinLot(inValue);
            rowident = retVal.rowident;
            ds = retVal.ds;
            return retVal.found;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotResponse> POFindBufWhseBinLotAsync(EpicWAS.Epicor.CustShipSvc.POFindBufWhseBinLotRequest request) {
            return base.Channel.POFindBufWhseBinLotAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POGetDtlListResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POGetDtlList(EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest request) {
            return base.Channel.POGetDtlList(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetDtlList(int ipPackNum, string ipPCID, int ipOrderNum, string ipPackMode, out string cWarning) {
            EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest inValue = new EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipPCID = ipPCID;
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipPackMode = ipPackMode;
            EpicWAS.Epicor.CustShipSvc.POGetDtlListResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POGetDtlList(inValue);
            cWarning = retVal.cWarning;
            return retVal.POGetDtlListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetDtlListResponse> POGetDtlListAsync(EpicWAS.Epicor.CustShipSvc.POGetDtlListRequest request) {
            return base.Channel.POGetDtlListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POPCIDGetDtlList(EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest request) {
            return base.Channel.POPCIDGetDtlList(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POPCIDGetDtlList(int ipPackNum, string ipPCID, int ipOrderNum, string ipPackMode, out string cWarning) {
            EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest inValue = new EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipPCID = ipPCID;
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipPackMode = ipPackMode;
            EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POPCIDGetDtlList(inValue);
            cWarning = retVal.cWarning;
            return retVal.POPCIDGetDtlListResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListResponse> POPCIDGetDtlListAsync(EpicWAS.Epicor.CustShipSvc.POPCIDGetDtlListRequest request) {
            return base.Channel.POPCIDGetDtlListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POGetNewResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POGetNew(EpicWAS.Epicor.CustShipSvc.POGetNewRequest request) {
            return base.Channel.POGetNew(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.PackOutTableset POGetNew(int ipOrderNum, int ipPackNum, out string pcWarningMsg) {
            EpicWAS.Epicor.CustShipSvc.POGetNewRequest inValue = new EpicWAS.Epicor.CustShipSvc.POGetNewRequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipPackNum = ipPackNum;
            EpicWAS.Epicor.CustShipSvc.POGetNewResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POGetNew(inValue);
            pcWarningMsg = retVal.pcWarningMsg;
            return retVal.POGetNewResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetNewResponse> POGetNewAsync(EpicWAS.Epicor.CustShipSvc.POGetNewRequest request) {
            return base.Channel.POGetNewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.DeleteKitComponents(EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest request) {
            return base.Channel.DeleteKitComponents(request);
        }
        
        public void DeleteKitComponents(int ipPackNum, int ipPackLine, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest inValue = new EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipPackLine = ipPackLine;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).DeleteKitComponents(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsResponse> DeleteKitComponentsAsync(EpicWAS.Epicor.CustShipSvc.DeleteKitComponentsRequest request) {
            return base.Channel.DeleteKitComponentsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdateOrderRelOnKitChildren(EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest request) {
            return base.Channel.UpdateOrderRelOnKitChildren(request);
        }
        
        public void UpdateOrderRelOnKitChildren(int ipPackNum, int ipPackLine, int ipOrderRelNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipPackLine = ipPackLine;
            inValue.ipOrderRelNum = ipOrderRelNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdateOrderRelOnKitChildren(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenResponse> UpdateOrderRelOnKitChildrenAsync(EpicWAS.Epicor.CustShipSvc.UpdateOrderRelOnKitChildrenRequest request) {
            return base.Channel.UpdateOrderRelOnKitChildrenAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POGetShipToResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POGetShipTo(EpicWAS.Epicor.CustShipSvc.POGetShipToRequest request) {
            return base.Channel.POGetShipTo(request);
        }
        
        public void POGetShipTo(ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.POGetShipToRequest inValue = new EpicWAS.Epicor.CustShipSvc.POGetShipToRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POGetShipToResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POGetShipTo(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POGetShipToResponse> POGetShipToAsync(EpicWAS.Epicor.CustShipSvc.POGetShipToRequest request) {
            return base.Channel.POGetShipToAsync(request);
        }
        
        public string PostUpdate(int ipPackNum) {
            return base.Channel.PostUpdate(ipPackNum);
        }
        
        public System.Threading.Tasks.Task<string> PostUpdateAsync(int ipPackNum) {
            return base.Channel.PostUpdateAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POUpdateResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POUpdate(EpicWAS.Epicor.CustShipSvc.POUpdateRequest request) {
            return base.Channel.POUpdate(request);
        }
        
        public int POUpdate(System.Guid ipSourceRowID, string poLinkValues, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds) {
            EpicWAS.Epicor.CustShipSvc.POUpdateRequest inValue = new EpicWAS.Epicor.CustShipSvc.POUpdateRequest();
            inValue.ipSourceRowID = ipSourceRowID;
            inValue.poLinkValues = poLinkValues;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POUpdateResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POUpdate(inValue);
            ds = retVal.ds;
            return retVal.opPackNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POUpdateResponse> POUpdateAsync(EpicWAS.Epicor.CustShipSvc.POUpdateRequest request) {
            return base.Channel.POUpdateAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POUpdateAndDisplay(EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest request) {
            return base.Channel.POUpdateAndDisplay(request);
        }
        
        public int POUpdateAndDisplay(System.Guid ipSourceRowID, string poLinkValues, int currLine, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, out string dspLegalNumMessage) {
            EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest inValue = new EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest();
            inValue.ipSourceRowID = ipSourceRowID;
            inValue.poLinkValues = poLinkValues;
            inValue.currLine = currLine;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POUpdateAndDisplay(inValue);
            ds = retVal.ds;
            dspLegalNumMessage = retVal.dspLegalNumMessage;
            return retVal.opPackNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayResponse> POUpdateAndDisplayAsync(EpicWAS.Epicor.CustShipSvc.POUpdateAndDisplayRequest request) {
            return base.Channel.POUpdateAndDisplayAsync(request);
        }
        
        public bool POValidateOrder(int ipCustNum, int ipOrderNum) {
            return base.Channel.POValidateOrder(ipCustNum, ipOrderNum);
        }
        
        public System.Threading.Tasks.Task<bool> POValidateOrderAsync(int ipCustNum, int ipOrderNum) {
            return base.Channel.POValidateOrderAsync(ipCustNum, ipOrderNum);
        }
        
        public void POValidateOrderRel(int ipPackNum, int ipOrderNum, int ipOrderLine, int ipOrderRelNum) {
            base.Channel.POValidateOrderRel(ipPackNum, ipOrderNum, ipOrderLine, ipOrderRelNum);
        }
        
        public System.Threading.Tasks.Task POValidateOrderRelAsync(int ipPackNum, int ipOrderNum, int ipOrderLine, int ipOrderRelNum) {
            return base.Channel.POValidateOrderRelAsync(ipPackNum, ipOrderNum, ipOrderLine, ipOrderRelNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.POValidatePartResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.POValidatePart(EpicWAS.Epicor.CustShipSvc.POValidatePartRequest request) {
            return base.Channel.POValidatePart(request);
        }
        
        public bool POValidatePart(string ipPartNum, int ipOrderNum, ref EpicWAS.Epicor.CustShipSvc.PackOutTableset ds, out string vMsgText, out bool vSubAvail, out string vMsgType) {
            EpicWAS.Epicor.CustShipSvc.POValidatePartRequest inValue = new EpicWAS.Epicor.CustShipSvc.POValidatePartRequest();
            inValue.ipPartNum = ipPartNum;
            inValue.ipOrderNum = ipOrderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.POValidatePartResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).POValidatePart(inValue);
            ds = retVal.ds;
            vMsgText = retVal.vMsgText;
            vSubAvail = retVal.vSubAvail;
            vMsgType = retVal.vMsgType;
            return retVal.opValidPart;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.POValidatePartResponse> POValidatePartAsync(EpicWAS.Epicor.CustShipSvc.POValidatePartRequest request) {
            return base.Channel.POValidatePartAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.PreCreateMassShipDtl(EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest request) {
            return base.Channel.PreCreateMassShipDtl(request);
        }
        
        public string PreCreateMassShipDtl(int packNum, int orderNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest inValue = new EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest();
            inValue.packNum = packNum;
            inValue.orderNum = orderNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).PreCreateMassShipDtl(inValue);
            ds = retVal.ds;
            return retVal.warnMsg;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlResponse> PreCreateMassShipDtlAsync(EpicWAS.Epicor.CustShipSvc.PreCreateMassShipDtlRequest request) {
            return base.Channel.PreCreateMassShipDtlAsync(request);
        }
        
        public bool ProcessKitChildern(int ipOrderNum, int ipOrderLine) {
            return base.Channel.ProcessKitChildern(ipOrderNum, ipOrderLine);
        }
        
        public System.Threading.Tasks.Task<bool> ProcessKitChildernAsync(int ipOrderNum, int ipOrderLine) {
            return base.Channel.ProcessKitChildernAsync(ipOrderNum, ipOrderLine);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.PrePickedOrdersResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.PrePickedOrders(EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest request) {
            return base.Channel.PrePickedOrders(request);
        }
        
        public bool PrePickedOrders(ref EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds, out string vMessage) {
            EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest inValue = new EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.PrePickedOrdersResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).PrePickedOrders(inValue);
            ds = retVal.ds;
            vMessage = retVal.vMessage;
            return retVal.PrePickedOrdersResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.PrePickedOrdersResponse> PrePickedOrdersAsync(EpicWAS.Epicor.CustShipSvc.PrePickedOrdersRequest request) {
            return base.Channel.PrePickedOrdersAsync(request);
        }
        
        public void PrintSlip(int packNum, bool printPreview) {
            base.Channel.PrintSlip(packNum, printPreview);
        }
        
        public System.Threading.Tasks.Task PrintSlipAsync(int packNum, bool printPreview) {
            return base.Channel.PrintSlipAsync(packNum, printPreview);
        }
        
        public void ProcessMassShipKit() {
            base.Channel.ProcessMassShipKit();
        }
        
        public System.Threading.Tasks.Task ProcessMassShipKitAsync() {
            return base.Channel.ProcessMassShipKitAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ProcessPickedOrder(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest request) {
            return base.Channel.ProcessPickedOrder(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrder(bool pConsolidate, bool skipDelete, ref EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds, out string vMessage) {
            EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest inValue = new EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest();
            inValue.pConsolidate = pConsolidate;
            inValue.skipDelete = skipDelete;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ProcessPickedOrder(inValue);
            vMessage = retVal.vMessage;
            ds = retVal.ds;
            return retVal.ProcessPickedOrderResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderResponse> ProcessPickedOrderAsync(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderRequest request) {
            return base.Channel.ProcessPickedOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ProcessPickedOrderHH(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest request) {
            return base.Channel.ProcessPickedOrderHH(request);
        }
        
        public EpicWAS.Epicor.CustShipSvc.ShipHeadListTableset ProcessPickedOrderHH(bool pConsolidate, bool skipDelete, ref EpicWAS.Epicor.CustShipSvc.CustShipPickedOrdersTableset ds, out string vMessage) {
            EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest inValue = new EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest();
            inValue.pConsolidate = pConsolidate;
            inValue.skipDelete = skipDelete;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ProcessPickedOrderHH(inValue);
            vMessage = retVal.vMessage;
            ds = retVal.ds;
            return retVal.ProcessPickedOrderHHResult;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHResponse> ProcessPickedOrderHHAsync(EpicWAS.Epicor.CustShipSvc.ProcessPickedOrderHHRequest request) {
            return base.Channel.ProcessPickedOrderHHAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.RebuildShipUPSResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.RebuildShipUPS(EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest request) {
            return base.Channel.RebuildShipUPS(request);
        }
        
        public void RebuildShipUPS(int ipPackNum, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest inValue = new EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.RebuildShipUPSResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).RebuildShipUPS(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.RebuildShipUPSResponse> RebuildShipUPSAsync(EpicWAS.Epicor.CustShipSvc.RebuildShipUPSRequest request) {
            return base.Channel.RebuildShipUPSAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.SetUPSQVEnable(EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnable(request);
        }
        
        public void SetUPSQVEnable(bool ipQVEnable, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest inValue = new EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest();
            inValue.ipQVEnable = ipQVEnable;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).SetUPSQVEnable(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableResponse> SetUPSQVEnableAsync(EpicWAS.Epicor.CustShipSvc.SetUPSQVEnableRequest request) {
            return base.Channel.SetUPSQVEnableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.SetUPSQVShipStatus(EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest request) {
            return base.Channel.SetUPSQVShipStatus(request);
        }
        
        public void SetUPSQVShipStatus(string ipShipStatus, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest inValue = new EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest();
            inValue.ipShipStatus = ipShipStatus;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).SetUPSQVShipStatus(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusResponse> SetUPSQVShipStatusAsync(EpicWAS.Epicor.CustShipSvc.SetUPSQVShipStatusRequest request) {
            return base.Channel.SetUPSQVShipStatusAsync(request);
        }
        
        public string StageWarning(int iPackNum, string ipShipmentType) {
            return base.Channel.StageWarning(iPackNum, ipShipmentType);
        }
        
        public System.Threading.Tasks.Task<string> StageWarningAsync(int iPackNum, string ipShipmentType) {
            return base.Channel.StageWarningAsync(iPackNum, ipShipmentType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UndoShipAllResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UndoShipAll(EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest request) {
            return base.Channel.UndoShipAll(request);
        }
        
        public void UndoShipAll(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest inValue = new EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UndoShipAllResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UndoShipAll(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UndoShipAllResponse> UndoShipAllAsync(EpicWAS.Epicor.CustShipSvc.UndoShipAllRequest request) {
            return base.Channel.UndoShipAllAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdateManifestChargeAmts(EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest request) {
            return base.Channel.UpdateManifestChargeAmts(request);
        }
        
        public void UpdateManifestChargeAmts(string ipAmountType, bool ipAction, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest();
            inValue.ipAmountType = ipAmountType;
            inValue.ipAction = ipAction;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdateManifestChargeAmts(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsResponse> UpdateManifestChargeAmtsAsync(EpicWAS.Epicor.CustShipSvc.UpdateManifestChargeAmtsRequest request) {
            return base.Channel.UpdateManifestChargeAmtsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdateMasterResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdateMaster(EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMaster(request);
        }
        
        public string UpdateMaster(
                    ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, 
                    bool doValidateCreditHold, 
                    bool doCheckShipDtl, 
                    bool doLotValidation, 
                    bool doCheckOrderComplete, 
                    bool doPostUpdate, 
                    bool doCheckCompliance, 
                    bool ipShippedFlagChanged, 
                    int ipPackNum, 
                    int ipBTCustNum, 
                    out string opCompleteMessage, 
                    out string opShippingMessage, 
                    out string opLotMessage, 
                    out string opInventoryMessage, 
                    out string opLockQtyMessage, 
                    out string opAllocationMessage, 
                    out string opPartListNeedsAttr, 
                    out string opLotListNeedsAttr, 
                    out string shipCreditMsg, 
                    out bool cError, 
                    out bool compError, 
                    out string msg, 
                    out string opPostUpdMessage, 
                    out bool updateComplete, 
                    out bool checkComplianceError, 
                    out bool changeStatusError, 
                    out bool checkShipDtlAgain) {
            EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest();
            inValue.ds = ds;
            inValue.doValidateCreditHold = doValidateCreditHold;
            inValue.doCheckShipDtl = doCheckShipDtl;
            inValue.doLotValidation = doLotValidation;
            inValue.doCheckOrderComplete = doCheckOrderComplete;
            inValue.doPostUpdate = doPostUpdate;
            inValue.doCheckCompliance = doCheckCompliance;
            inValue.ipShippedFlagChanged = ipShippedFlagChanged;
            inValue.ipPackNum = ipPackNum;
            inValue.ipBTCustNum = ipBTCustNum;
            EpicWAS.Epicor.CustShipSvc.UpdateMasterResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdateMaster(inValue);
            ds = retVal.ds;
            opCompleteMessage = retVal.opCompleteMessage;
            opShippingMessage = retVal.opShippingMessage;
            opLotMessage = retVal.opLotMessage;
            opInventoryMessage = retVal.opInventoryMessage;
            opLockQtyMessage = retVal.opLockQtyMessage;
            opAllocationMessage = retVal.opAllocationMessage;
            opPartListNeedsAttr = retVal.opPartListNeedsAttr;
            opLotListNeedsAttr = retVal.opLotListNeedsAttr;
            shipCreditMsg = retVal.shipCreditMsg;
            cError = retVal.cError;
            compError = retVal.compError;
            msg = retVal.msg;
            opPostUpdMessage = retVal.opPostUpdMessage;
            updateComplete = retVal.updateComplete;
            checkComplianceError = retVal.checkComplianceError;
            changeStatusError = retVal.changeStatusError;
            checkShipDtlAgain = retVal.checkShipDtlAgain;
            return retVal.opReleaseMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdateMasterResponse> UpdateMasterAsync(EpicWAS.Epicor.CustShipSvc.UpdateMasterRequest request) {
            return base.Channel.UpdateMasterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdatePackCODWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest request) {
            return base.Channel.UpdatePackCODWithCarton(request);
        }
        
        public void UpdatePackCODWithCarton(int ipPackNum, int ipCaseNum, decimal ipOldCOD, decimal ipCOD, bool ipFlag, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipCaseNum = ipCaseNum;
            inValue.ipOldCOD = ipOldCOD;
            inValue.ipCOD = ipCOD;
            inValue.ipFlag = ipFlag;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdatePackCODWithCarton(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonResponse> UpdatePackCODWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackCODWithCartonRequest request) {
            return base.Channel.UpdatePackCODWithCartonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdatePackDeclaredWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest request) {
            return base.Channel.UpdatePackDeclaredWithCarton(request);
        }
        
        public void UpdatePackDeclaredWithCarton(int ipPackNum, int ipCaseNum, decimal ipOldDeclared, decimal ipDeclared, bool ipDeclaredFlag, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipCaseNum = ipCaseNum;
            inValue.ipOldDeclared = ipOldDeclared;
            inValue.ipDeclared = ipDeclared;
            inValue.ipDeclaredFlag = ipDeclaredFlag;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdatePackDeclaredWithCarton(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonResponse> UpdatePackDeclaredWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackDeclaredWithCartonRequest request) {
            return base.Channel.UpdatePackDeclaredWithCartonAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.UpdatePackWeightWithCarton(EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest request) {
            return base.Channel.UpdatePackWeightWithCarton(request);
        }
        
        public void UpdatePackWeightWithCarton(int ipPackNum, decimal ipOldWeight, decimal ipWeight, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest inValue = new EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipOldWeight = ipOldWeight;
            inValue.ipWeight = ipWeight;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).UpdatePackWeightWithCarton(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonResponse> UpdatePackWeightWithCartonAsync(EpicWAS.Epicor.CustShipSvc.UpdatePackWeightWithCartonRequest request) {
            return base.Channel.UpdatePackWeightWithCartonAsync(request);
        }
        
        public void ValidateBinCode(string ipWhse, string ipBinNum) {
            base.Channel.ValidateBinCode(ipWhse, ipBinNum);
        }
        
        public System.Threading.Tasks.Task ValidateBinCodeAsync(string ipWhse, string ipBinNum) {
            return base.Channel.ValidateBinCodeAsync(ipWhse, ipBinNum);
        }
        
        public bool ValidatePackNum(int ipPackNum) {
            return base.Channel.ValidatePackNum(ipPackNum);
        }
        
        public System.Threading.Tasks.Task<bool> ValidatePackNumAsync(int ipPackNum) {
            return base.Channel.ValidatePackNumAsync(ipPackNum);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ValidateCreditHold(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest request) {
            return base.Channel.ValidateCreditHold(request);
        }
        
        public string ValidateCreditHold(int ipValPackNum, int ipValBTCustNum, out bool opcError) {
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest inValue = new EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest();
            inValue.ipValPackNum = ipValPackNum;
            inValue.ipValBTCustNum = ipValBTCustNum;
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ValidateCreditHold(inValue);
            opcError = retVal.opcError;
            return retVal.opCreditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldResponse> ValidateCreditHoldAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldRequest request) {
            return base.Channel.ValidateCreditHoldAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPOResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ValidateCreditHoldPO(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest request) {
            return base.Channel.ValidateCreditHoldPO(request);
        }
        
        public string ValidateCreditHoldPO(int ipOrderNum, int ipPackNum, out string opAgingMessage) {
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest inValue = new EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest();
            inValue.ipOrderNum = ipOrderNum;
            inValue.ipPackNum = ipPackNum;
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPOResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ValidateCreditHoldPO(inValue);
            opAgingMessage = retVal.opAgingMessage;
            return retVal.opCreditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPOResponse> ValidateCreditHoldPOAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldPORequest request) {
            return base.Channel.ValidateCreditHoldPOAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ValidateCreditHoldSSC(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest request) {
            return base.Channel.ValidateCreditHoldSSC(request);
        }
        
        public string ValidateCreditHoldSSC(int ipPackNum, string ipShipmentType, out bool opcError) {
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest inValue = new EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest();
            inValue.ipPackNum = ipPackNum;
            inValue.ipShipmentType = ipShipmentType;
            EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ValidateCreditHoldSSC(inValue);
            opcError = retVal.opcError;
            return retVal.opCreditMessage;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCResponse> ValidateCreditHoldSSCAsync(EpicWAS.Epicor.CustShipSvc.ValidateCreditHoldSSCRequest request) {
            return base.Channel.ValidateCreditHoldSSCAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.ValidateKitPartResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.ValidateKitPart(EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest request) {
            return base.Channel.ValidateKitPart(request);
        }
        
        public void ValidateKitPart(int packLine, ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds) {
            EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest inValue = new EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest();
            inValue.packLine = packLine;
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.ValidateKitPartResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).ValidateKitPart(inValue);
            ds = retVal.ds;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.ValidateKitPartResponse> ValidateKitPartAsync(EpicWAS.Epicor.CustShipSvc.ValidateKitPartRequest request) {
            return base.Channel.ValidateKitPartAsync(request);
        }
        
        public void ValidateLocationIDNumbers(string[] IDNumList, string ipPartNum, string ipIDNumProposed, int ipPackNum, int ipPackLine) {
            base.Channel.ValidateLocationIDNumbers(IDNumList, ipPartNum, ipIDNumProposed, ipPackNum, ipPackLine);
        }
        
        public System.Threading.Tasks.Task ValidateLocationIDNumbersAsync(string[] IDNumList, string ipPartNum, string ipIDNumProposed, int ipPackNum, int ipPackLine) {
            return base.Channel.ValidateLocationIDNumbersAsync(IDNumList, ipPartNum, ipIDNumProposed, ipPackNum, ipPackLine);
        }
        
        public bool ValidateSN(string ipSerialNum, string ipPartNum, string ipJobNum, decimal ipOurJobshipQty, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, bool ipShipFromWIP, string ipWarehouseCode, string ipBinNum) {
            return base.Channel.ValidateSN(ipSerialNum, ipPartNum, ipJobNum, ipOurJobshipQty, ipOurInvShipQty, ipOrderNum, ipOrderLine, ipOrderRelNum, ipShipFromWIP, ipWarehouseCode, ipBinNum);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateSNAsync(string ipSerialNum, string ipPartNum, string ipJobNum, decimal ipOurJobshipQty, decimal ipOurInvShipQty, int ipOrderNum, int ipOrderLine, int ipOrderRelNum, bool ipShipFromWIP, string ipWarehouseCode, string ipBinNum) {
            return base.Channel.ValidateSNAsync(ipSerialNum, ipPartNum, ipJobNum, ipOurJobshipQty, ipOurInvShipQty, ipOrderNum, ipOrderLine, ipOrderRelNum, ipShipFromWIP, ipWarehouseCode, ipBinNum);
        }
        
        public EpicWAS.Epicor.CustShipSvc.CustShipTableset VoidLegalNumber(int ipPackNum, string ipVoidedReason) {
            return base.Channel.VoidLegalNumber(ipPackNum, ipVoidedReason);
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CustShipTableset> VoidLegalNumberAsync(int ipPackNum, string ipVoidedReason) {
            return base.Channel.VoidLegalNumberAsync(ipPackNum, ipVoidedReason);
        }
        
        public string GetAvailTranDocTypes() {
            return base.Channel.GetAvailTranDocTypes();
        }
        
        public System.Threading.Tasks.Task<string> GetAvailTranDocTypesAsync() {
            return base.Channel.GetAvailTranDocTypesAsync();
        }
        
        public string GetCodeDescList(string tableName, string fieldName) {
            return base.Channel.GetCodeDescList(tableName, fieldName);
        }
        
        public System.Threading.Tasks.Task<string> GetCodeDescListAsync(string tableName, string fieldName) {
            return base.Channel.GetCodeDescListAsync(tableName, fieldName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.NegativeInventoryTest(EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTest(request);
        }
        
        public string NegativeInventoryTest(string ipPartNum, string ipWarehouseCode, string ipBinNum, string ipLotNum, string ipPCID, string ipDimCode, decimal ipDimConvFactor, decimal ipTranQty, out string pcMessage) {
            EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest inValue = new EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest();
            inValue.ipPartNum = ipPartNum;
            inValue.ipWarehouseCode = ipWarehouseCode;
            inValue.ipBinNum = ipBinNum;
            inValue.ipLotNum = ipLotNum;
            inValue.ipPCID = ipPCID;
            inValue.ipDimCode = ipDimCode;
            inValue.ipDimConvFactor = ipDimConvFactor;
            inValue.ipTranQty = ipTranQty;
            EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).NegativeInventoryTest(inValue);
            pcMessage = retVal.pcMessage;
            return retVal.opNegQtyAction;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestResponse> NegativeInventoryTestAsync(EpicWAS.Epicor.CustShipSvc.NegativeInventoryTestRequest request) {
            return base.Channel.NegativeInventoryTestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationResponse EpicWAS.Epicor.CustShipSvc.CustShipSvcContract.CheckPCBinOutLocation(EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest request) {
            return base.Channel.CheckPCBinOutLocation(request);
        }
        
        public int CheckPCBinOutLocation(ref EpicWAS.Epicor.CustShipSvc.CustShipTableset ds, out bool belongToAnotherPC, out string pcOutsideMessage) {
            EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest inValue = new EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest();
            inValue.ds = ds;
            EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationResponse retVal = ((EpicWAS.Epicor.CustShipSvc.CustShipSvcContract)(this)).CheckPCBinOutLocation(inValue);
            ds = retVal.ds;
            belongToAnotherPC = retVal.belongToAnotherPC;
            pcOutsideMessage = retVal.pcOutsideMessage;
            return retVal.lineNum;
        }
        
        public System.Threading.Tasks.Task<EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationResponse> CheckPCBinOutLocationAsync(EpicWAS.Epicor.CustShipSvc.CheckPCBinOutLocationRequest request) {
            return base.Channel.CheckPCBinOutLocationAsync(request);
        }
    }
}
